/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface IntegrationOsOptions {
  serverUrl: string
}
export interface UnifiedOptions {
  responsePassthrough?: boolean
  passthroughHeaders?: Record<string, string>
  passthroughQuery?: Record<string, string>
}
export interface DeleteOptions {
  modifyToken?: string
}
export interface Response<Type> {
  unified?: Type
  passthrough?: any
  meta: object
  headers: Record<string, string>
  statusCode: number
}
export interface Count {
  count: number
}
export interface Pagination {
  limit?: number
  pageSize: number
  nextCursor?: string
  previousCursor?: string
}
export interface ListResponse<Type> {
  unified: Array<Type>
  passthrough?: any
  pagination: Pagination
  meta: object
  headers: Record<string, string>
  statusCode: number
}
export interface ListFilter {
  createdAfter?: string
  createdBefore?: string
  updatedAfter?: string
  updatedBefore?: string
  limit?: number
  cursor?: string
}
export interface AIUsage {
  completionTokens?: number
  promptTokens?: number
  totalTokens?: number
}
export interface AIMessages {
  finishReason?: string
  role?: string
  index?: number
  content?: string
}
export interface AIChats {
  topK?: number
  createdAt?: string
  systemFingerprint?: string
  modelUsed?: string
  topP?: number
  maxTokens?: number
  objectType?: string
  stopSequences?: Array<string>
  usage?: AIUsage
  seed?: number
  temperature?: number
  messages?: Array<AIMessages>
  id?: string
}
export interface TaxDetails {
  expirationDate?: string
  id?: string
  category?: string
  updatedAt?: string
  name?: string
  country?: string
  active?: boolean
  effectiveDate?: string
  currency?: Currency
  rate?: number
  taxCode?: string
  details?: string
  isTaxIncludedInPrice?: boolean
  amount?: number
  jurisdiction?: string
  taxRegistrationNumber?: string
  region?: string
  deleted?: boolean
  createdAt?: string
}
export interface Evidence {
  refundPolicyDisclosure?: string
  customerName?: string
  serviceDocumentation?: string
  shippingDate?: string
  cancellationPolicy?: string
  customerEmailAddress?: string
  productDescription?: string
  billingAddress?: string
  cancellationPolicyDisclosure?: string
  customerPurchaseIp?: string
  customerSignature?: string
  duplicateChargeDocumentation?: string
  cancellationRebuttal?: string
  accessActivityLog?: string
  duplicateChargeExplanation?: string
  customerCommunication?: string
  refundPolicy?: string
  refundRefusalExplanation?: string
  shippingCarrier?: string
  shippingDocumentation?: string
  shippingTrackingNumber?: string
  uncategorizedFile?: string
  uncategorizedText?: string
  duplicateChargeId?: string
  shippingAddress?: string
  receipt?: string
  serviceDate?: string
}
export interface Disputes {
  customerId?: string
  evidence?: Evidence
  reason?: string
  amount?: number
  chargeRefundable?: boolean
  deleted?: boolean
  transactionId?: string
  version?: string
  created?: string
  id?: string
  charge?: string
  metadata?: Metadata
  active?: boolean
  updated?: string
  currency?: Currency
  status?: FinancialDisputeStatus
  notes?: string
}
export interface Reactions {
  userId?: string
  chatId?: string
  createdAt?: string
  messageId?: string
  type?: ReactionType
}
export interface Participants {
  userId?: string
  displayName?: string
  joinedAt?: string
  status?: ParticipantEngagementStatus
  type?: CommunicationRole
}
export interface Messages {
  deliveryStatus?: MessageDeliveryStatus
  priority?: PriorityLevel
  createdAt?: string
  deleted?: boolean
  modifyToken?: string
  id?: string
  readStatus?: MessageReadStatus
  receiverId?: string
  updatedAt?: string
  chatId?: string
  threadId?: string
  content?: string
  timestamp?: string
  replyToMessageId?: string
  type?: MessageContentType
  reactions?: Array<Reactions>
  senderId?: string
  active?: boolean
  attachments?: Array<Attachments>
  metadata?: Array<Metadata>
}
export interface Chats {
  participants?: Array<Participants>
  type?: ChatType
  lastMessage?: Messages
  createdAt?: string
  metadata?: string
  updatedAt?: string
  status?: ConversationStatus
  lastReadMessageId?: string
  unreadCount?: number
  modifyToken?: string
  id?: string
  isPinned?: boolean
  messages?: Array<Messages>
  title?: string
}
export interface ShareholderEquityDetails {
  treasuryStock?: number
  commonStock?: number
  preferredStock?: number
  retainedEarnings?: number
  accumulatedOtherComprehensiveIncome?: number
}
export interface IncomeTaxExpenseDetails {
  currentIncomeTax?: number
  deferredIncomeTax?: number
  taxAllowanceCredit?: number
}
export interface OperatingExpensesDetails {
  salesGeneralAndAdministrativeExpenses?: number
  researchAndDevelopmentExpenses?: number
  otherOperatingExpenses?: number
}
export interface RevenueDetails {
  salesRevenue?: number
  serviceRevenue?: number
  otherRevenue?: number
}
export interface ShippingItem {
  quantity?: number
  value?: number
  weightUnit?: string
  sku?: string
  productId?: string
  dimensions?: Dimensions
  id?: string
  productName?: string
  weight?: number
}
export interface BillingDetails {
  note?: string
  defaultPaymentMethod?: PaymentMethods
  address?: Addresses
  fullName?: string
  updatedAt?: string
  vatId?: string
  isDeleted?: boolean
  paymentTerms?: PaymentTerm
  active?: boolean
  email?: string
  additionalAttributes?: Array<CustomAttributes>
  id?: string
  customerId?: string
  phoneNumber?: string
  createdAt?: string
  currency?: Currency
  language?: string
  companyName?: string
}
export interface PaymentTerms {
  isDeleted?: boolean
  dueDays?: number
  notes?: string
  permittedClientClasses?: Array<string>
  minimumPayment?: number
  isActive?: boolean
  currencyFormatting?: string
  id?: string
  allowedMethods?: Array<string>
  languageSupport?: Array<string>
  createdDate?: string
  interestRate?: number
  type?: PaymentTerm
  currencyCode?: string
  discountDays?: number
  penaltyRate?: number
  lastUpdatedDate?: string
  description?: string
  gracePeriodDays?: number
  discountRate?: number
  countrySpecificTerms?: Array<string>
  createdAt?: string
  updatedAt?: string
}
export interface InvoiceAdjustments {
  amount?: number
  createdAt?: string
  description?: string
  active?: boolean
  appliedToInvoiceItemId?: string
  type?: InvoiceAdjustmentType
  currency?: Currency
  id?: string
  updatedAt?: string
  metadata?: Metadata
  deleted?: boolean
}
export interface TaxRates {
  taxType?: GlobalTaxType
  modifyToken?: string
  createdAt?: string
  applicableItems?: Array<string>
  description?: string
  customFields?: Array<CustomAttributes>
  currency?: Currency
  active?: boolean
  deleted?: boolean
  id?: string
  taxProvider?: string
  region?: string
  compound?: boolean
  updatedAt?: string
  country?: string
  taxNumber?: string
  name?: string
  percentage?: number
  shippingIncluded?: boolean
}
export interface CreditNoteLines {
  taxRate?: number
  description?: string
  product?: Products
  id?: string
  quantity?: number
  total?: number
  account?: string
  unitPrice?: number
}
export interface CreditNotes {
  adjustment?: number
  billingAddress?: Addresses
  metadata?: Metadata
  deleted?: boolean
  status?: CreditNoteStatus
  id?: string
  payments?: Array<Payments>
  memo?: string
  reason?: string
  creditType?: CreditType
  customer?: Customers
  amount?: number
  lines?: Array<CreditNoteLines>
  vatNumber?: string
  vatName?: string
  discounts?: Array<number>
  description?: string
  createdAt?: string
  number?: string
  taxAmount?: number
  issuedDate?: string
  active?: boolean
  companyId?: string
  shippingAddress?: Addresses
  modifyToken?: string
  taxRate?: number
  companyName?: string
  currency?: Currency
  attachments?: Array<Attachments>
  updatedAt?: string
}
export interface ExpenseCategories {
  id?: string
  name?: string
  description?: string
}
export interface Expenses {
  receiptUrls?: Array<string>
  status?: ExpenseApprovalStatus
  updatedAt?: string
  category?: ExpenseCategories
  merchant?: string
  customFields?: Array<CustomAttributes>
  amount?: number
  accountId?: string
  modifyToken?: string
  transactionId?: string
  dateIncurred?: string
  reportId?: string
  createdByUserId?: string
  active?: boolean
  paymentMethod?: PaymentMethods
  approvedByUserId?: string
  tax?: Array<Taxes>
  lineItems?: Array<Items>
  deleted?: boolean
  createdAt?: string
  currencyCode?: string
  description?: string
  id?: string
  note?: string
  attachments?: Array<Attachments>
  tags?: Array<string>
  location?: Addresses
}
export interface Transactions {
  updatedAt?: string
  amount?: number
  date?: string
  transactionCategory?: TransactionType
  id?: string
  tags?: Array<string>
  transactionMethod?: TransactionMethod
  status?: FinancialTransactionStatus
  applicationFee?: number
  taxAmount?: number
  modifyToken?: string
  accountId?: string
  type?: FinancialTransactionType
  paymentMethod?: PaymentMethods
  recipient?: Customers
  refund?: Refunds
  description?: string
  exchangeRate?: number
  createdAt?: string
  orderId?: string
  accountName?: string
  invoiceId?: string
  dispute?: Disputes
  deleted?: boolean
  shipping?: ShippingDetails
  contact?: Contacts
  items?: Array<Items>
  currency?: Currency
  billingDetails?: BillingDetails
  metadata?: Metadata
  sender?: Customers
  checkNumber?: string
  paymentIntent?: string
}
export interface PurchaseOrderLineItems {
  totalPrice?: number
  id?: string
  unitPrice?: number
  productId?: string
  description?: string
  sKU?: string
  deliveryDate?: string
  unitOfMeasure?: string
  discount?: number
  quantity?: number
}
export interface Accounts {
  owner?: Customers
  allowPayments?: boolean
  name?: string
  description?: string
  balance?: number
  accountNumber?: string
  updatedAt?: string
  status?: FinancialAccountStatus
  transactions?: Array<Transactions>
  deleted?: boolean
  notes?: string
  accountCode?: string
  branch?: string
  closedAt?: string
  createdAt?: string
  title?: string
  interestRate?: number
  id?: string
  taxType?: string
  accountType?: AccountType
  currency?: Currency
  overdraftProtection?: boolean
  showInExpenses?: boolean
  overdraftLimit?: number
  active?: boolean
  modifyToken?: string
}
export interface PurchaseOrders {
  lineItems?: Array<PurchaseOrderLineItems>
  id?: string
  createdAt?: string
  orderNumber?: string
  active?: boolean
  accountId?: string
  expectedDeliveryDate?: string
  paymentTerms?: string
  subtotal?: number
  deleted?: boolean
  shipTo?: Addresses
  notes?: string
  attachments?: Array<Attachments>
  vendor?: Vendors
  shippingCosts?: number
  orderDate?: string
  total?: number
  taxes?: number
  billTo?: Addresses
  currency?: Currency
  status?: OrderStatus
  modifyToken?: string
  updatedAt?: string
}
export interface AdditionalCharges {
  id?: string
  description?: string
  createdAt?: string
  amount?: number
  type?: FinancialChargeType
  updatedAt?: string
}
export interface Refunds {
  createdAt?: string
  id?: string
  amount?: number
  paymentId?: string
  status?: TransactionStatus
  currency?: Currency
  reason?: string
  updatedAt?: string
}
export interface Payments {
  customer?: Customers
  receiptEmail?: string
  metadata?: Metadata
  status?: PaymentStatus
  paymentIntent?: string
  date?: string
  updatedAt?: string
  paymentMethod?: PaymentMethods
  paymentCaptureMethod?: string
  id?: string
  amount?: number
  invoice?: Invoices
  shippingDetails?: ShippingDetails
  orderId?: string
  billingDetails?: BillingDetails
  paymentProcessor?: string
  deleted?: boolean
  refund?: Refunds
  modifyToken?: string
  webhookUrl?: string
  notes?: string
  currency?: Currency
  transactionId?: string
  description?: string
  createdAt?: string
  active?: boolean
}
export interface Bills {
  notes?: string
  vendor?: Vendors
  amountRemaining?: number
  createdAt?: string
  dueDate?: string
  customer?: Customers
  status?: BillingStatus
  issueDate?: string
  updatedAt?: string
  modifyToken?: string
  currencyCode?: string
  amountDue?: number
  lineItems?: Array<Items>
  attachments?: Array<Attachments>
  active?: boolean
  deleted?: boolean
  amountPaid?: number
  terms?: string
  id?: string
  invoiceNumber?: string
  customFields?: Array<CustomAttributes>
}
export interface Vendors {
  is1099?: boolean
  active?: boolean
  overdueBalance?: number
  note?: string
  contactName?: string
  companyName?: string
  id?: string
  outstandingBalance?: number
  deleted?: boolean
  customFields?: Array<CustomAttributes>
  currencyCode?: string
  accountNumber?: string
  contactPhone?: string
  address?: Addresses
  createdAt?: string
  contactEmail?: string
  tax?: Array<Taxes>
  updatedAt?: string
  modifyToken?: string
  website?: string
}
export interface AuditInformation {
  auditOpinion?: AuditOpinionType
  auditDate?: string
  notes?: string
  auditorName?: string
}
export interface BalanceSheets {
  shortTermInvestments?: number
  prepaidExpenses?: number
  otherNonCurrentLiabilities?: number
  intangibleAssets?: number
  accumulatedDepreciation?: number
  otherNonCurrentAssets?: number
  preferredStock?: number
  longTermDebt?: number
  otherCurrentLiabilities?: number
  minorityInterest?: number
  totalAssets?: number
  shortTermDebt?: number
  balanceDate?: string
  stockholdersEquity?: number
  currentAssets?: number
  nonCurrentAssets?: number
  nonCurrentLiabilities?: number
  createdAt?: string
  treasuryStock?: number
  active?: boolean
  currentPortionOfLongTermDebt?: number
  deferredRevenue?: number
  currentLiabilities?: number
  auditInfo?: AuditInformation
  cashAndCashEquivalents?: number
  inventory?: number
  additionalPaidInCapital?: number
  currency?: Currency
  notes?: string
  accountSummary?: Array<KeyValues>
  totalLiabilities?: number
  notesPayable?: number
  retainedEarnings?: number
  commonStock?: number
  deleted?: boolean
  otherCurrentAssets?: number
  accruedLiabilities?: number
  taxLiabilities?: number
  accountsReceivable?: number
  fixedAssets?: number
  accountsPayable?: number
  totalLiabilitiesAndEquity?: number
  updatedAt?: string
  equity?: number
  propertyPlantEquipment?: number
  customFields?: Array<CustomAttributes>
  modifyToken?: string
  id?: string
}
export interface IncomeStatements {
  interestExpense?: number
  operatingExpenses?: OperatingExpensesDetails
  modifyToken?: string
  shareholderEquity?: ShareholderEquityDetails
  grossProfit?: number
  period?: string
  accountSummary?: Array<KeyValues>
  currency?: Currency
  incomeBeforeTax?: number
  netIncome?: number
  id?: string
  exchangeRate?: number
  depreciationAndAmortization?: number
  ebitda?: number
  revenue?: RevenueDetails
  costOfGoodsSold?: number
  incomeTaxExpense?: IncomeTaxExpenseDetails
  createdAt?: string
  updatedAt?: string
  operatingIncome?: number
  profitMargins?: number
}
export interface Invoices {
  dueDate?: string
  terms?: string
  adjustments?: Array<InvoiceAdjustments>
  billingAddress?: Addresses
  deleted?: boolean
  header?: string
  id?: string
  taxTotal?: number
  discountTotal?: number
  customer?: Customers
  discountPercentage?: number
  vatNumber?: string
  createdAt?: string
  currency?: Currency
  attachments?: Array<Attachments>
  shippingAddress?: Addresses
  status?: PaymentStatus
  updatedAt?: string
  issuedDate?: string
  footer?: string
  active?: boolean
  subtotal?: number
  items?: Array<InvoiceItems>
  vatName?: string
  notes?: string
  total?: number
  paidAmount?: number
  modifyToken?: string
  balanceDue?: number
  paymentTerms?: PaymentTerms
  exchangeRate?: number
  invoiceNumber?: string
  payments?: Array<Payments>
}
export interface JournalEntries {
  id?: string
  exchangeRate?: number
  createdAt?: string
  active?: boolean
  type?: string
  status?: JournalEntryStatus
  updatedAt?: string
  deleted?: boolean
  entryNumber?: string
  modifyToken?: string
  updatedBy?: string
  attachments?: Array<Attachments>
  date?: string
  isReconciled?: boolean
  name?: string
  reference?: string
  memo?: string
  description?: string
  totalAmount?: number
  currency?: Currency
  lineItems?: Array<JournalEntryLines>
  createdBy?: string
}
export interface JournalEntryLines {
  quantity?: number
  accountId?: string
  description?: string
  tracking?: FinancialTrackingCategories
  taxCode?: string
  id?: number
  credit?: number
  debit?: number
}
export interface InvoiceItems {
  gallery?: Array<Images>
  reviews?: Array<RatingsReviews>
  description?: string
  isAvailable?: boolean
  imageUrl?: string
  sku?: string
  ean?: string
  availabilityDate?: string
  weight?: number
  name?: string
  customFields?: Array<CustomAttributes>
  inventoryQuantity?: number
  price?: number
  onSale?: boolean
  dimensions?: Dimensions
  rating?: number
  ratingCount?: number
  updatedAt?: string
  tags?: Array<string>
  isbn?: string
  variants?: Array<Variants>
  deletedAt?: string
  active?: boolean
  createdAt?: string
  mpn?: string
  condition?: ItemCondition
  brand?: string
  inventoryStatus?: ProductAvailabilityStatus
  discount?: number
  upc?: string
  currency?: Currency
  options?: Array<ProductOptions>
  id?: string
}
export interface Tickets {
  status?: IssueLifecycleStatus
  priority?: SupportTicketPriority
  tags?: Array<string>
  modifyToken?: string
  attachments?: Array<Attachments>
  createdAt?: string
  comments?: Array<Comments>
  description?: string
  customFields?: Array<CustomAttributes>
  dueDate?: string
  title?: string
  reporter?: Contacts
  notes?: Array<Notes>
  assignee?: Users
  type?: SupportQueryType
  updatedAt?: string
  id?: string
}
export interface WorkExperiences {
  position?: string
  company?: string
  description?: string
  endDate?: string
  startDate?: string
}
export interface Educations {
  degree?: string
  fieldOfStudy?: string
  institution?: string
  startDate?: string
  endDate?: string
  gpa?: number
}
export interface References {
  phoneNumber?: string
  relationship?: string
  name?: string
  email?: string
  company?: string
  position?: string
}
export interface Candidates {
  websites?: Array<string>
  role?: string
  educations?: Array<Educations>
  preferredWorkLocation?: string
  lastName?: string
  socialProfiles?: Array<SocialProfiles>
  languages?: Array<string>
  availability?: string
  updatedAt?: string
  skills?: Array<string>
  id?: string
  email?: string
  coverLetter?: Attachments
  phoneNumber?: string
  profilePicture?: Images
  certifications?: Array<string>
  jobId?: string
  customFields?: Array<CustomAttributes>
  references?: Array<References>
  createdAt?: string
  workExperiences?: Array<WorkExperiences>
  firstName?: string
  modifyToken?: string
  status?: EmploymentAndCandidateStatus
  resume?: Attachments
  notes?: Array<Notes>
}
export interface Contacts {
  leadId?: string
  defaultEmail?: string
  emails?: Array<Emails>
  address?: Addresses
  relationship?: string
  note?: string
  websites?: Array<string>
  firstName?: string
  birthday?: string
  notes?: Notes
  customFields?: Array<CustomAttributes>
  socialProfiles?: Array<SocialProfiles>
  phones?: Array<Phones>
  isActive?: boolean
  company?: string
  id?: string
  updatedAt?: string
  defaultPhone?: string
  tags?: Array<string>
  createdAt?: string
  modifyToken?: string
  lastName?: string
  addresses?: Array<Addresses>
}
export interface Jobs {
  jobTrialPeriod?: string
  responsibilities?: string
  createdAt?: string
  qualifications?: string
  jobLocationType?: string
  updatedAt?: string
  employmentUnit?: EmploymentUnits
  salaryCurrency?: string
  validUntil?: string
  benefits?: Array<string>
  educationRequirements?: string
  company?: Companies
  experienceRequirements?: string
  baseSalary?: Salaries
  jobFlexibleHours?: boolean
  remote?: boolean
  occupationalCategory?: string
  modifyToken?: string
  languagesSpoken?: Array<string>
  industry?: string
  jobShifts?: Array<string>
  workFromHome?: boolean
  id?: string
  jobBenefits?: string
  title?: string
  employmentType?: EmploymentType
  applicationDeadline?: string
  incentiveCompensation?: string
  workHours?: string
  jobImmediateStart?: boolean
  incentives?: string
  description?: string
  location?: Addresses
  skills?: Array<string>
  jobStartDate?: string
  jobTrainingProvided?: boolean
}
export interface Salaries {
  currency?: Currency
  value?: number
  paymentPeriod?: TimeCycle
}
export interface HiringOrganizations {
  industry?: string
  locations?: Array<Addresses>
  size?: string
  name?: string
  description?: string
}
export interface EmploymentUnits {
  description?: string
  name?: string
}
export interface TimeSession {
  openTime?: string
  closeTime?: string
}
export interface UserOrGroup {
  type?: ParticipantType
  identifier?: string
  displayName?: string
}
export interface Permissions {
  canView?: Array<string>
  roles?: Array<string>
  canEdit?: Array<string>
  canDelete?: Array<string>
  accessControlType?: AccessControlModel
  identifierType?: UniversalIdentifierType
  assigneeDetails?: UserOrGroup
}
export interface Phones {
  country?: string
  type?: DeviceUsageType
  countryCode?: string
  phone?: string
}
export interface Emails {
  email?: string
  type?: EmailCategoryType
}
export interface Entity {
  entityId?: string
  attributes?: Array<string>
  entityType?: EntityCategory
}
export interface Notifications {
  title?: string
  message?: string
  createdAt?: string
  updatedAt?: string
  type?: string
  active?: boolean
  deleted?: boolean
  customFields?: Array<CustomAttributes>
  attachments?: Array<Attachments>
  status?: string
  notificationId?: string
  recipient?: Users
  priority?: PriorityLevel
  channel?: string
}
export interface Comments {
  commentId?: string
  flagged?: boolean
  metadata?: Array<Metadata>
  createdAt?: string
  likes?: number
  active?: boolean
  text?: string
  author?: Users
  parentId?: string
  updatedAt?: string
  deleted?: boolean
}
export interface Metadata {
  createdAt?: string
  updatedAt?: string
  type?: DataType
  entityId?: string
  id?: string
  value?: string
  key?: string
  entityType?: string
}
export interface Tasks {
  status?: TaskStatus
  timeEstimate?: string
  updatedAt?: string
  createdBy?: Users
  customFields?: Array<CustomAttributes>
  createdAt?: string
  id?: string
  dueDate?: string
  title?: string
  dependOnTaskIds?: Array<string>
  subTaskIds?: Array<string>
  watchers?: Array<Users>
  completionPercentage?: number
  assignee?: Users
  timeLogged?: string
  labels?: Array<string>
  description?: string
  comments?: Array<Comments>
  priority?: PriorityLevel
  dueTimezone?: string
  relatedToTaskId?: Array<string>
  repeat?: string
  attachments?: Array<Attachments>
  notifications?: Array<Notifications>
  modifyToken?: string
  parentTaskId?: string
}
export interface Stores {
  description?: string
  countryCode?: string
  owner?: Users
  currency?: Currency
  socialProfiles?: Array<SocialProfiles>
  createdAt?: string
  latitude?: number
  ratings?: RatingsReviews
  manager?: Staff
  phone?: string
  language?: string
  logoUrl?: string
  category?: string
  country?: string
  address?: Addresses
  features?: Array<string>
  relatedStores?: Array<Stores>
  websiteUrl?: string
  name?: string
  timezone?: string
  id?: string
  businessHours?: Array<BusinessHours>
  longitude?: number
  isOperating?: boolean
  email?: string
  updatedAt?: string
  storeArea?: number
  paymentMethods?: Array<string>
}
export interface Staff {
  customFields?: Array<CustomAttributes>
  dateOfBirth?: string
  firstName?: string
  phone?: string
  role?: OrganizationalRole
  deleted?: boolean
  position?: string
  id?: string
  addresses?: Addresses
  gender?: string
  email?: string
  status?: EmploymentAndCandidateStatus
  storeID?: string
  active?: boolean
  photoUrl?: string
  createdAt?: string
  lastName?: string
  updatedAt?: string
}
export interface RatingsReviews {
  verifiedPurchase?: boolean
  storeID?: string
  status?: ReviewApprovalStatus
  reviewerName?: string
  review?: string
  updatedAt?: string
  deleted?: boolean
  rating?: number
  locale?: string
  metadata?: Metadata
  id?: string
  createdAt?: string
  active?: boolean
}
export interface ProductOptions {
  productId?: number
  updatedAt?: string
  id?: string
  name?: string
  createdAt?: string
  values?: Array<string>
}
export interface Taxes {
  active?: boolean
  description?: string
  taxCode?: string
  taxable?: boolean
  currency?: Currency
  taxDetails?: TaxDetails
  region?: string
  customFields?: Array<CustomAttributes>
  createdAt?: string
  deleted?: boolean
  taxAmount?: number
  taxRate?: number
  country?: string
  updatedAt?: string
}
export interface InventoryLocations {
  name?: string
  quantity?: number
  contactInformation?: Array<Contacts>
  type?: InventoryStorageType
  locationId?: string
  operationalHours?: string
  isActive?: boolean
  updatedAt?: string
  address?: Addresses
  deleted?: boolean
  createdAt?: string
}
export interface Prices {
  amount?: number
  currency?: Currency
}
export interface Variants {
  createdAt?: string
  updatedAt?: string
  price?: number
  dimensions?: Dimensions
  deleted?: boolean
  active?: boolean
  productId?: string
  inventoryQuantity?: number
  compareAtPrice?: number
  id?: string
  barcode?: string
  title?: string
  imageId?: number
  status?: ItemAvailabilityStatus
  weightUnit?: string
  weight?: number
  taxable?: boolean
  sku?: string
  requiresShipping?: boolean
}
export interface Dimensions {
  width?: number
  length?: number
  height?: number
}
export interface Products {
  description?: string
  metaTitle?: string
  updatedAt?: string
  categories?: Array<string>
  sku?: string
  type?: string
  inventoryLocation?: InventoryLocations
  customFields?: Array<CustomAttributes>
  accountIds?: Array<KeyValues>
  images?: Array<Images>
  inventoryQuantity?: number
  brand?: Brands
  metaDescription?: string
  dimensions?: Dimensions
  skuValidation?: SkuValidation
  variants?: Array<Variants>
  weightUnit?: string
  id?: string
  isDownloadable?: boolean
  slug?: string
  title?: string
  publishedAt?: string
  modifyToken?: string
  downloadFiles?: Array<Attachments>
  status?: EntityLifecycleStatus
  localizations?: Array<Localizations>
  seoKeywords?: Array<string>
  prices?: Array<Prices>
  relatedProducts?: Array<string>
  tax?: Taxes
  weight?: number
  tags?: Array<string>
  availableForSale?: boolean
  createdAt?: string
  options?: Array<ProductOptions>
  vendor?: string
}
export interface Orders {
  note?: string
  status?: OrderStatus
  subTotal?: number
  id?: string
  currency?: Currency
  shippingMethod?: string
  billingAddress?: Addresses
  total?: number
  paymentStatus?: PaymentStatus
  orderNumber?: string
  tax?: number
  discounts?: Array<number>
  shippingAddress?: Addresses
  modifyToken?: string
  paymentMethods?: Array<string>
  trackingInfo?: string
  shippingCost?: number
  createdAt?: string
  updatedAt?: string
  items?: Array<Items>
  tags?: Array<string>
  customerID?: string
}
export interface Opportunities {
  type?: string
  campaign?: Campaigns
  title?: string
  contacts?: Array<Contacts>
  modifyToken?: string
  nextStep?: string
  companyName?: string
  id?: string
  attachments?: Array<Attachments>
  description?: string
  stage?: string
  probability?: number
  account?: Accounts
  entity?: Entity
  isWon?: boolean
  amount?: number
  currency?: Currency
  closeDate?: string
  customFields?: Array<CustomAttributes>
  owner?: Users
  updatedAt?: string
  tags?: Array<string>
  leadSource?: string
  createdAt?: string
  companyId?: string
  leadId?: string
  isClosed?: boolean
  lostReason?: string
  notes?: Array<string>
}
export interface PaymentMethods {
  id?: string
  type?: PaymentMethod
  details?: string
  isDefault?: boolean
}
export interface SSO {
  tokenType?: string
  active?: boolean
  createdAt?: string
  updatedAt?: string
  refreshToken?: string
  deleted?: boolean
  expiresIn?: number
  scopes?: Array<string>
  provider?: IdentityProvider
  profileUrl?: string
  providerUserId?: string
  accessToken?: string
  expiryDate?: string
}
export interface Preferences {
  communications?: CommunicationMethod
  language?: string
  timeZone?: string
  id?: string
  currency?: Currency
}
export interface Users {
  preferences?: Preferences
  status?: UserStatus
  gender?: Gender
  profilePicture?: Images
  id?: string
  firstName?: string
  username?: string
  password?: string
  createdAt?: string
  roles?: Array<Roles>
  lastName?: string
  modifyToken?: string
  email?: string
  coverPhoto?: Images
  phoneNumber?: string
  isActive?: boolean
  addresses?: Array<Addresses>
  website?: string
  sso?: Array<SSO>
  paymentMethods?: PaymentMethods
  dateOfBirth?: string
  lastLogin?: string
  socialProfiles?: Array<SocialProfiles>
  bio?: string
  updatedAt?: string
  middleName?: string
}
export interface Notes {
  author?: Users
  createdAt?: string
  color?: string
  content?: string
  sharedWith?: Array<Users>
  reminder?: string
  attachments?: Array<Attachments>
  id?: string
  updatedAt?: string
  lastAccessed?: string
  visibility?: ContentVisibility
  modifyToken?: string
  priority?: PriorityLevel
  tags?: Array<string>
  metadata?: Array<string>
  title?: string
}
export interface LeadSource {
  sourceName?: string
  details?: string
  sourceId?: string
}
export interface TransactionDetails {
  status?: string
  transactionId?: string
  amount?: number
}
export interface Leads {
  industry?: string
  defaultEmail?: string
  numberOfEmployees?: number
  firstName?: string
  defaultPhone?: string
  id?: string
  addresses?: Array<Addresses>
  createdAt?: string
  socialProfiles?: Array<SocialProfiles>
  preferredContactMethod?: CommunicationMethod
  customFields?: Array<CustomAttributes>
  notes?: Array<Notes>
  modifyToken?: string
  updatedAt?: string
  entity?: Entity
  emails?: Array<Emails>
  leadStatus?: LeadLifecycleStatus
  name?: string
  opportunities?: Array<Opportunities>
  annualRevenue?: number
  jobTitle?: string
  companyName?: string
  website?: string
  phones?: Array<Phones>
  middleName?: string
  companyId?: string
  lastName?: string
  leadSource?: LeadSource
}
export interface FulfillmentReceipts {
  currency?: Currency
  fulfillmentId?: string
  id?: string
  status?: OrderStatus
  customerInfo?: Customers
  updatedAt?: string
  paymentMethod?: PaymentMethod
  createdAt?: string
  testCase?: boolean
  transactionDetails?: TransactionDetails
  active?: boolean
  amount?: number
  deleted?: boolean
  authorization?: string
}
export interface FulfillmentItems {
  variantTitle?: string
  weightUnit?: string
  requiresShipping?: boolean
  dimensions?: Dimensions
  orderId?: string
  quantity?: number
  imageUrl?: string
  updatedAt?: string
  deleted?: boolean
  description?: string
  sku?: string
  customAttributes?: CustomAttributes
  createdAt?: string
  active?: boolean
  productId?: string
  taxable?: boolean
  status?: OrderStatus
  variantId?: string
  fulfillmentId?: string
  price?: number
  weight?: number
  title?: string
  id?: string
}
export interface Fulfillments {
  status?: FulfillmentStatus
  metadata?: Metadata
  lineItems?: Array<Items>
  updatedAt?: string
  carrier?: string
  items?: Array<FulfillmentItems>
  receipt?: FulfillmentReceipts
  expectedDelivery?: string
  trackingNumber?: string
  orderId?: string
  service?: string
  id?: string
  createdAt?: string
  trackingUrls?: Array<string>
  totalPrice?: number
  currency?: Currency
  notes?: string
  address?: Addresses
  shipmentDate?: string
}
export interface CustomAttributes {
  fieldType?: DataType
  id?: string
  fieldName?: string
  fieldValue?: string
}
export interface Companies {
  website?: string
  type?: string
  defaultEmail?: string
  incorporationCountry?: string
  companyNumber?: number
  stockSymbol?: string
  defaultPhone?: string
  logo?: string
  customFields?: Array<CustomAttributes>
  updatedAt?: string
  taxId?: string
  createdAt?: string
  foundedDate?: string
  emails?: Array<Emails>
  dunsNumber?: string
  name?: string
  domain?: string
  revenue?: number
  id?: string
  description?: string
  regulatoryStatus?: string
  tags?: Array<string>
  socialProfiles?: Array<SocialProfiles>
  industry?: string
  additionalContacts?: Array<Contacts>
  numberOfEmployees?: number
  incorporationDate?: string
  parentCompanyId?: string
  revenueCurrency?: string
  phones?: Array<Phones>
  modifyToken?: string
  address?: Addresses
  legalName?: string
}
export interface Localizations {
  locale?: string
  metaTitle?: string
  title?: string
  metaDescription?: string
  description?: string
}
export interface KeyValues {
  value?: string
  key?: string
}
export interface SocialProfiles {
  url?: string
  active?: boolean
  avatarUrl?: string
  createdAt?: string
  type?: SocialPlatform
  additionalInfo?: Metadata
  deleted?: boolean
  email?: string
  updatedAt?: string
  displayName?: string
  username?: string
}
export interface Customers {
  defaultAddress?: Addresses
  phoneNumber?: string
  preferredContactMethod?: CommunicationMethod
  title?: string
  middleName?: string
  fullName?: string
  dateOfBirth?: string
  companyId?: string
  updatedAt?: string
  status?: CustomerStatus
  id?: string
  currency?: Currency
  notes?: string
  customerType?: CustomerType
  company?: string
  loyaltyProgramMembership?: string
  metadata?: string
  lastName?: string
  email?: string
  firstName?: string
  addresses?: Array<Addresses>
  customerSegment?: string
  tags?: Array<string>
  socialProfiles?: Array<SocialProfiles>
  source?: string
  createdAt?: string
  customFields?: Array<CustomAttributes>
  modifyToken?: string
}
export interface TaxLines {
  updatedAt?: string
  price?: number
  metadata?: Metadata
  active?: boolean
  deleted?: boolean
  createdAt?: string
  rate?: number
  title?: string
  taxCode?: string
  isInclusive?: boolean
}
export interface Images {
  altText?: string
  tags?: Array<string>
  title?: string
  updatedAt?: string
  id?: string
  caption?: string
  width?: number
  height?: number
  active?: boolean
  deleted?: boolean
  src?: string
  thumbnailSrc?: string
  createdAt?: string
  mimeType?: ImageMimeType
}
export interface GiftCards {
  issuedBy?: string
  associatedUser?: Users
  balance?: number
  status?: LifecycleStatus
  deleted?: boolean
  purchasedBy?: string
  active?: boolean
  currency?: Currency
  updatedAt?: string
  id?: string
  cardNumber?: string
  metadata?: string
  expirationDate?: string
  createdAt?: string
  amountUsed?: number
}
export interface Promotions {
  eligibleItems?: Array<string>
  updatedAt?: string
  active?: boolean
  termsAndConditions?: string
  type?: PromotionType
  discountValue?: number
  endDate?: string
  customerEligibility?: CustomerEligibilityStatus
  code?: string
  minimumPurchaseAmount?: number
  usageLimit?: number
  discountType?: DiscountType
  currency?: Currency
  limitPerCustomer?: number
  createdAt?: string
  description?: string
  deleted?: boolean
  startDate?: string
}
export interface PaymentDetails {
  updatedAt?: string
  transactionId?: string
  active?: boolean
  amount?: number
  billingAddress?: Addresses
  createdAt?: string
  deleted?: boolean
  currency?: Currency
  status?: string
  refunded?: boolean
  paymentGateway?: string
  method?: string
}
export interface ShippingDetails {
  createdAt?: string
  deleted?: boolean
  provider?: string
  signatureRequired?: boolean
  updatedAt?: string
  address?: Addresses
  method?: string
  estimatedDelivery?: string
  active?: boolean
  price?: number
  insurance?: boolean
  trackingNumber?: string
}
export interface PerformanceMetrics {
  spend?: number
  costPerClick?: number
  impressions?: number
  conversions?: number
  conversionRate?: number
  clicks?: number
  costPerConversion?: number
  returnOnInvestment?: number
}
export interface Carts {
  id?: string
  note?: string
  originalTotalPrice?: number
  buyerIdentity?: Customers
  currency?: Currency
  createdAt?: string
  updatedAt?: string
  itemCount?: number
  shippingDetails?: ShippingDetails
  paymentDetails?: PaymentDetails
  messages?: Array<string>
  promotions?: Array<Promotions>
  giftCards?: Array<GiftCards>
  version?: string
  token?: string
  attributes?: Array<string>
  discountCodes?: Array<string>
  totalPrice?: number
  items?: Array<Items>
  totalWeight?: number
  state?: OrderStatus
}
export interface Items {
  currency?: Currency
  sku?: string
  taxLines?: Array<TaxLines>
  price?: number
  accountId?: string
  id?: string
  accountName?: string
  originalPrice?: number
  active?: boolean
  fulfillableQuantity?: number
  weight?: number
  updatedAt?: string
  variantId?: string
  productId?: string
  parentId?: string
  linePrice?: number
  requiresShipping?: boolean
  discountedPrice?: number
  createdAt?: string
  title?: string
  variantTitle?: string
  image?: Images
  taxable?: boolean
  description?: string
  weightUnit?: string
  quantity?: number
  deleted?: boolean
}
export interface Campaigns {
  name?: string
  targetAudience?: string
  type?: CampaignType
  performanceMetrics?: PerformanceMetrics
  tags?: Array<string>
  createdAt?: string
  channels?: Array<string>
  active?: boolean
  budget?: number
  deleted?: boolean
  endDate?: string
  updatedAt?: string
  status?: CampaignStatus
  id?: string
  startDate?: string
  creativeAssets?: Attachments
}
export interface Attachments {
  createdAt?: string
  fileName?: string
  id?: string
  fileSize?: number
  url?: string
  metadata?: Metadata
  associatedWith?: Entity
  thumbnailUrl?: string
  previewUrl?: string
  content?: string
  updatedAt?: string
  fileType?: string
  permissions?: Permissions
}
export interface BusinessHours {
  updatedAt?: string
  timeZone?: string
  active?: boolean
  storeID?: string
  id?: string
  dayOfWeek?: DayOfWeek
  sessions?: Array<TimeSession>
  createdAt?: string
  deleted?: boolean
  closed?: boolean
}
export interface Brands {
  country?: string
  established?: string
  updatedAt?: string
  id?: string
  name?: string
  website?: string
  description?: string
  status?: ItemEntityStatus
  logo?: string
  customFields?: Array<CustomAttributes>
  createdAt?: string
}
export interface GeoCoordinates {
  speed?: number
  altitude?: number
  accuracy?: number
  longitude?: number
  latitude?: number
  timestamp?: string
  altitudeAccuracy?: number
  heading?: number
}
export interface Addresses {
  postalCode?: string
  street?: string
  lastName?: string
  customFields?: Array<CustomAttributes>
  companyName?: string
  city?: string
  contactId?: string
  countryCode?: string
  subdivisionCode?: string
  id?: string
  accountId?: string
  phone?: string
  addressLine2?: string
  type?: ContactAddressType
  region?: string
  country?: string
  province?: string
  postalCodeExtension?: string
  geoLocation?: GeoCoordinates
  firstName?: string
  name?: string
  email?: string
}
export interface CRMAccounts {
  rating?: AccountEngagementLevel
  ownerId?: string
  updatedAt?: string
  customFields?: Array<CustomAttributes>
  name?: string
  billingAddress?: Addresses
  annualRevenue?: number
  id?: string
  tags?: Array<string>
  status?: AccountStatus
  industry?: string
  email?: string
  phone?: string
  shippingAddress?: Addresses
  website?: string
  numberOfEmployees?: number
  accountType?: StakeholderType
  createdAt?: string
}
export const enum Roles {
  Moderator = 'moderator',
  Admin = 'admin',
  User = 'user'
}
export const enum TransactionMethod {
  Telephone = 'telephone',
  Online = 'online',
  Mail = 'mail',
  Mobile = 'mobile',
  Atm = 'atm',
  BankBranch = 'bank-branch'
}
export const enum CreditType {
  Goodwill = 'goodwill',
  Prepayment = 'prepayment'
}
export const enum AccountType {
  OtherExpenseVehicleInsurance = 'other-expense-vehicle-insurance',
  ExpenseAuto = 'expense-auto',
  EquityOwnersEquity = 'equity-owners-equity',
  ExpenseOtherCurrentOperatingCharges = 'expense-other-current-operating-charges',
  ExpenseSuppliesMaterials = 'expense-supplies-materials',
  OtherCurrentLiabilityCurrentTaxLiability = 'other-current-liability-current-tax-liability',
  OtherIncomeGainLossOnSaleOfInvestments = 'other-income-gain-loss-on-sale-of-investments',
  OtherCurrentLiabilityShortTermBorrowings = 'other-current-liability-short-term-borrowings',
  LiabilityNotesPayable = 'liability-notes-payable',
  AssetDeferredTax = 'asset-deferred-tax',
  AssetGlobalTaxRefund = 'asset-global-tax-refund',
  AssetNonCurrentAssets = 'asset-non-current-assets',
  OtherIncomeTaxExemptInterest = 'other-income-tax-exempt-interest',
  LiabilityLongTermDebit = 'liability-long-term-debit',
  ExpenseOfficeGeneralAdministrativeExpenses = 'expense-office-general-administrative-expenses',
  ExpenseAppropriationsToDepreciation = 'expense-appropriations-to-depreciation',
  AssetChecking = 'asset-checking',
  Expense = 'expense',
  ExpenseExternalServices = 'expense-external-services',
  ExpensePayrollExpenses = 'expense-payroll-expenses',
  OtherCurrentLiabilityGlobalTaxPayable = 'other-current-liability-global-tax-payable',
  LiabilityLiabilitiesRelatedToAssetsHeldForSale = 'liability-liabilities-related-to-assets-held-for-sale',
  AssetRentsHeldInTrust = 'asset-rents-held-in-trust',
  AssetUndepositedFunds = 'asset-undeposited-funds',
  AssetOtherFixedAssets = 'asset-other-fixed-assets',
  ExpenseManagementCompensation = 'expense-management-compensation',
  AssetOtherLongTermLoansAndAdvances = 'asset-other-long-term-loans-and-advances',
  AssetLongTermInvestments = 'asset-long-term-investments',
  CostOfGoodsSoldSuppliesMaterialsCogs = 'cost-of-goods-sold-supplies-materials-cogs',
  OtherIncomeOtherOperatingIncome = 'other-income-other-operating-income',
  OtherCurrentLiabilityRentsInTrustLiability = 'other-current-liability-rents-in-trust-liability',
  RevenueNonProfitIncome = 'revenue-non-profit-income',
  AssetGoodwill = 'asset-goodwill',
  AssetFixedAssetComputers = 'asset-fixed-asset-computers',
  AssetProvisionsCurrentAssets = 'asset-provisions-current-assets',
  ExpenseShippingAndDeliveryExpense = 'expense-shipping-and-delivery-expense',
  EquityCommonStock = 'equity-common-stock',
  ExpenseIncomeTaxExpense = 'expense-income-tax-expense',
  AssetIntangibleAssetsUnderDevelopment = 'asset-intangible-assets-under-development',
  OtherExpenseVehicleLoanInterest = 'other-expense-vehicle-loan-interest',
  CostOfGoodsSold = 'cost-of-goods-sold',
  ExpenseCostOfLabor = 'expense-cost-of-labor',
  AssetInvestmentOther = 'asset-investment-other',
  AssetOtherIntangibleAssets = 'asset-other-intangible-assets',
  OtherCurrentLiabilityCurrentPortionEmployeeBenefitsObligations = 'other-current-liability-current-portion-employee-benefits-obligations',
  AssetCashAndCashEquivalents = 'asset-cash-and-cash-equivalents',
  ExpenseExtraordinaryCharges = 'expense-extraordinary-charges',
  OtherExpenseExtraordinaryItems = 'other-expense-extraordinary-items',
  AssetFixedAssetFurniture = 'asset-fixed-asset-furniture',
  CostOfGoodsSoldCostOfSales = 'cost-of-goods-sold-cost-of-sales',
  AssetLand = 'asset-land',
  AssetInternalTransfers = 'asset-internal-transfers',
  ExpensePurchasesRebates = 'expense-purchases-rebates',
  LiabilityGovernmentAndOtherPublicAuthorities = 'liability-government-and-other-public-authorities',
  EquityEstimatedTaxes = 'equity-estimated-taxes',
  OtherCurrentLiabilityLoanPayable = 'other-current-liability-loan-payable',
  AssetAccumulatedDepletion = 'asset-accumulated-depletion',
  AssetPrepaymentsAndAccruedIncome = 'asset-prepayments-and-accrued-income',
  Liability = 'liability',
  AssetGlobalTaxDeferred = 'asset-global-tax-deferred',
  ExpenseAmortizationExpense = 'expense-amortization-expense',
  ExpenseOtherRentalCosts = 'expense-other-rental-costs',
  OtherCurrentLiabilityCurrentPortionOfObligationsUnderFinanceLeases = 'other-current-liability-current-portion-of-obligations-under-finance-leases',
  AssetInventory = 'asset-inventory',
  OtherCurrentLiabilitySalesTaxPayable = 'other-current-liability-sales-tax-payable',
  OtherExpenseHomeOwnerRentalInsurance = 'other-expense-home-owner-rental-insurance',
  OtherExpenseVehicle = 'other-expense-vehicle',
  AssetTrustAccounts = 'asset-trust-accounts',
  LiabilityLongTermEmployeeBenefitObligations = 'liability-long-term-employee-benefit-obligations',
  AssetLeaseBuyout = 'asset-lease-buyout',
  LiabilityProvisionsNonCurrentLiabilities = 'liability-provisions-non-current-liabilities',
  AssetFixedAsset = 'asset-fixed-asset',
  AssetShortTermInvestmentsInRelatedParties = 'asset-short-term-investments-in-related-parties',
  AssetOtherConsumables = 'asset-other-consumables',
  AssetPrepaidExpenses = 'asset-prepaid-expenses',
  LiabilityLongTermLiability = 'liability-long-term-liability',
  EquityPartnersEquity = 'equity-partners-equity',
  ExpenseEntertainment = 'expense-entertainment',
  AssetLongTermLoansAndAdvancesToRelatedParties = 'asset-long-term-loans-and-advances-to-related-parties',
  ExpensePromotionalMeals = 'expense-promotional-meals',
  ExpenseTravelExpensesGeneralAndAdminExpenses = 'expense-travel-expenses-general-and-admin-expenses',
  CostOfGoodsSoldFreightAndDeliveryCost = 'cost-of-goods-sold-freight-and-delivery-cost',
  AssetParticipatingInterests = 'asset-participating-interests',
  ExpenseDistributionCosts = 'expense-distribution-costs',
  AssetDepletableAssets = 'asset-depletable-assets',
  EquityCapitalReserves = 'equity-capital-reserves',
  ExpenseSundry = 'expense-sundry',
  LiabilityLongTermBorrowings = 'liability-long-term-borrowings',
  LiabilityBankLoans = 'liability-bank-loans',
  EquityOpeningBalanceEquity = 'equity-opening-balance-equity',
  LiabilityShareholderNotesPayable = 'liability-shareholder-notes-payable',
  OtherExpenseExchangeGainOrLoss = 'other-expense-exchange-gain-or-loss',
  RevenueOtherCurrentOperatingIncome = 'revenue-other-current-operating-income',
  AssetLoansToOthers = 'asset-loans-to-others',
  Asset = 'asset',
  AssetBalWithGovtAuthorities = 'asset-bal-with-govt-authorities',
  EquityShareApplicationMoneyPendingAllotment = 'equity-share-application-money-pending-allotment',
  OtherIncomeOtherMiscellaneousIncome = 'other-income-other-miscellaneous-income',
  ExpenseOtherMiscellaneousServiceCost = 'expense-other-miscellaneous-service-cost',
  AssetBank = 'asset-bank',
  AssetLicenses = 'asset-licenses',
  OtherExpenseVehicleRepairs = 'other-expense-vehicle-repairs',
  LiabilityAccruedLongTermLiabilities = 'liability-accrued-long-term-liabilities',
  OtherIncome = 'other-income',
  RevenueUnappliedCashPaymentIncome = 'revenue-unapplied-cash-payment-income',
  EquityDividendDisbursed = 'equity-dividend-disbursed',
  OtherCurrentLiabilityProvisionsCurrentLiabilities = 'other-current-liability-provisions-current-liabilities',
  OtherExpenseWashAndRoadServices = 'other-expense-wash-and-road-services',
  OtherCurrentLiabilityInterestPayables = 'other-current-liability-interest-payables',
  ExpenseBadDebts = 'expense-bad-debts',
  AssetAccumulatedAmortizationOfOtherAssets = 'asset-accumulated-amortization-of-other-assets',
  AssetOtherCurrentAsset = 'asset-other-current-asset',
  OtherCurrentLiabilityPayrollTaxPayable = 'other-current-liability-payroll-tax-payable',
  AssetMoneyMarket = 'asset-money-market',
  ExpensePenaltiesSettlements = 'expense-penalties-settlements',
  AssetLeaseholdImprovements = 'asset-leasehold-improvements',
  OtherCurrentLiabilityPayrollClearing = 'other-current-liability-payroll-clearing',
  EquityCalledUpShareCapital = 'equity-called-up-share-capital',
  AssetExpenditureAuthorisationsAndLettersOfCredit = 'asset-expenditure-authorisations-and-letters-of-credit',
  AssetFixedAssetPhone = 'asset-fixed-asset-phone',
  AssetProvisionsFixedAssets = 'asset-provisions-fixed-assets',
  Income = 'income',
  OtherExpenseHomeOffice = 'other-expense-home-office',
  OtherExpenseMatCredit = 'other-expense-mat-credit',
  ExpenseLossOnDiscontinuedOperationsNetOfTax = 'expense-loss-on-discontinued-operations-net-of-tax',
  OtherExpenseGasAndFuel = 'other-expense-gas-and-fuel',
  OtherExpenseRentAndLease = 'other-expense-rent-and-lease',
  AssetInvestments = 'asset-investments',
  OtherCurrentLiabilityAccruedLiabilities = 'other-current-liability-accrued-liabilities',
  OtherCurrentLiabilityProvisionForWarrantyObligations = 'other-current-liability-provision-for-warranty-obligations',
  AssetFixedAssetPhotoVideo = 'asset-fixed-asset-photo-video',
  OtherExpenseDepreciation = 'other-expense-depreciation',
  AssetOtherAsset = 'asset-other-asset',
  EquityRetainedEarnings = 'equity-retained-earnings',
  ExpenseUtilities = 'expense-utilities',
  OtherCurrentLiabilitySundryDebtorsAndCreditors = 'other-current-liability-sundry-debtors-and-creditors',
  AssetLoansToOfficers = 'asset-loans-to-officers',
  LiabilityOtherLongTermProvisions = 'liability-other-long-term-provisions',
  OtherCurrentLiabilityStaffAndRelatedLiabilityAccounts = 'other-current-liability-staff-and-related-liability-accounts',
  ExpenseOfficeExpenses = 'expense-office-expenses',
  RevenueDiscountsRefundsGiven = 'revenue-discounts-refunds-given',
  RevenueIncome = 'revenue-income',
  ExpenseProjectStudiesSurveysAssessments = 'expense-project-studies-surveys-assessments',
  RevenueCashReceiptIncome = 'revenue-cash-receipt-income',
  AssetIntangibleAssets = 'asset-intangible-assets',
  ExpenseOtherBusinessExpenses = 'expense-other-business-expenses',
  OtherExpensePenaltiesSettlements = 'other-expense-penalties-settlements',
  LiabilityAccruedVacationPayable = 'liability-accrued-vacation-payable',
  OtherExpenseTaxRoundoffGainOrLoss = 'other-expense-tax-roundoff-gain-or-loss',
  RevenueServiceFeeIncome = 'revenue-service-fee-income',
  OtherExpenseRepairsAndMaintenance = 'other-expense-repairs-and-maintenance',
  OtherIncomeDividendIncome = 'other-income-dividend-income',
  OtherIncomeInterestEarned = 'other-income-interest-earned',
  EquityPartnerDistributions = 'equity-partner-distributions',
  ExpenseBorrowingCost = 'expense-borrowing-cost',
  OtherCurrentLiabilityGlobalTaxSuspense = 'other-current-liability-global-tax-suspense',
  OtherCurrentLiabilityCurrentLiabilities = 'other-current-liability-current-liabilities',
  OtherCurrentLiabilitySocialSecurityAgencies = 'other-current-liability-social-security-agencies',
  ExpenseFinanceCosts = 'expense-finance-costs',
  EquityMoneyReceivedAgainstShareWarrants = 'equity-money-received-against-share-warrants',
  ExpenseTravelExpensesSellingExpense = 'expense-travel-expenses-selling-expense',
  OtherCurrentLiabilityPrepaidExpensesPayable = 'other-current-liability-prepaid-expenses-payable',
  ExpenseCharitableContributions = 'expense-charitable-contributions',
  ExpenseCommissionsAndFees = 'expense-commissions-and-fees',
  AssetAccumulatedAmortization = 'asset-accumulated-amortization',
  ExpenseTravel = 'expense-travel',
  LiabilityGroupAndAssociates = 'liability-group-and-associates',
  OtherExpenseDepletion = 'other-expense-depletion',
  OtherExpenseVehicleRegistration = 'other-expense-vehicle-registration',
  OtherExpenseParkingAndTolls = 'other-expense-parking-and-tolls',
  RevenueOtherPrimaryIncome = 'revenue-other-primary-income',
  Equity = 'equity',
  LiabilityAccountsPayable = 'liability-accounts-payable',
  OtherCurrentLiabilityInsurancePayable = 'other-current-liability-insurance-payable',
  AssetFurnitureAndFixtures = 'asset-furniture-and-fixtures',
  OtherCurrentLiabilityTradeAndOtherPayables = 'other-current-liability-trade-and-other-payables',
  ExpenseTravelMeals = 'expense-travel-meals',
  OtherCurrentLiabilityStateLocalIncomeTaxPayable = 'other-current-liability-state-local-income-tax-payable',
  AssetAssetsAvailableForSale = 'asset-assets-available-for-sale',
  AssetOtherLongTermAssets = 'asset-other-long-term-assets',
  AssetCashOnHand = 'asset-cash-on-hand',
  OtherCurrentLiability = 'other-current-liability',
  AssetOtherEarMarkedBankAccounts = 'asset-other-ear-marked-bank-accounts',
  EquityFunds = 'equity-funds',
  OtherIncomeUnrealisedLossOnSecuritiesNetOfTax = 'other-income-unrealised-loss-on-securities-net-of-tax',
  AssetAccumulatedDepreciation = 'asset-accumulated-depreciation',
  AssetOtherLongTermInvestments = 'asset-other-long-term-investments',
  OtherExpensePriorPeriodItems = 'other-expense-prior-period-items',
  OtherCurrentLiabilityDutiesAndTaxes = 'other-current-liability-duties-and-taxes',
  AccountsReceivable = 'accounts-receivable',
  LiabilityCreditCard = 'liability-credit-card',
  AssetFixedAssetSoftware = 'asset-fixed-asset-software',
  RevenueOperatingGrants = 'revenue-operating-grants',
  OtherCurrentLiabilityDividendsPayable = 'other-current-liability-dividends-payable',
  EquityPersonalIncome = 'equity-personal-income',
  ExpenseRepairMaintenance = 'expense-repair-maintenance',
  ExpenseEntertainmentMeals = 'expense-entertainment-meals',
  AssetAvailableForSaleFinancialAssets = 'asset-available-for-sale-financial-assets',
  EquityShareCapital = 'equity-share-capital',
  EquityHealthcare = 'equity-healthcare',
  AssetVehicles = 'asset-vehicles',
  RevenueRevenueGeneral = 'revenue-revenue-general',
  OtherExpenseMortgageInterest = 'other-expense-mortgage-interest',
  RevenueOwnWorkCapitalized = 'revenue-own-work-capitalized',
  AssetCumulativeDepreciationOnIntangibleAssets = 'asset-cumulative-depreciation-on-intangible-assets',
  AssetMachineryAndEquipment = 'asset-machinery-and-equipment',
  LiabilityOutstandingDuesOtherThanMicroSmallEnterprise = 'liability-outstanding-dues-other-than-micro-small-enterprise',
  AssetAllowanceForBadDebts = 'asset-allowance-for-bad-debts',
  LiabilityOtherLongTermLiabilities = 'liability-other-long-term-liabilities',
  EquityOtherFreeReserves = 'equity-other-free-reserves',
  ExpenseLegalProfessionalFees = 'expense-legal-professional-fees',
  OtherCurrentLiabilityOtherCurrentLiabilities = 'other-current-liability-other-current-liabilities',
  AssetTradeAndOtherReceivables = 'asset-trade-and-other-receivables',
  OtherExpense = 'other-expense',
  OtherExpenseVehicleLease = 'other-expense-vehicle-lease',
  LiabilityDeferredTaxLiabilities = 'liability-deferred-tax-liabilities',
  AssetOrganizationalCosts = 'asset-organizational-costs',
  AssetOtherCurrentAssets = 'asset-other-current-assets',
  ExpenseShippingFreightDelivery = 'expense-shipping-freight-delivery',
  OtherExpenseDeferredTaxExpense = 'other-expense-deferred-tax-expense',
  EquityPersonalExpense = 'equity-personal-expense',
  RevenueSalesWholesale = 'revenue-sales-wholesale',
  OtherExpenseExceptionalItems = 'other-expense-exceptional-items',
  AssetSavings = 'asset-savings',
  LiabilityAccrualsAndDeferredIncome = 'liability-accruals-and-deferred-income',
  EquityPaidInCapitalOrSurplus = 'equity-paid-in-capital-or-surplus',
  ExpenseOtherExternalServices = 'expense-other-external-services',
  RevenueSalesRetail = 'revenue-sales-retail',
  OtherIncomeOtherInvestmentIncome = 'other-income-other-investment-income',
  ExpenseAdvertisingPromotional = 'expense-advertising-promotional',
  ExpenseTaxesPaid = 'expense-taxes-paid',
  CostOfGoodsSoldEquipmentRentalCos = 'cost-of-goods-sold-equipment-rental-cos',
  AssetDevelopmentCosts = 'asset-development-costs',
  AssetCapitalWip = 'asset-capital-wip',
  ExpenseOtherSellingExpenses = 'expense-other-selling-expenses',
  AssetShortTermLoansAndAdvancesToRelatedParties = 'asset-short-term-loans-and-advances-to-related-parties',
  OtherCurrentLiabilityFederalIncomeTaxPayable = 'other-current-liability-federal-income-tax-payable',
  OtherExpenseAmortization = 'other-expense-amortization',
  AssetFixedAssetCopiers = 'asset-fixed-asset-copiers',
  AssetLoansToStockholders = 'asset-loans-to-stockholders',
  LiabilityOutstandingDuesMicroSmallEnterprise = 'liability-outstanding-dues-micro-small-enterprise',
  AssetRetainage = 'asset-retainage',
  OtherExpenseUtilities = 'other-expense-utilities',
  ExpenseStaffCosts = 'expense-staff-costs',
  LiabilityProvisionForLiabilities = 'liability-provision-for-liabilities',
  OtherIncomeGainLossOnSaleOfFixedAssets = 'other-income-gain-loss-on-sale-of-fixed-assets',
  OtherCurrentLiabilityDirectDepositPayable = 'other-current-liability-direct-deposit-payable',
  RevenueSalesOfProductIncome = 'revenue-sales-of-product-income',
  AssetFixedAssetOtherToolsEquipment = 'asset-fixed-asset-other-tools-equipment',
  AssetInvestmentTaxExemptSecurities = 'asset-investment-tax-exempt-securities',
  CostOfGoodsSoldShippingFreightDeliveryCos = 'cost-of-goods-sold-shipping-freight-delivery-cos',
  AssetProvisionsNonCurrentAssets = 'asset-provisions-non-current-assets',
  CostOfGoodsSoldCostOfLaborCos = 'cost-of-goods-sold-cost-of-labor-cos',
  EquityPreferredStock = 'equity-preferred-stock',
  ExpenseBankCharges = 'expense-bank-charges',
  ExpenseRentOrLeaseOfBuildings = 'expense-rent-or-lease-of-buildings',
  OtherCurrentLiabilityLineOfCredit = 'other-current-liability-line-of-credit',
  LiabilityStaffAndRelatedLongTermLiabilityAccounts = 'liability-staff-and-related-long-term-liability-accounts',
  RevenueSavingsByTaxScheme = 'revenue-savings-by-tax-scheme',
  CostOfGoodsSoldOtherCostsOfServiceCos = 'cost-of-goods-sold-other-costs-of-service-cos',
  ExpenseInsurance = 'expense-insurance',
  EquityAccumulatedAdjustment = 'equity-accumulated-adjustment',
  AssetCalledUpShareCapitalNotPaid = 'asset-called-up-share-capital-not-paid',
  EquityTreasuryStock = 'equity-treasury-stock',
  EquityPartnerContributions = 'equity-partner-contributions',
  OtherExpenseVehicleLoan = 'other-expense-vehicle-loan',
  AssetBuildings = 'asset-buildings',
  AssetAssetsHeldForSale = 'asset-assets-held-for-sale',
  AssetInvestmentUsGovernmentObligations = 'asset-investment-us-government-obligations',
  OtherExpenseOtherMiscellaneousExpense = 'other-expense-other-miscellaneous-expense',
  AssetLandAsset = 'asset-land-asset',
  OtherExpenseOtherHomeOfficeExpenses = 'other-expense-other-home-office-expenses',
  AssetAssetsInCourseOfConstruction = 'asset-assets-in-course-of-construction',
  AssetSecurityDeposits = 'asset-security-deposits',
  AssetInvestmentMortgageRealEstateLoans = 'asset-investment-mortgage-real-estate-loans',
  ExpenseUnappliedCashBillPaymentExpense = 'expense-unapplied-cash-bill-payment-expense',
  OtherExpenseOtherVehicleExpenses = 'other-expense-other-vehicle-expenses',
  LiabilityObligationsUnderFinanceLeases = 'liability-obligations-under-finance-leases',
  AssetEmployeeCashAdvances = 'asset-employee-cash-advances',
  LiabilityDebtsRelatedToParticipatingInterests = 'liability-debts-related-to-participating-interests',
  EquityEquityInEarningsOfSubsidiuaries = 'equity-equity-in-earnings-of-subsidiuaries',
  ExpenseDuesSubscriptions = 'expense-dues-subscriptions',
  ExpenseEquipmentRental = 'expense-equipment-rental',
  EquityAccumulatedOtherComprehensiveIncome = 'equity-accumulated-other-comprehensive-income',
  OtherIncomeLossOnDisposalOfAssets = 'other-income-loss-on-disposal-of-assets',
  EquityInvestmentGrants = 'equity-investment-grants',
  ExpenseGlobalTaxExpense = 'expense-global-tax-expense',
  ExpenseInterestPaid = 'expense-interest-paid',
  OtherExpenseIncomeTaxOtherExpense = 'other-expense-income-tax-other-expense',
  OtherCurrentLiabilityTrustAccountsLiabilities = 'other-current-liability-trust-accounts-liabilities'
}
export const enum SkuValidation {
  LocalUnique = 'local-unique',
  None = 'none',
  GlobalUnique = 'global-unique'
}
export const enum Gender {
  Other = 'other',
  PreferNotToSay = 'prefer-not-to-say',
  Female = 'female',
  Male = 'male'
}
export const enum Country {
  UnitedStates = 'united-states',
  SaintVincentAndTheGrenadines = 'saint-vincent-and-the-grenadines',
  Poland = 'poland',
  Azerbaijan = 'azerbaijan',
  Kyrgyzstan = 'kyrgyzstan',
  Cyprus = 'cyprus',
  SolomonIslands = 'solomon-islands',
  Cambodia = 'cambodia',
  Afghanistan = 'afghanistan',
  BurkinaFaso = 'burkina-faso',
  China = 'china',
  Dominica = 'dominica',
  Colombia = 'colombia',
  Jordan = 'jordan',
  NorthMacedonia = 'north-macedonia',
  Portugal = 'portugal',
  Seychelles = 'seychelles',
  Tajikistan = 'tajikistan',
  Tunisia = 'tunisia',
  Uzbekistan = 'uzbekistan',
  Kazakhstan = 'kazakhstan',
  Namibia = 'namibia',
  SierraLeone = 'sierra-leone',
  Guinea = 'guinea',
  Tonga = 'tonga',
  SriLanka = 'sri-lanka',
  Turkmenistan = 'turkmenistan',
  Austria = 'austria',
  Mongolia = 'mongolia',
  Angola = 'angola',
  Haiti = 'haiti',
  Lebanon = 'lebanon',
  Senegal = 'senegal',
  Honduras = 'honduras',
  Ireland = 'ireland',
  Montenegro = 'montenegro',
  Syria = 'syria',
  Vanuatu = 'vanuatu',
  Denmark = 'denmark',
  CzechRepublic = 'czech-republic',
  Mauritius = 'mauritius',
  Thailand = 'thailand',
  Micronesia = 'micronesia',
  Slovakia = 'slovakia',
  Gabon = 'gabon',
  Netherlands = 'netherlands',
  Bahrain = 'bahrain',
  UnitedKingdom = 'united-kingdom',
  Djibouti = 'djibouti',
  Australia = 'australia',
  Hungary = 'hungary',
  Botswana = 'botswana',
  CoteDIvoire = 'cote-d-ivoire',
  Luxembourg = 'luxembourg',
  NorthKorea = 'north-korea',
  Bolivia = 'bolivia',
  Peru = 'peru',
  AntiguaAndBarbuda = 'antigua-and-barbuda',
  Bahamas = 'bahamas',
  Argentina = 'argentina',
  CaboVerde = 'cabo-verde',
  SaintKittsAndNevis = 'saint-kitts-and-nevis',
  Georgia = 'georgia',
  Madagascar = 'madagascar',
  Rwanda = 'rwanda',
  Lesotho = 'lesotho',
  SanMarino = 'san-marino',
  SaoTomeAndPrincipe = 'sao-tome-and-principe',
  Lithuania = 'lithuania',
  Philippines = 'philippines',
  Liberia = 'liberia',
  Monaco = 'monaco',
  Romania = 'romania',
  Nauru = 'nauru',
  Russia = 'russia',
  SouthSudan = 'south-sudan',
  NewZealand = 'new-zealand',
  Brazil = 'brazil',
  Kenya = 'kenya',
  UnitedArabEmirates = 'united-arab-emirates',
  Egypt = 'egypt',
  Comoros = 'comoros',
  SouthAfrica = 'south-africa',
  Fiji = 'fiji',
  Singapore = 'singapore',
  ElSalvador = 'el-salvador',
  Mexico = 'mexico',
  Switzerland = 'switzerland',
  Canada = 'canada',
  Suriname = 'suriname',
  Nigeria = 'nigeria',
  Somalia = 'somalia',
  Uruguay = 'uruguay',
  Iceland = 'iceland',
  Benin = 'benin',
  MarshallIslands = 'marshall-islands',
  Palestine = 'palestine',
  Kiribati = 'kiribati',
  SaintLucia = 'saint-lucia',
  Uganda = 'uganda',
  Bangladesh = 'bangladesh',
  Zimbabwe = 'zimbabwe',
  Turkey = 'turkey',
  Cuba = 'cuba',
  Yemen = 'yemen',
  Samoa = 'samoa',
  Finland = 'finland',
  Burundi = 'burundi',
  SaudiArabia = 'saudi-arabia',
  Mauritania = 'mauritania',
  CostaRica = 'costa-rica',
  SouthKorea = 'south-korea',
  Laos = 'laos',
  Togo = 'togo',
  Paraguay = 'paraguay',
  Tanzania = 'tanzania',
  Iraq = 'iraq',
  Ecuador = 'ecuador',
  Serbia = 'serbia',
  Tuvalu = 'tuvalu',
  DominicanRepublic = 'dominican-republic',
  Grenada = 'grenada',
  Cameroon = 'cameroon',
  France = 'france',
  Zambia = 'zambia',
  Belize = 'belize',
  Panama = 'panama',
  Andorra = 'andorra',
  Spain = 'spain',
  CongoDemocraticRepublic = 'congo-democratic-republic',
  Estonia = 'estonia',
  Liechtenstein = 'liechtenstein',
  Ukraine = 'ukraine',
  Eritrea = 'eritrea',
  TimorLeste = 'timor-leste',
  Kuwait = 'kuwait',
  Bulgaria = 'bulgaria',
  Chile = 'chile',
  Myanmar = 'myanmar',
  Libya = 'libya',
  Guatemala = 'guatemala',
  Ethiopia = 'ethiopia',
  Japan = 'japan',
  Pakistan = 'pakistan',
  Bhutan = 'bhutan',
  Mali = 'mali',
  Malta = 'malta',
  Niger = 'niger',
  Sudan = 'sudan',
  Eswatini = 'eswatini',
  Belarus = 'belarus',
  Belgium = 'belgium',
  GuineaBissau = 'guinea-bissau',
  BosniaAndHerzegovina = 'bosnia-and-herzegovina',
  Malaysia = 'malaysia',
  Nepal = 'nepal',
  Israel = 'israel',
  Brunei = 'brunei',
  Germany = 'germany',
  EquatorialGuinea = 'equatorial-guinea',
  Slovenia = 'slovenia',
  Sweden = 'sweden',
  Chad = 'chad',
  Barbados = 'barbados',
  Indonesia = 'indonesia',
  Malawi = 'malawi',
  Nicaragua = 'nicaragua',
  Oman = 'oman',
  Ghana = 'ghana',
  TrinidadAndTobago = 'trinidad-and-tobago',
  Greece = 'greece',
  Croatia = 'croatia',
  Qatar = 'qatar',
  Italy = 'italy',
  Iran = 'iran',
  Guyana = 'guyana',
  Maldives = 'maldives',
  VaticanCity = 'vatican-city',
  CentralAfricanRepublic = 'central-african-republic',
  India = 'india',
  Morocco = 'morocco',
  PapuaNewGuinea = 'papua-new-guinea',
  Norway = 'norway',
  Albania = 'albania',
  CongoRepublic = 'congo-republic',
  Jamaica = 'jamaica',
  Armenia = 'armenia',
  Moldova = 'moldova',
  Latvia = 'latvia',
  Taiwan = 'taiwan',
  Algeria = 'algeria',
  Gambia = 'gambia',
  Palau = 'palau',
  Venezuela = 'venezuela',
  Vietnam = 'vietnam',
  Mozambique = 'mozambique'
}
export const enum EmploymentType {
  PartTime = 'part-time',
  Volunteer = 'volunteer',
  Contract = 'contract',
  Internship = 'internship',
  FullTime = 'full-time',
  Temporary = 'temporary',
  Seasonal = 'seasonal',
  Freelance = 'freelance',
  Permanent = 'permanent'
}
export const enum TimeCycle {
  Triennially = 'triennially',
  AdHoc = 'ad-hoc',
  Weekly = 'weekly',
  Hourly = 'hourly',
  Biweekly = 'biweekly',
  Quarterly = 'quarterly',
  SemiAnnually = 'semi-annually',
  Biennially = 'biennially',
  SemiMonthly = 'semi-monthly',
  Annually = 'annually',
  Secondly = 'secondly',
  Monthly = 'monthly',
  Custom = 'custom',
  Daily = 'daily',
  Minutely = 'minutely'
}
export const enum FinancialTrackingCategories {
  Employee = 'employee',
  None = 'none',
  Class = 'class',
  Vendor = 'vendor',
  Product = 'product',
  Project = 'project',
  Department = 'department',
  CostCenter = 'cost-center',
  Customer = 'customer',
  Division = 'division',
  Other = 'other',
  Service = 'service',
  Location = 'location'
}
export const enum CreditNoteStatus {
  Applied = 'applied',
  Issued = 'issued',
  Disputed = 'disputed',
  Completed = 'completed',
  Void = 'void',
  Revised = 'revised',
  Pending = 'pending',
  Draft = 'draft',
  Cancelled = 'cancelled'
}
export const enum GlobalTaxType {
  SalesTax = 'sales-tax',
  CustomsDuty = 'customs-duty',
  ExciseTax = 'excise-tax',
  PropertyTax = 'property-tax',
  Vat = 'vat',
  Other = 'other',
  Gst = 'gst'
}
export const enum JournalEntryStatus {
  Error = 'error',
  Corrected = 'corrected',
  Voided = 'voided',
  Posted = 'posted',
  Draft = 'draft',
  Pending = 'pending'
}
export const enum PaymentTerm {
  DueEndOfMonth = 'due-end-of-month',
  DeferredPayment = 'deferred-payment',
  Prepayment = 'prepayment',
  CashWithOrder = 'cash-with-order',
  UponCompletion = 'upon-completion',
  Net = 'net',
  CashInAdvance = 'cash-in-advance',
  Installment = 'installment',
  Net60 = 'net-60',
  Net90 = 'net-90',
  DueOnReceipt = 'due-on-receipt',
  Prepaid = 'prepaid',
  CashOnDelivery = 'cash-on-delivery',
  Net30 = 'net-30',
  Custom = 'custom',
  CashBeforeShipment = 'cash-before-shipment'
}
export const enum IdentityProvider {
  Facebook = 'facebook',
  Pinterest = 'pinterest',
  Instagram = 'instagram',
  Github = 'github',
  Wechat = 'wechat',
  Paypal = 'paypal',
  Foursquare = 'foursquare',
  Tiktok = 'tiktok',
  Discord = 'discord',
  Dribbble = 'dribbble',
  Qq = 'qq',
  Line = 'line',
  Whatsapp = 'whatsapp',
  Behance = 'behance',
  Slack = 'slack',
  Other = 'other',
  Yahoo = 'yahoo',
  Signal = 'signal',
  Flickr = 'flickr',
  Vimeo = 'vimeo',
  Reddit = 'reddit',
  Apple = 'apple',
  Twitter = 'twitter',
  Linkedin = 'linkedin',
  Amazon = 'amazon',
  Google = 'google',
  Microsoft = 'microsoft',
  Tumblr = 'tumblr',
  Snapchat = 'snapchat',
  Telegram = 'telegram'
}
export const enum EmploymentAndCandidateStatus {
  OnLeave = 'on-leave',
  NotSelected = 'not-selected',
  Inactive = 'inactive',
  InReview = 'in-review',
  Interviewing = 'interviewing',
  Other = 'other',
  New = 'new',
  Terminated = 'terminated',
  OfferExtended = 'offer-extended',
  Hired = 'hired',
  Active = 'active'
}
export const enum DayOfWeek {
  Wednesday = 'wednesday',
  Saturday = 'saturday',
  Sunday = 'sunday',
  Friday = 'friday',
  Tuesday = 'tuesday',
  Thursday = 'thursday',
  Monday = 'monday'
}
export const enum OrganizationalRole {
  Director = 'director',
  Supervisor = 'supervisor',
  Contractor = 'contractor',
  Other = 'other',
  Admin = 'admin',
  Employee = 'employee',
  Manager = 'manager'
}
export const enum AccountEngagementLevel {
  Cold = 'cold',
  Unknown = 'unknown',
  Hot = 'hot',
  Warm = 'warm'
}
export const enum ReviewApprovalStatus {
  Pending = 'pending',
  Approved = 'approved',
  Revised = 'revised',
  Rejected = 'rejected',
  InReview = 'in-review'
}
export const enum StakeholderType {
  Competitor = 'competitor',
  Vendor = 'vendor',
  Customer = 'customer',
  Other = 'other',
  Partner = 'partner',
  Investor = 'investor'
}
export const enum CampaignType {
  SocialMedia = 'social-media',
  Display = 'display',
  Other = 'other',
  SearchEngine = 'search-engine',
  Email = 'email'
}
export const enum ContactAddressType {
  Home = 'home',
  Other = 'other',
  Business = 'business',
  Work = 'work',
  Shipping = 'shipping',
  Personal = 'personal',
  Billing = 'billing',
  Temporary = 'temporary'
}
export const enum AccountStatus {
  Pending = 'pending',
  Suspended = 'suspended',
  Active = 'active',
  Closed = 'closed',
  Inactive = 'inactive'
}
export const enum CampaignStatus {
  Completed = 'completed',
  Cancelled = 'cancelled',
  Planned = 'planned',
  Draft = 'draft',
  Paused = 'paused',
  Active = 'active',
  Archived = 'archived',
  Scheduled = 'scheduled'
}
export const enum CustomerStatus {
  Suspended = 'suspended',
  Active = 'active',
  Inactive = 'inactive',
  Archived = 'archived',
  Pending = 'pending'
}
export const enum CustomerType {
  Online = 'online',
  B2c = 'b-2-c',
  Corporate = 'corporate',
  Wholesale = 'wholesale',
  B2b = 'b-2-b',
  Retail = 'retail'
}
export const enum SocialPlatform {
  Tiktok = 'tiktok',
  Pinterest = 'pinterest',
  Youtube = 'youtube',
  Tumblr = 'tumblr',
  Facebook = 'facebook',
  X = 'x',
  Linkedin = 'linkedin',
  Instagram = 'instagram',
  Twitter = 'twitter',
  Snapchat = 'snapchat',
  Skype = 'skype',
  Reddit = 'reddit',
  OtherSocialPlatform = 'other-social-platform'
}
export const enum LeadLifecycleStatus {
  Converted = 'converted',
  Open = 'open',
  Unqualified = 'unqualified',
  InProcess = 'in-process',
  Lost = 'lost',
  AttemptedToContact = 'attempted-to-contact',
  New = 'new',
  Connected = 'connected',
  Revisited = 'revisited',
  BadTiming = 'bad-timing'
}
export const enum AccountingAccountType {
  OtherExpenseOtherHomeOfficeExpenses = 'other-expense-other-home-office-expenses',
  OtherExpenseVehicleRepairs = 'other-expense-vehicle-repairs',
  CostOfGoodsSoldShippingFreightDeliveryCos = 'cost-of-goods-sold-shipping-freight-delivery-cos',
  ExpenseProjectStudiesSurveysAssessments = 'expense-project-studies-surveys-assessments',
  ExpenseCommissionsAndFees = 'expense-commissions-and-fees',
  ExpenseEntertainmentMeals = 'expense-entertainment-meals',
  OtherExpenseVehicle = 'other-expense-vehicle',
  ExpenseTravel = 'expense-travel',
  AssetOtherConsumables = 'asset-other-consumables',
  EquityTreasuryStock = 'equity-treasury-stock',
  ExpenseExtraordinaryCharges = 'expense-extraordinary-charges',
  OtherExpenseVehicleLoanInterest = 'other-expense-vehicle-loan-interest',
  OtherExpenseDepletion = 'other-expense-depletion',
  OtherExpenseExceptionalItems = 'other-expense-exceptional-items',
  AssetProvisionsNonCurrentAssets = 'asset-provisions-non-current-assets',
  LiabilityDebtsRelatedToParticipatingInterests = 'liability-debts-related-to-participating-interests',
  OtherCurrentLiabilityPayrollClearing = 'other-current-liability-payroll-clearing',
  Asset = 'asset',
  AssetNonCurrentAssets = 'asset-non-current-assets',
  CostOfGoodsSoldCostOfLaborCos = 'cost-of-goods-sold-cost-of-labor-cos',
  OtherIncomeOtherMiscellaneousIncome = 'other-income-other-miscellaneous-income',
  AssetLongTermInvestments = 'asset-long-term-investments',
  ExpenseTravelExpensesGeneralAndAdminExpenses = 'expense-travel-expenses-general-and-admin-expenses',
  ExpensePayrollExpenses = 'expense-payroll-expenses',
  OtherExpenseRentAndLease = 'other-expense-rent-and-lease',
  LiabilityAccrualsAndDeferredIncome = 'liability-accruals-and-deferred-income',
  LiabilityStaffAndRelatedLongTermLiabilityAccounts = 'liability-staff-and-related-long-term-liability-accounts',
  AssetLicenses = 'asset-licenses',
  AssetUndepositedFunds = 'asset-undeposited-funds',
  LiabilityObligationsUnderFinanceLeases = 'liability-obligations-under-finance-leases',
  EquityRetainedEarnings = 'equity-retained-earnings',
  OtherExpenseRepairsAndMaintenance = 'other-expense-repairs-and-maintenance',
  OtherCurrentLiabilitySalesTaxPayable = 'other-current-liability-sales-tax-payable',
  OtherCurrentLiabilityCurrentTaxLiability = 'other-current-liability-current-tax-liability',
  OtherCurrentLiabilityTradeAndOtherPayables = 'other-current-liability-trade-and-other-payables',
  OtherCurrentLiabilityPrepaidExpensesPayable = 'other-current-liability-prepaid-expenses-payable',
  AssetLongTermLoansAndAdvancesToRelatedParties = 'asset-long-term-loans-and-advances-to-related-parties',
  LiabilityOtherLongTermLiabilities = 'liability-other-long-term-liabilities',
  AssetTrustAccounts = 'asset-trust-accounts',
  AssetGlobalTaxDeferred = 'asset-global-tax-deferred',
  LiabilityLongTermLiability = 'liability-long-term-liability',
  CostOfGoodsSold = 'cost-of-goods-sold',
  ExpenseEntertainment = 'expense-entertainment',
  ExpenseOtherCurrentOperatingCharges = 'expense-other-current-operating-charges',
  OtherExpenseGasAndFuel = 'other-expense-gas-and-fuel',
  AssetCashAndCashEquivalents = 'asset-cash-and-cash-equivalents',
  ExpenseAuto = 'expense-auto',
  ExpenseSundry = 'expense-sundry',
  OtherExpenseMortgageInterest = 'other-expense-mortgage-interest',
  OtherCurrentLiabilityLoanPayable = 'other-current-liability-loan-payable',
  AssetSavings = 'asset-savings',
  EquityCalledUpShareCapital = 'equity-called-up-share-capital',
  EquityAccumulatedOtherComprehensiveIncome = 'equity-accumulated-other-comprehensive-income',
  OtherIncomeOtherOperatingIncome = 'other-income-other-operating-income',
  ExpenseAppropriationsToDepreciation = 'expense-appropriations-to-depreciation',
  OtherExpenseExtraordinaryItems = 'other-expense-extraordinary-items',
  LiabilityAccruedLongTermLiabilities = 'liability-accrued-long-term-liabilities',
  EquityPersonalExpense = 'equity-personal-expense',
  RevenueServiceFeeIncome = 'revenue-service-fee-income',
  CostOfGoodsSoldCostOfSales = 'cost-of-goods-sold-cost-of-sales',
  AccountsReceivable = 'accounts-receivable',
  AssetPrepaymentsAndAccruedIncome = 'asset-prepayments-and-accrued-income',
  OtherExpenseMatCredit = 'other-expense-mat-credit',
  RevenueSalesWholesale = 'revenue-sales-wholesale',
  AssetLand = 'asset-land',
  OtherExpenseUtilities = 'other-expense-utilities',
  OtherExpenseHomeOffice = 'other-expense-home-office',
  AssetTradeAndOtherReceivables = 'asset-trade-and-other-receivables',
  AssetParticipatingInterests = 'asset-participating-interests',
  OtherIncomeOtherInvestmentIncome = 'other-income-other-investment-income',
  AssetCalledUpShareCapitalNotPaid = 'asset-called-up-share-capital-not-paid',
  AssetOtherFixedAssets = 'asset-other-fixed-assets',
  AssetInvestments = 'asset-investments',
  AssetInvestmentOther = 'asset-investment-other',
  OtherCurrentLiabilityRentsInTrustLiability = 'other-current-liability-rents-in-trust-liability',
  AssetRetainage = 'asset-retainage',
  ExpenseCharitableContributions = 'expense-charitable-contributions',
  ExpenseRentOrLeaseOfBuildings = 'expense-rent-or-lease-of-buildings',
  ExpenseRepairMaintenance = 'expense-repair-maintenance',
  ExpenseLossOnDiscontinuedOperationsNetOfTax = 'expense-loss-on-discontinued-operations-net-of-tax',
  EquityPersonalIncome = 'equity-personal-income',
  ExpenseTaxesPaid = 'expense-taxes-paid',
  ExpenseOtherSellingExpenses = 'expense-other-selling-expenses',
  OtherExpenseDeferredTaxExpense = 'other-expense-deferred-tax-expense',
  RevenueUnappliedCashPaymentIncome = 'revenue-unapplied-cash-payment-income',
  AssetDevelopmentCosts = 'asset-development-costs',
  AssetEmployeeCashAdvances = 'asset-employee-cash-advances',
  AssetFixedAssetPhone = 'asset-fixed-asset-phone',
  AssetOrganizationalCosts = 'asset-organizational-costs',
  OtherCurrentLiabilityProvisionForWarrantyObligations = 'other-current-liability-provision-for-warranty-obligations',
  CostOfGoodsSoldFreightAndDeliveryCost = 'cost-of-goods-sold-freight-and-delivery-cost',
  LiabilityAccruedVacationPayable = 'liability-accrued-vacation-payable',
  EquityPartnerDistributions = 'equity-partner-distributions',
  ExpenseSuppliesMaterials = 'expense-supplies-materials',
  EquityEstimatedTaxes = 'equity-estimated-taxes',
  AssetFixedAssetSoftware = 'asset-fixed-asset-software',
  LiabilityProvisionsNonCurrentLiabilities = 'liability-provisions-non-current-liabilities',
  EquityPartnersEquity = 'equity-partners-equity',
  AssetBank = 'asset-bank',
  EquityAccumulatedAdjustment = 'equity-accumulated-adjustment',
  CostOfGoodsSoldSuppliesMaterialsCogs = 'cost-of-goods-sold-supplies-materials-cogs',
  OtherCurrentLiabilitySocialSecurityAgencies = 'other-current-liability-social-security-agencies',
  AssetExpenditureAuthorisationsAndLettersOfCredit = 'asset-expenditure-authorisations-and-letters-of-credit',
  OtherCurrentLiabilitySundryDebtorsAndCreditors = 'other-current-liability-sundry-debtors-and-creditors',
  AssetFixedAssetCopiers = 'asset-fixed-asset-copiers',
  LiabilityProvisionForLiabilities = 'liability-provision-for-liabilities',
  LiabilityDeferredTaxLiabilities = 'liability-deferred-tax-liabilities',
  AssetShortTermLoansAndAdvancesToRelatedParties = 'asset-short-term-loans-and-advances-to-related-parties',
  ExpenseEquipmentRental = 'expense-equipment-rental',
  AssetAssetsAvailableForSale = 'asset-assets-available-for-sale',
  ExpenseOtherExternalServices = 'expense-other-external-services',
  ExpenseStaffCosts = 'expense-staff-costs',
  OtherExpenseAmortization = 'other-expense-amortization',
  AssetSecurityDeposits = 'asset-security-deposits',
  EquityOpeningBalanceEquity = 'equity-opening-balance-equity',
  EquityCommonStock = 'equity-common-stock',
  OtherExpenseTaxRoundoffGainOrLoss = 'other-expense-tax-roundoff-gain-or-loss',
  RevenueCashReceiptIncome = 'revenue-cash-receipt-income',
  ExpenseBankCharges = 'expense-bank-charges',
  ExpenseFinanceCosts = 'expense-finance-costs',
  ExpenseInterestPaid = 'expense-interest-paid',
  ExpenseAdvertisingPromotional = 'expense-advertising-promotional',
  OtherExpenseIncomeTaxOtherExpense = 'other-expense-income-tax-other-expense',
  ExpenseDistributionCosts = 'expense-distribution-costs',
  EquityPaidInCapitalOrSurplus = 'equity-paid-in-capital-or-surplus',
  AssetFixedAssetPhotoVideo = 'asset-fixed-asset-photo-video',
  EquityOwnersEquity = 'equity-owners-equity',
  AssetLandAsset = 'asset-land-asset',
  OtherCurrentLiabilityInsurancePayable = 'other-current-liability-insurance-payable',
  OtherCurrentLiabilityGlobalTaxPayable = 'other-current-liability-global-tax-payable',
  OtherCurrentLiabilityDutiesAndTaxes = 'other-current-liability-duties-and-taxes',
  OtherExpenseDepreciation = 'other-expense-depreciation',
  AssetFixedAssetFurniture = 'asset-fixed-asset-furniture',
  OtherExpensePriorPeriodItems = 'other-expense-prior-period-items',
  LiabilityOutstandingDuesMicroSmallEnterprise = 'liability-outstanding-dues-micro-small-enterprise',
  RevenueOtherPrimaryIncome = 'revenue-other-primary-income',
  OtherIncome = 'other-income',
  AssetPrepaidExpenses = 'asset-prepaid-expenses',
  AssetBalWithGovtAuthorities = 'asset-bal-with-govt-authorities',
  OtherIncomeTaxExemptInterest = 'other-income-tax-exempt-interest',
  OtherCurrentLiabilityFederalIncomeTaxPayable = 'other-current-liability-federal-income-tax-payable',
  ExpenseExternalServices = 'expense-external-services',
  OtherCurrentLiabilityStaffAndRelatedLiabilityAccounts = 'other-current-liability-staff-and-related-liability-accounts',
  ExpenseBadDebts = 'expense-bad-debts',
  ExpenseUnappliedCashBillPaymentExpense = 'expense-unapplied-cash-bill-payment-expense',
  AssetAssetsInCourseOfConstruction = 'asset-assets-in-course-of-construction',
  AssetOtherCurrentAssets = 'asset-other-current-assets',
  AssetLoansToStockholders = 'asset-loans-to-stockholders',
  AssetAccumulatedDepreciation = 'asset-accumulated-depreciation',
  AssetOtherLongTermAssets = 'asset-other-long-term-assets',
  ExpenseCostOfLabor = 'expense-cost-of-labor',
  OtherCurrentLiabilityStateLocalIncomeTaxPayable = 'other-current-liability-state-local-income-tax-payable',
  RevenueIncome = 'revenue-income',
  EquityPreferredStock = 'equity-preferred-stock',
  ExpensePurchasesRebates = 'expense-purchases-rebates',
  ExpenseUtilities = 'expense-utilities',
  RevenueDiscountsRefundsGiven = 'revenue-discounts-refunds-given',
  RevenueSavingsByTaxScheme = 'revenue-savings-by-tax-scheme',
  OtherExpenseHomeOwnerRentalInsurance = 'other-expense-home-owner-rental-insurance',
  ExpenseBorrowingCost = 'expense-borrowing-cost',
  OtherIncomeDividendIncome = 'other-income-dividend-income',
  AssetOtherIntangibleAssets = 'asset-other-intangible-assets',
  AssetFixedAssetOtherToolsEquipment = 'asset-fixed-asset-other-tools-equipment',
  OtherExpenseOtherMiscellaneousExpense = 'other-expense-other-miscellaneous-expense',
  OtherCurrentLiabilityProvisionsCurrentLiabilities = 'other-current-liability-provisions-current-liabilities',
  AssetCumulativeDepreciationOnIntangibleAssets = 'asset-cumulative-depreciation-on-intangible-assets',
  AssetGoodwill = 'asset-goodwill',
  ExpenseTravelMeals = 'expense-travel-meals',
  OtherExpensePenaltiesSettlements = 'other-expense-penalties-settlements',
  OtherIncomeGainLossOnSaleOfFixedAssets = 'other-income-gain-loss-on-sale-of-fixed-assets',
  AssetAvailableForSaleFinancialAssets = 'asset-available-for-sale-financial-assets',
  OtherExpenseParkingAndTolls = 'other-expense-parking-and-tolls',
  OtherCurrentLiabilityLineOfCredit = 'other-current-liability-line-of-credit',
  ExpenseManagementCompensation = 'expense-management-compensation',
  OtherExpenseExchangeGainOrLoss = 'other-expense-exchange-gain-or-loss',
  OtherExpenseVehicleLoan = 'other-expense-vehicle-loan',
  OtherCurrentLiabilityCurrentLiabilities = 'other-current-liability-current-liabilities',
  EquityCapitalReserves = 'equity-capital-reserves',
  AssetProvisionsCurrentAssets = 'asset-provisions-current-assets',
  AssetOtherLongTermInvestments = 'asset-other-long-term-investments',
  AssetRentsHeldInTrust = 'asset-rents-held-in-trust',
  OtherCurrentLiabilityGlobalTaxSuspense = 'other-current-liability-global-tax-suspense',
  OtherCurrentLiabilityPayrollTaxPayable = 'other-current-liability-payroll-tax-payable',
  RevenueRevenueGeneral = 'revenue-revenue-general',
  OtherCurrentLiabilityShortTermBorrowings = 'other-current-liability-short-term-borrowings',
  OtherCurrentLiabilityDirectDepositPayable = 'other-current-liability-direct-deposit-payable',
  AssetCashOnHand = 'asset-cash-on-hand',
  AssetInvestmentMortgageRealEstateLoans = 'asset-investment-mortgage-real-estate-loans',
  AssetDeferredTax = 'asset-deferred-tax',
  RevenueSalesOfProductIncome = 'revenue-sales-of-product-income',
  AssetInvestmentTaxExemptSecurities = 'asset-investment-tax-exempt-securities',
  EquityFunds = 'equity-funds',
  OtherCurrentLiabilityInterestPayables = 'other-current-liability-interest-payables',
  LiabilityLongTermBorrowings = 'liability-long-term-borrowings',
  ExpensePromotionalMeals = 'expense-promotional-meals',
  AssetInvestmentUsGovernmentObligations = 'asset-investment-us-government-obligations',
  LiabilityLongTermEmployeeBenefitObligations = 'liability-long-term-employee-benefit-obligations',
  ExpenseOfficeGeneralAdministrativeExpenses = 'expense-office-general-administrative-expenses',
  ExpenseInsurance = 'expense-insurance',
  LiabilityCreditCard = 'liability-credit-card',
  LiabilityBankLoans = 'liability-bank-loans',
  OtherExpenseVehicleRegistration = 'other-expense-vehicle-registration',
  ExpenseShippingAndDeliveryExpense = 'expense-shipping-and-delivery-expense',
  EquityDividendDisbursed = 'equity-dividend-disbursed',
  AssetMoneyMarket = 'asset-money-market',
  AssetOtherEarMarkedBankAccounts = 'asset-other-ear-marked-bank-accounts',
  CostOfGoodsSoldEquipmentRentalCos = 'cost-of-goods-sold-equipment-rental-cos',
  OtherExpenseOtherVehicleExpenses = 'other-expense-other-vehicle-expenses',
  LiabilityOutstandingDuesOtherThanMicroSmallEnterprise = 'liability-outstanding-dues-other-than-micro-small-enterprise',
  OtherIncomeInterestEarned = 'other-income-interest-earned',
  AssetVehicles = 'asset-vehicles',
  LiabilityGovernmentAndOtherPublicAuthorities = 'liability-government-and-other-public-authorities',
  EquityShareApplicationMoneyPendingAllotment = 'equity-share-application-money-pending-allotment',
  RevenueNonProfitIncome = 'revenue-non-profit-income',
  CostOfGoodsSoldOtherCostsOfServiceCos = 'cost-of-goods-sold-other-costs-of-service-cos',
  ExpenseIncomeTaxExpense = 'expense-income-tax-expense',
  AssetLoansToOfficers = 'asset-loans-to-officers',
  AssetAssetsHeldForSale = 'asset-assets-held-for-sale',
  AssetOtherLongTermLoansAndAdvances = 'asset-other-long-term-loans-and-advances',
  LiabilityShareholderNotesPayable = 'liability-shareholder-notes-payable',
  OtherCurrentLiabilityCurrentPortionEmployeeBenefitsObligations = 'other-current-liability-current-portion-employee-benefits-obligations',
  RevenueOwnWorkCapitalized = 'revenue-own-work-capitalized',
  ExpenseOfficeExpenses = 'expense-office-expenses',
  ExpenseDuesSubscriptions = 'expense-dues-subscriptions',
  AssetDepletableAssets = 'asset-depletable-assets',
  AssetShortTermInvestmentsInRelatedParties = 'asset-short-term-investments-in-related-parties',
  OtherExpenseVehicleInsurance = 'other-expense-vehicle-insurance',
  Expense = 'expense',
  RevenueSalesRetail = 'revenue-sales-retail',
  AssetInventory = 'asset-inventory',
  OtherCurrentLiability = 'other-current-liability',
  AssetOtherCurrentAsset = 'asset-other-current-asset',
  AssetProvisionsFixedAssets = 'asset-provisions-fixed-assets',
  Equity = 'equity',
  LiabilityOtherLongTermProvisions = 'liability-other-long-term-provisions',
  EquityEquityInEarningsOfSubsidiuaries = 'equity-equity-in-earnings-of-subsidiuaries',
  AssetOtherAsset = 'asset-other-asset',
  ExpenseAmortizationExpense = 'expense-amortization-expense',
  ExpenseLegalProfessionalFees = 'expense-legal-professional-fees',
  ExpenseOtherBusinessExpenses = 'expense-other-business-expenses',
  OtherExpenseWashAndRoadServices = 'other-expense-wash-and-road-services',
  LiabilityAccountsPayable = 'liability-accounts-payable',
  EquityInvestmentGrants = 'equity-investment-grants',
  LiabilityLongTermDebit = 'liability-long-term-debit',
  AssetLeaseholdImprovements = 'asset-leasehold-improvements',
  OtherCurrentLiabilityDividendsPayable = 'other-current-liability-dividends-payable',
  AssetInternalTransfers = 'asset-internal-transfers',
  AssetIntangibleAssetsUnderDevelopment = 'asset-intangible-assets-under-development',
  ExpenseOtherMiscellaneousServiceCost = 'expense-other-miscellaneous-service-cost',
  EquityMoneyReceivedAgainstShareWarrants = 'equity-money-received-against-share-warrants',
  OtherCurrentLiabilityTrustAccountsLiabilities = 'other-current-liability-trust-accounts-liabilities',
  AssetAccumulatedAmortization = 'asset-accumulated-amortization',
  EquityShareCapital = 'equity-share-capital',
  OtherExpense = 'other-expense',
  LiabilityNotesPayable = 'liability-notes-payable',
  ExpenseTravelExpensesSellingExpense = 'expense-travel-expenses-selling-expense',
  OtherIncomeLossOnDisposalOfAssets = 'other-income-loss-on-disposal-of-assets',
  EquityHealthcare = 'equity-healthcare',
  AssetAllowanceForBadDebts = 'asset-allowance-for-bad-debts',
  AssetBuildings = 'asset-buildings',
  ExpenseShippingFreightDelivery = 'expense-shipping-freight-delivery',
  OtherCurrentLiabilityOtherCurrentLiabilities = 'other-current-liability-other-current-liabilities',
  OtherCurrentLiabilityCurrentPortionOfObligationsUnderFinanceLeases = 'other-current-liability-current-portion-of-obligations-under-finance-leases',
  AssetCapitalWip = 'asset-capital-wip',
  RevenueOtherCurrentOperatingIncome = 'revenue-other-current-operating-income',
  AssetFixedAsset = 'asset-fixed-asset',
  OtherExpenseVehicleLease = 'other-expense-vehicle-lease',
  OtherCurrentLiabilityAccruedLiabilities = 'other-current-liability-accrued-liabilities',
  AssetFurnitureAndFixtures = 'asset-furniture-and-fixtures',
  AssetChecking = 'asset-checking',
  AssetLoansToOthers = 'asset-loans-to-others',
  AssetFixedAssetComputers = 'asset-fixed-asset-computers',
  AssetMachineryAndEquipment = 'asset-machinery-and-equipment',
  RevenueOperatingGrants = 'revenue-operating-grants',
  AssetIntangibleAssets = 'asset-intangible-assets',
  AssetAccumulatedDepletion = 'asset-accumulated-depletion',
  AssetAccumulatedAmortizationOfOtherAssets = 'asset-accumulated-amortization-of-other-assets',
  EquityPartnerContributions = 'equity-partner-contributions',
  EquityOtherFreeReserves = 'equity-other-free-reserves',
  OtherIncomeGainLossOnSaleOfInvestments = 'other-income-gain-loss-on-sale-of-investments',
  ExpenseGlobalTaxExpense = 'expense-global-tax-expense',
  ExpenseOtherRentalCosts = 'expense-other-rental-costs',
  AssetLeaseBuyout = 'asset-lease-buyout',
  LiabilityLiabilitiesRelatedToAssetsHeldForSale = 'liability-liabilities-related-to-assets-held-for-sale',
  AssetGlobalTaxRefund = 'asset-global-tax-refund',
  OtherIncomeUnrealisedLossOnSecuritiesNetOfTax = 'other-income-unrealised-loss-on-securities-net-of-tax',
  LiabilityGroupAndAssociates = 'liability-group-and-associates'
}
export const enum ConversationStatus {
  Active = 'active',
  Archived = 'archived',
  Deleted = 'deleted'
}
export const enum MessageReadStatus {
  Sent = 'sent',
  Unsent = 'unsent',
  Failed = 'failed',
  Read = 'read',
  Delivered = 'delivered'
}
export const enum MessageContentType {
  Audio = 'audio',
  Video = 'video',
  Contact = 'contact',
  Image = 'image',
  Gif = 'gif',
  Voice = 'voice',
  Text = 'text',
  Sticker = 'sticker',
  Document = 'document',
  File = 'file',
  Location = 'location',
  Link = 'link'
}
export const enum MessageDeliveryStatus {
  Read = 'read',
  Pending = 'pending',
  Sent = 'sent',
  Delivered = 'delivered',
  Undeliverable = 'undeliverable',
  Error = 'error',
  Failed = 'failed'
}
export const enum CommunicationRole {
  Group = 'group',
  Guest = 'guest',
  Service = 'service',
  System = 'system',
  Assistant = 'assistant',
  Channel = 'channel',
  Bot = 'bot',
  Admin = 'admin',
  Owner = 'owner',
  Member = 'member',
  Moderator = 'moderator',
  User = 'user'
}
export const enum ParticipantEngagementStatus {
  Admin = 'admin',
  Inactive = 'inactive',
  Moderator = 'moderator',
  Active = 'active',
  Left = 'left',
  Guest = 'guest',
  Banned = 'banned'
}
export const enum ReactionType {
  Bookmark = 'bookmark',
  Dislike = 'dislike',
  Angry = 'angry',
  Love = 'love',
  Like = 'like',
  Sad = 'sad',
  Laugh = 'laugh',
  Interested = 'interested',
  Wow = 'wow'
}
export const enum SupportTicketPriority {
  Low = 'low',
  Medium = 'medium',
  High = 'high',
  Urgent = 'urgent',
  Immediate = 'immediate'
}
export const enum IssueLifecycleStatus {
  Closed = 'closed',
  Resolved = 'resolved',
  InProgress = 'in-progress',
  Open = 'open',
  Pending = 'pending',
  OnHold = 'on-hold',
  Cancelled = 'cancelled'
}
export const enum SupportQueryType {
  Bug = 'bug',
  Problem = 'problem',
  Feedback = 'feedback',
  Question = 'question',
  FeatureRequest = 'feature-request',
  Incident = 'incident',
  Task = 'task'
}
export const enum ItemEntityStatus {
  Deleted = 'deleted',
  Completed = 'completed',
  Suspended = 'suspended',
  Active = 'active',
  Inactive = 'inactive',
  Archived = 'archived',
  Pending = 'pending'
}
export const enum Currency {
  MZN = 'mzn',
  LYD = 'lyd',
  MOP = 'mop',
  BSD = 'bsd',
  SYP = 'syp',
  AMD = 'amd',
  KGS = 'kgs',
  NAD = 'nad',
  BTN = 'btn',
  DJF = 'djf',
  LBP = 'lbp',
  NZD = 'nzd',
  BZD = 'bzd',
  NIO = 'nio',
  CUP = 'cup',
  FOK = 'fok',
  GNF = 'gnf',
  MNT = 'mnt',
  GMD = 'gmd',
  NPR = 'npr',
  SRD = 'srd',
  NGN = 'ngn',
  QAR = 'qar',
  THB = 'thb',
  AWG = 'awg',
  UYU = 'uyu',
  UZS = 'uzs',
  KES = 'kes',
  HTG = 'htg',
  MGA = 'mga',
  PLN = 'pln',
  RWF = 'rwf',
  FJD = 'fjd',
  CHF = 'chf',
  AZN = 'azn',
  FKP = 'fkp',
  BOB = 'bob',
  GIP = 'gip',
  MXN = 'mxn',
  BDT = 'bdt',
  USD = 'usd',
  TMT = 'tmt',
  IQD = 'iqd',
  JMD = 'jmd',
  LSL = 'lsl',
  BGN = 'bgn',
  GEL = 'gel',
  DKK = 'dkk',
  GTQ = 'gtq',
  PKR = 'pkr',
  MYR = 'myr',
  KYD = 'kyd',
  PYG = 'pyg',
  SEK = 'sek',
  MWK = 'mwk',
  KHR = 'khr',
  SGD = 'sgd',
  XCD = 'xcd',
  CAD = 'cad',
  YER = 'yer',
  UAH = 'uah',
  KPW = 'kpw',
  TRY = 'try',
  VND = 'vnd',
  TZS = 'tzs',
  PHP = 'php',
  BRL = 'brl',
  IMP = 'imp',
  XPF = 'xpf',
  BHD = 'bhd',
  COP = 'cop',
  JPY = 'jpy',
  BND = 'bnd',
  SLL = 'sll',
  RUB = 'rub',
  MMK = 'mmk',
  PGK = 'pgk',
  IDR = 'idr',
  OMR = 'omr',
  RON = 'ron',
  RSD = 'rsd',
  JOD = 'jod',
  GHS = 'ghs',
  TWD = 'twd',
  CDF = 'cdf',
  ZWL = 'zwl',
  SCR = 'scr',
  STN = 'stn',
  LKR = 'lkr',
  IRR = 'irr',
  KID = 'kid',
  ARS = 'ars',
  TVD = 'tvd',
  PAB = 'pab',
  BYN = 'byn',
  KWD = 'kwd',
  UGX = 'ugx',
  VES = 'ves',
  XOF = 'xof',
  KZT = 'kzt',
  ILS = 'ils',
  ZMW = 'zmw',
  ANG = 'ang',
  ALL = 'all',
  MAD = 'mad',
  XDR = 'xdr',
  CZK = 'czk',
  AUD = 'aud',
  GGP = 'ggp',
  BWP = 'bwp',
  BAM = 'bam',
  BBD = 'bbd',
  KRW = 'krw',
  NOK = 'nok',
  TND = 'tnd',
  HUF = 'huf',
  CLP = 'clp',
  LRD = 'lrd',
  TJS = 'tjs',
  AFN = 'afn',
  AED = 'aed',
  MKD = 'mkd',
  CVE = 'cve',
  EGP = 'egp',
  JEP = 'jep',
  HRK = 'hrk',
  PEN = 'pen',
  DZD = 'dzd',
  EUR = 'eur',
  GYD = 'gyd',
  ZAR = 'zar',
  SAR = 'sar',
  GBP = 'gbp',
  MDL = 'mdl',
  VUV = 'vuv',
  SBD = 'sbd',
  BIF = 'bif',
  SZL = 'szl',
  BMD = 'bmd',
  SDG = 'sdg',
  INR = 'inr',
  MUR = 'mur',
  MVR = 'mvr',
  SHP = 'shp',
  MRU = 'mru',
  AOA = 'aoa',
  DOP = 'dop',
  ETB = 'etb',
  CUC = 'cuc',
  LAK = 'lak',
  WST = 'wst',
  CRC = 'crc',
  XAF = 'xaf',
  HNL = 'hnl',
  CNY = 'cny',
  ISK = 'isk',
  SSP = 'ssp',
  HKD = 'hkd',
  KMF = 'kmf',
  ERN = 'ern',
  TOP = 'top',
  TTD = 'ttd',
  SOS = 'sos'
}
export const enum OrderStatus {
  OnHold = 'on-hold',
  Returned = 'returned',
  Delivered = 'delivered',
  AwaitingShipment = 'awaiting-shipment',
  Refunded = 'refunded',
  Failed = 'failed',
  Abandoned = 'abandoned',
  Completed = 'completed',
  Processing = 'processing',
  Shipped = 'shipped',
  Cancelled = 'cancelled',
  AwaitingPayment = 'awaiting-payment',
  AwaitingPickup = 'awaiting-pickup',
  Pending = 'pending',
  Disputed = 'disputed'
}
export const enum DiscountType {
  BuyOneGetOne = 'buy-one-get-one',
  FixedAmount = 'fixed-amount',
  ConditionalDiscount = 'conditional-discount',
  Percentage = 'percentage',
  TieredDiscount = 'tiered-discount'
}
export const enum CustomerEligibilityStatus {
  ReturningCustomers = 'returning-customers',
  AllCustomers = 'all-customers',
  SpecificConditions = 'specific-conditions',
  VipCustomers = 'vip-customers',
  Other = 'other',
  NewCustomers = 'new-customers'
}
export const enum LifecycleStatus {
  Redeemed = 'redeemed',
  Expired = 'expired',
  Suspended = 'suspended',
  Cancelled = 'cancelled',
  Active = 'active',
  Issued = 'issued'
}
export const enum ImageMimeType {
  ImageHeic = 'image-heic',
  ImageBmp = 'image-bmp',
  ImageTiff = 'image-tiff',
  ImagePng = 'image-png',
  ImageGif = 'image-gif',
  ImageWebp = 'image-webp',
  ImageJpeg = 'image-jpeg',
  ImageSvgXml = 'image-svg-xml'
}
export const enum FulfillmentStatus {
  Failure = 'failure',
  Pending = 'pending',
  InTransit = 'in-transit',
  Delivered = 'delivered',
  Cancelled = 'cancelled',
  Returned = 'returned'
}
export const enum PaymentMethod {
  Cryptocurrency = 'cryptocurrency',
  BankTransfer = 'bank-transfer',
  Check = 'check',
  DebitCard = 'debit-card',
  MobileWallet = 'mobile-wallet',
  MobilePayment = 'mobile-payment',
  Paypal = 'paypal',
  Other = 'other',
  CreditCard = 'credit-card',
  CashOnDelivery = 'cash-on-delivery',
  Cash = 'cash'
}
export const enum FinancialTransactionStatus {
  Cancelled = 'cancelled',
  Refunded = 'refunded',
  Failed = 'failed',
  Disputed = 'disputed',
  SettlementInProgress = 'settlement-in-progress',
  Pending = 'pending',
  Cleared = 'cleared',
  Authorized = 'authorized'
}
export const enum OrderingCriteria {
  Popularity = 'popularity',
  Relevance = 'relevance',
  Alphabetical = 'alphabetical',
  CreationDate = 'creation-date',
  Manual = 'manual',
  PriceAscending = 'price-ascending',
  PriceDescending = 'price-descending',
  Rating = 'rating'
}
export const enum ChatType {
  Public = 'public',
  Private = 'private',
  Group = 'group'
}
export const enum AuditOpinionType {
  Qualified = 'qualified',
  Unqualified = 'unqualified',
  Disclaimer = 'disclaimer',
  Adverse = 'adverse'
}
export const enum InventoryStorageType {
  DropShipper = 'drop-shipper',
  RetailStore = 'retail-store',
  DistributionCenter = 'distribution-center',
  OnlineMarketplace = 'online-marketplace',
  Warehouse = 'warehouse',
  Consignment = 'consignment',
  Other = 'other'
}
export const enum ProductAvailabilityStatus {
  InStock = 'in-stock',
  OutOfStock = 'out-of-stock',
  PreOrder = 'pre-order',
  BackOrder = 'back-order',
  Discontinued = 'discontinued'
}
export const enum ItemCondition {
  Used = 'used',
  Refurbished = 'refurbished',
  OpenBox = 'open-box',
  Damaged = 'damaged',
  New = 'new',
  LikeNew = 'like-new'
}
export const enum ExpenseApprovalStatus {
  Reviewing = 'reviewing',
  Processed = 'processed',
  Denied = 'denied',
  Reimbursed = 'reimbursed',
  New = 'new',
  Cancelled = 'cancelled',
  Pending = 'pending',
  Approved = 'approved'
}
export const enum FinancialChargeType {
  ProcessingFee = 'processing-fee',
  InterestCharge = 'interest-charge',
  Commission = 'commission',
  ServiceCharge = 'service-charge',
  Other = 'other',
  TransactionFee = 'transaction-fee',
  LateFee = 'late-fee'
}
export const enum ItemAvailabilityStatus {
  OutOfStock = 'out-of-stock',
  Discontinued = 'discontinued',
  Active = 'active',
  Inactive = 'inactive'
}
export const enum BillingStatus {
  PartiallyPaid = 'partially-paid',
  Draft = 'draft',
  Authorised = 'authorised',
  Unpaid = 'unpaid',
  Pending = 'pending',
  Paid = 'paid',
  Submitted = 'submitted',
  Overdue = 'overdue',
  Voided = 'voided',
  Deleted = 'deleted'
}
export const enum FinancialAccountStatus {
  Delinquent = 'delinquent',
  Frozen = 'frozen',
  Closed = 'closed',
  Active = 'active',
  UnderReview = 'under-review',
  Suspended = 'suspended',
  Inactive = 'inactive'
}
export const enum TransactionStatus {
  Cancelled = 'cancelled',
  Succeeded = 'succeeded',
  Failed = 'failed',
  InProgress = 'in-progress',
  Error = 'error',
  Initiated = 'initiated',
  Pending = 'pending'
}
export const enum TransactionType {
  Withdrawal = 'withdrawal',
  Transfer = 'transfer',
  Refund = 'refund',
  Payment = 'payment',
  Fee = 'fee',
  Deposit = 'deposit',
  Adjustment = 'adjustment',
  Charge = 'charge'
}
export const enum VisibilityScope {
  Global = 'global',
  Internal = 'internal',
  Private = 'private',
  Web = 'web',
  App = 'app'
}
export const enum PaymentStatus {
  Cancelled = 'cancelled',
  PartiallyRefunded = 'partially-refunded',
  Refunded = 'refunded',
  Processing = 'processing',
  Disputed = 'disputed',
  Draft = 'draft',
  Overdue = 'overdue',
  Pending = 'pending',
  Voided = 'voided',
  Deleted = 'deleted',
  Authorised = 'authorised',
  Error = 'error',
  Submitted = 'submitted',
  Adjusted = 'adjusted',
  Failed = 'failed',
  Succeeded = 'succeeded',
  Paid = 'paid',
  Partial = 'partial'
}
export const enum InvoiceAdjustmentType {
  Tip = 'tip',
  Shipping = 'shipping',
  Other = 'other',
  Discount = 'discount',
  Tax = 'tax'
}
export const enum DataType {
  String = 'string',
  Undefined = 'undefined',
  Binary = 'binary',
  Number = 'number',
  Date = 'date',
  Boolean = 'boolean',
  Object = 'object',
  Json = 'json',
  Array = 'array',
  Null = 'null'
}
export const enum EntityLifecycleStatus {
  Preorder = 'preorder',
  Inactive = 'inactive',
  Deleted = 'deleted',
  Archived = 'archived',
  Draft = 'draft',
  Scheduled = 'scheduled',
  Active = 'active'
}
export const enum TransactionChannel {
  Atm = 'atm',
  Mail = 'mail',
  Telephone = 'telephone',
  InPerson = 'in-person',
  Mobile = 'mobile',
  BankBranch = 'bank-branch',
  Other = 'other',
  Online = 'online'
}
export const enum FinancialDisputeStatus {
  Closed = 'closed',
  UnderReview = 'under-review',
  Won = 'won',
  Escalated = 'escalated',
  NeedsResponse = 'needs-response',
  ChargeRefunded = 'charge-refunded',
  Lost = 'lost',
  AwaitingEvidence = 'awaiting-evidence'
}
export const enum ContentVisibility {
  Private = 'private',
  Public = 'public',
  Internal = 'internal',
  Shared = 'shared',
  Protected = 'protected'
}
export const enum EmailCategoryType {
  Other = 'other',
  Educational = 'educational',
  Promotional = 'promotional',
  Transactional = 'transactional',
  Governmental = 'governmental',
  Personal = 'personal',
  Business = 'business',
  Spam = 'spam'
}
export const enum DeviceUsageType {
  Personal = 'personal',
  Other = 'other',
  Business = 'business',
  Industrial = 'industrial',
  Educational = 'educational',
  Healthcare = 'healthcare'
}
export const enum UniversalIdentifierType {
  Number = 'number',
  Email = 'email',
  Uuid = 'uuid',
  Url = 'url',
  String = 'string'
}
export const enum EntityCategory {
  Project = 'project',
  Other = 'other',
  Task = 'task',
  Document = 'document',
  Person = 'person',
  Owner = 'owner',
  Message = 'message',
  Event = 'event',
  User = 'user'
}
export const enum AccessControlModel {
  Mac = 'mac',
  Custom = 'custom',
  None = 'none',
  Rbac = 'rbac',
  Abac = 'abac',
  Dac = 'dac'
}
export const enum ParticipantType {
  Organization = 'organization',
  Group = 'group',
  ExternalParticipant = 'external-participant',
  Team = 'team',
  User = 'user'
}
export const enum PriorityLevel {
  Medium = 'medium',
  Elevated = 'elevated',
  Low = 'low',
  High = 'high',
  Urgent = 'urgent'
}
export const enum TaskStatus {
  Blocked = 'blocked',
  InProgress = 'in-progress',
  OnHold = 'on-hold',
  Cancelled = 'cancelled',
  Todo = 'todo',
  Done = 'done'
}
export const enum GenderIdentity {
  Male = 'male',
  Female = 'female',
  Other = 'other',
  PreferNotToSay = 'prefer-not-to-say'
}
export const enum UserStatus {
  Verified = 'verified',
  Inactive = 'inactive',
  Pending = 'pending',
  Archived = 'archived',
  WaitListed = 'wait-listed',
  Banned = 'banned',
  Suspended = 'suspended',
  Deleted = 'deleted',
  Active = 'active'
}
export const enum CommunicationMethod {
  Mail = 'mail',
  Sms = 'sms',
  Phone = 'phone',
  InPerson = 'in-person',
  PushNotification = 'push-notification',
  Other = 'other',
  SocialMedia = 'social-media',
  InstantMessage = 'instant-message',
  VideoCall = 'video-call',
  Text = 'text',
  Email = 'email'
}
export const enum PromotionType {
  Percentage = 'percentage',
  FixedAmount = 'fixed-amount',
  RewardPoints = 'reward-points',
  BuyOneGetOne = 'buy-one-get-one',
  FreeShipping = 'free-shipping',
  Other = 'other'
}
export const enum FinancialTransactionType {
  Payment = 'payment',
  Withdrawal = 'withdrawal',
  Deposit = 'deposit',
  Sale = 'sale',
  Dividend = 'dividend',
  Fee = 'fee',
  Adjustment = 'adjustment',
  Interest = 'interest',
  Refund = 'refund',
  Other = 'other',
  Chargeback = 'chargeback',
  Transfer = 'transfer',
  Charge = 'charge'
}
export const enum MimeType {
  ImageJpeg = 'image-jpeg',
  ImagePng = 'image-png',
  ImageGif = 'image-gif',
  ImageSvgXml = 'image-svg-xml',
  ImageWebp = 'image-webp'
}
export type UnifiedApi = UnifiedApi<Type>
export class UnifiedApi<Type> {
  constructor()
  create(object: Type, options?: UnifiedOptions | undefined | null): Promise<Response<Type>>
  list(filter?: ListFilter | undefined | null, options?: UnifiedOptions | undefined | null): Promise<ListResponse<Type>>
  get(id: string, options?: UnifiedOptions | undefined | null): Promise<Response<Type>>
  update(id: string, object: Type, options?: UnifiedOptions | undefined | null): Promise<Response<Type>>
  count(options?: UnifiedOptions | undefined | null): Promise<Response<Count>>
  delete(id: string, deleteOptions?: DeleteOptions | undefined | null, options?: UnifiedOptions | undefined | null): Promise<Response<Type>>
}
export class IntegrationOS {
  constructor(accessKey: string, options?: IntegrationOsOptions | undefined | null)
  aichats(connectionKey: string): UnifiedApi<AIChats>
  messages(connectionKey: string): UnifiedApi<Messages>
  chats(connectionKey: string): UnifiedApi<Chats>
  taxrates(connectionKey: string): UnifiedApi<TaxRates>
  creditnotes(connectionKey: string): UnifiedApi<CreditNotes>
  expenses(connectionKey: string): UnifiedApi<Expenses>
  transactions(connectionKey: string): UnifiedApi<Transactions>
  accounts(connectionKey: string): UnifiedApi<Accounts>
  purchaseorders(connectionKey: string): UnifiedApi<PurchaseOrders>
  payments(connectionKey: string): UnifiedApi<Payments>
  bills(connectionKey: string): UnifiedApi<Bills>
  vendors(connectionKey: string): UnifiedApi<Vendors>
  balancesheets(connectionKey: string): UnifiedApi<BalanceSheets>
  incomestatements(connectionKey: string): UnifiedApi<IncomeStatements>
  invoices(connectionKey: string): UnifiedApi<Invoices>
  journalentries(connectionKey: string): UnifiedApi<JournalEntries>
  invoiceitems(connectionKey: string): UnifiedApi<InvoiceItems>
  tickets(connectionKey: string): UnifiedApi<Tickets>
  candidates(connectionKey: string): UnifiedApi<Candidates>
  contacts(connectionKey: string): UnifiedApi<Contacts>
  jobs(connectionKey: string): UnifiedApi<Jobs>
  tasks(connectionKey: string): UnifiedApi<Tasks>
  products(connectionKey: string): UnifiedApi<Products>
  orders(connectionKey: string): UnifiedApi<Orders>
  opportunities(connectionKey: string): UnifiedApi<Opportunities>
  users(connectionKey: string): UnifiedApi<Users>
  notes(connectionKey: string): UnifiedApi<Notes>
  leads(connectionKey: string): UnifiedApi<Leads>
  companies(connectionKey: string): UnifiedApi<Companies>
  customers(connectionKey: string): UnifiedApi<Customers>
}
