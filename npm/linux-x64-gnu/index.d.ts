/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface IntegrationOsOptions {
  serverUrl: string
}
export interface UnifiedOptions {
  responsePassthrough?: boolean
  passthroughHeaders?: Record<string, string>
  passthroughQuery?: Record<string, string>
}
export interface DeleteOptions {
  modifyToken?: string
}
export interface Response<Type> {
  unified?: Type
  passthrough?: any
  meta: object
}
export interface Count {
  count: number
}
export interface Pagination {
  limit?: number
  pageSize: number
}
export interface ListResponse<Type> {
  unified: Array<Type>
  passthrough?: any
  pagination: Pagination
  meta: object
}
export interface ListFilter {
  createdAfter?: string
  createdBefore?: string
  updatedAfter?: string
  updatedBefore?: string
  limit?: number
  cursor?: string
}
export interface CRMAccounts {
  annualRevenue?: number
  name?: string
  industry?: string
  tags?: Array<string>
  rating?: AccountEngagementLevel
  numberOfEmployees?: number
  ownerId?: string
  status?: AccountStatus
  createdAt?: Date
  updatedAt?: Date
  billingAddress?: Addresses
  id?: string
  accountType?: StakeholderType
  shippingAddress?: Addresses
  website?: string
  phone?: string
  customFields?: Array<CustomAttributes>
  email?: string
}
export interface Addresses {
  country?: string
  region?: string
  geoLocation?: GeoCoordinates
  city?: string
  subdivisionCode?: string
  contactId?: string
  accountId?: string
  postalCode?: string
  street?: string
  name?: string
  province?: string
  customFields?: Array<CustomAttributes>
  postalCodeExtension?: string
  countryCode?: string
  companyName?: string
  firstName?: string
  lastName?: string
  id?: string
  addressLine2?: string
  email?: string
  type?: ContactAddressType
  phone?: string
}
export interface GeoCoordinates {
  altitudeAccuracy?: number
  latitude?: number
  timestamp?: Date
  longitude?: number
  altitude?: number
  accuracy?: number
  heading?: number
  speed?: number
}
export interface Brands {
  name?: string
  country?: string
  description?: string
  status?: ItemEntityStatus
  logo?: string
  createdAt?: Date
  updatedAt?: Date
  website?: string
  id?: string
  customFields?: Array<CustomAttributes>
  established?: Date
}
export interface BusinessHours {
  timeZone?: string
  createdAt?: Date
  active?: boolean
  id?: string
  dayOfWeek?: DayOfWeek
  sessions?: Array<TimeSession>
  deleted?: boolean
  closed?: boolean
  storeID?: string
  updatedAt?: Date
}
export interface Campaigns {
  channels?: Array<string>
  tags?: Array<string>
  id?: string
  endDate?: Date
  deleted?: boolean
  targetAudience?: string
  active?: boolean
  name?: string
  performanceMetrics?: PerformanceMetrics
  creativeAssets?: Attachments
  startDate?: Date
  createdAt?: Date
  updatedAt?: Date
  type?: CampaignType
  budget?: number
  status?: CampaignStatus
}
export interface Items {
  weight?: number
  weightUnit?: string
  requiresShipping?: boolean
  taxable?: boolean
  createdAt?: Date
  updatedAt?: Date
  active?: boolean
  parentId?: string
  taxLines?: Array<TaxLines>
  image?: Images
  title?: string
  discountedPrice?: number
  fulfillableQuantity?: number
  currency?: Currency
  originalPrice?: number
  variantTitle?: string
  deleted?: boolean
  description?: string
  variantId?: string
  quantity?: number
  price?: number
  id?: string
  accountId?: string
  accountName?: string
  productId?: string
  sku?: string
  linePrice?: number
}
export interface Carts {
  note?: string
  version?: string
  discountCodes?: Array<string>
  paymentDetails?: PaymentDetails
  totalPrice?: number
  totalWeight?: number
  promotions?: Array<Promotions>
  buyerIdentity?: Customers
  itemCount?: number
  createdAt?: Date
  updatedAt?: Date
  originalTotalPrice?: number
  giftCards?: Array<GiftCards>
  attributes?: Array<string>
  state?: OrderStatus
  messages?: Array<string>
  currency?: Currency
  token?: string
  items?: Array<Items>
  shippingDetails?: ShippingDetails
  id?: string
}
export interface PaymentDetails {
  paymentGateway?: string
  currency?: Currency
  createdAt?: Date
  updatedAt?: Date
  deleted?: boolean
  method?: string
  amount?: number
  billingAddress?: Addresses
  refunded?: boolean
  active?: boolean
  transactionId?: string
  status?: string
}
export interface PerformanceMetrics {
  impressions?: number
  spend?: number
  returnOnInvestment?: number
  costPerConversion?: number
  clicks?: number
  conversions?: number
  conversionRate?: number
  costPerClick?: number
}
export interface ShippingDetails {
  provider?: string
  active?: boolean
  method?: string
  address?: Addresses
  createdAt?: Date
  estimatedDelivery?: Date
  signatureRequired?: boolean
  insurance?: boolean
  trackingNumber?: string
  price?: number
  updatedAt?: Date
  deleted?: boolean
}
export interface Attachments {
  permissions?: Permissions
  id?: string
  thumbnailUrl?: string
  previewUrl?: string
  fileName?: string
  fileSize?: number
  fileType?: string
  url?: string
  createdAt?: Date
  updatedAt?: Date
  metadata?: Metadata
  content?: string
  associatedWith?: Entity
}
export interface Promotions {
  deleted?: boolean
  usageLimit?: number
  termsAndConditions?: string
  active?: boolean
  startDate?: Date
  createdAt?: Date
  description?: string
  discountValue?: number
  limitPerCustomer?: number
  customerEligibility?: CustomerEligibilityStatus
  type?: PromotionType
  discountType?: DiscountType
  minimumPurchaseAmount?: number
  endDate?: Date
  currency?: Currency
  code?: string
  eligibleItems?: Array<string>
  updatedAt?: Date
}
export interface GiftCards {
  cardNumber?: string
  id?: string
  createdAt?: Date
  issuedBy?: string
  expirationDate?: Date
  currency?: Currency
  metadata?: string
  purchasedBy?: string
  associatedUser?: Users
  status?: LifecycleStatus
  amountUsed?: number
  deleted?: boolean
  active?: boolean
  balance?: number
  updatedAt?: Date
}
export interface Images {
  height?: number
  deleted?: boolean
  thumbnailSrc?: string
  altText?: string
  id?: string
  createdAt?: Date
  title?: string
  width?: number
  mimeType?: ImageMimeType
  updatedAt?: Date
  active?: boolean
  caption?: string
  tags?: Array<string>
  src?: string
}
export interface TaxLines {
  deleted?: boolean
  taxCode?: string
  isInclusive?: boolean
  price?: number
  metadata?: Metadata
  rate?: number
  title?: string
  createdAt?: Date
  updatedAt?: Date
  active?: boolean
}
export interface Customers {
  createdAt?: Date
  dateOfBirth?: Date
  middleName?: string
  title?: string
  notes?: string
  updatedAt?: Date
  defaultAddress?: Addresses
  preferredContactMethod?: CommunicationMethod
  loyaltyProgramMembership?: string
  customerType?: CustomerType
  companyId?: string
  metadata?: string
  id?: string
  email?: string
  firstName?: string
  currency?: Currency
  customerSegment?: string
  socialProfiles?: Array<SocialProfiles>
  source?: string
  modifyToken?: string
  addresses?: Array<Addresses>
  company?: string
  customFields?: Array<CustomAttributes>
  tags?: Array<string>
  fullName?: string
  status?: CustomerStatus
  phoneNumber?: string
  lastName?: string
}
export interface SocialProfiles {
  displayName?: string
  url?: string
  updatedAt?: Date
  deleted?: boolean
  type?: SocialPlatform
  username?: string
  active?: boolean
  createdAt?: Date
  additionalInfo?: Metadata
  avatarUrl?: string
  email?: string
}
export interface KeyValues {
  value?: string
  key?: string
}
export interface Localizations {
  title?: string
  locale?: string
  description?: string
  metaTitle?: string
  metaDescription?: string
}
export interface Companies {
  tags?: Array<string>
  parentCompanyId?: string
  name?: string
  defaultEmail?: string
  website?: string
  domain?: string
  phones?: Array<Phones>
  taxId?: string
  logo?: string
  incorporationDate?: Date
  revenueCurrency?: string
  legalName?: string
  socialProfiles?: Array<SocialProfiles>
  address?: Addresses
  emails?: Array<Emails>
  incorporationCountry?: string
  industry?: string
  regulatoryStatus?: string
  customFields?: Array<CustomAttributes>
  modifyToken?: string
  additionalContacts?: Array<Contacts>
  revenue?: number
  updatedAt?: Date
  foundedDate?: Date
  description?: string
  defaultPhone?: string
  stockSymbol?: string
  createdAt?: Date
  numberOfEmployees?: number
  dunsNumber?: string
  type?: string
  id?: string
}
export interface CustomAttributes {
  fieldValue?: string
  id?: string
  fieldName?: string
  fieldType?: DataType
}
export interface Fulfillments {
  receipt?: FulfillmentReceipts
  totalPrice?: number
  items?: Array<FulfillmentItems>
  shipmentDate?: Date
  updatedAt?: Date
  status?: FulfillmentStatus
  id?: string
  metadata?: Metadata
  notes?: string
  carrier?: string
  lineItems?: Array<Items>
  trackingNumber?: string
  trackingUrls?: Array<string>
  orderId?: string
  createdAt?: Date
  expectedDelivery?: Date
  service?: string
  currency?: Currency
  address?: Addresses
}
export interface FulfillmentItems {
  productId?: string
  id?: string
  status?: OrderStatus
  variantId?: string
  weight?: number
  taxable?: boolean
  imageUrl?: string
  dimensions?: Dimensions
  createdAt?: Date
  fulfillmentId?: string
  updatedAt?: Date
  sku?: string
  variantTitle?: string
  deleted?: boolean
  orderId?: string
  title?: string
  price?: number
  quantity?: number
  weightUnit?: string
  active?: boolean
  requiresShipping?: boolean
  customAttributes?: CustomAttributes
  description?: string
}
export interface FulfillmentReceipts {
  transactionDetails?: TransactionDetails
  paymentMethod?: PaymentMethod
  createdAt?: Date
  updatedAt?: Date
  fulfillmentId?: string
  deleted?: boolean
  currency?: Currency
  amount?: number
  status?: OrderStatus
  authorization?: string
  testCase?: boolean
  active?: boolean
  id?: string
  customerInfo?: Customers
}
export interface Leads {
  numberOfEmployees?: number
  id?: string
  addresses?: Array<Addresses>
  defaultEmail?: string
  updatedAt?: Date
  middleName?: string
  leadStatus?: LeadLifecycleStatus
  notes?: Array<Notes>
  companyId?: string
  opportunities?: Array<Opportunities>
  companyName?: string
  website?: string
  customFields?: Array<CustomAttributes>
  socialProfiles?: Array<SocialProfiles>
  firstName?: string
  entity?: Entity
  jobTitle?: string
  createdAt?: Date
  lastName?: string
  emails?: Array<Emails>
  leadSource?: LeadSource
  annualRevenue?: number
  defaultPhone?: string
  phones?: Array<Phones>
  preferredContactMethod?: CommunicationMethod
  modifyToken?: string
  name?: string
  industry?: string
}
export interface TransactionDetails {
  amount?: number
  status?: string
  transactionId?: string
}
export interface LeadSource {
  sourceName?: string
  sourceId?: string
  details?: string
}
export interface Notes {
  updatedAt?: Date
  color?: string
  tags?: Array<string>
  sharedWith?: Array<Users>
  author?: Users
  priority?: PriorityLevel
  id?: string
  attachments?: Array<Attachments>
  title?: string
  modifyToken?: string
  createdAt?: Date
  visibility?: ContentVisibility
  lastAccessed?: Date
  metadata?: Array<string>
  content?: string
  reminder?: Date
}
export interface Users {
  middleName?: string
  phoneNumber?: string
  socialProfiles?: Array<SocialProfiles>
  lastName?: string
  email?: string
  coverPhoto?: Images
  gender?: Gender
  firstName?: string
  username?: string
  dateOfBirth?: Date
  createdAt?: Date
  roles?: Array<Roles>
  bio?: string
  website?: string
  status?: UserStatus
  isActive?: boolean
  preferences?: Preferences
  sso?: Array<SSO>
  paymentMethods?: PaymentMethods
  modifyToken?: string
  updatedAt?: Date
  profilePicture?: Images
  lastLogin?: Date
  addresses?: Array<Addresses>
  id?: string
  password?: string
}
export interface Preferences {
  timeZone?: string
  communications?: CommunicationMethod
  language?: string
  id?: string
  currency?: Currency
}
export interface SSO {
  providerUserId?: string
  tokenType?: string
  profileUrl?: string
  provider?: IdentityProvider
  expiryDate?: Date
  scopes?: Array<string>
  expiresIn?: number
  refreshToken?: string
  deleted?: boolean
  active?: boolean
  accessToken?: string
  createdAt?: Date
  updatedAt?: Date
}
export interface PaymentMethods {
  details?: string
  isDefault?: boolean
  type?: PaymentMethod
  id?: string
}
export interface Opportunities {
  amount?: number
  isClosed?: boolean
  updatedAt?: Date
  lostReason?: string
  closeDate?: Date
  nextStep?: string
  title?: string
  campaign?: Campaigns
  entity?: Entity
  type?: string
  companyId?: string
  modifyToken?: string
  currency?: Currency
  description?: string
  leadId?: string
  stage?: string
  attachments?: Array<Attachments>
  probability?: number
  isWon?: boolean
  createdAt?: Date
  account?: Accounts
  notes?: Array<string>
  leadSource?: string
  owner?: Users
  customFields?: Array<CustomAttributes>
  id?: string
  contacts?: Array<Contacts>
}
export interface Orders {
  paymentMethods?: Array<string>
  tax?: number
  currency?: Currency
  orderNumber?: string
  subTotal?: number
  createdAt?: Date
  status?: OrderStatus
  paymentStatus?: PaymentStatus
  shippingAddress?: Addresses
  billingAddress?: Addresses
  items?: Array<Items>
  tags?: Array<string>
  updatedAt?: Date
  discounts?: Array<number>
  modifyToken?: string
  note?: string
  total?: number
  shippingCost?: number
  trackingInfo?: string
  id?: string
  customerID?: string
  shippingMethod?: string
}
export interface Products {
  description?: string
  id?: string
  images?: Array<Images>
  options?: Array<ProductOptions>
  weight?: number
  inventoryQuantity?: number
  slug?: string
  isDownloadable?: boolean
  publishedAt?: Date
  metaTitle?: string
  status?: EntityLifecycleStatus
  tax?: Taxes
  brand?: Brands
  title?: string
  relatedProducts?: Array<string>
  type?: string
  seoKeywords?: Array<string>
  downloadFiles?: Array<Attachments>
  dimensions?: Dimensions
  metaDescription?: string
  localizations?: Array<Localizations>
  tags?: Array<string>
  availableForSale?: boolean
  skuValidation?: SkuValidation
  vendor?: string
  categories?: Array<string>
  modifyToken?: string
  inventoryLocation?: InventoryLocations
  prices?: Array<Prices>
  sku?: string
  customFields?: Array<CustomAttributes>
  createdAt?: Date
  weightUnit?: string
  accountIds?: Array<KeyValues>
  updatedAt?: Date
  variants?: Array<Variants>
}
export interface Dimensions {
  height?: number
  width?: number
  length?: number
}
export interface Variants {
  status?: ItemAvailabilityStatus
  sku?: string
  imageId?: number
  deleted?: boolean
  dimensions?: Dimensions
  inventoryQuantity?: number
  active?: boolean
  id?: string
  compareAtPrice?: number
  taxable?: boolean
  createdAt?: Date
  price?: number
  weight?: number
  title?: string
  barcode?: string
  productId?: string
  updatedAt?: Date
  weightUnit?: string
  requiresShipping?: boolean
}
export interface Prices {
  currency?: Currency
  amount?: number
}
export interface InventoryLocations {
  address?: Addresses
  updatedAt?: Date
  isActive?: boolean
  type?: InventoryStorageType
  createdAt?: Date
  deleted?: boolean
  operationalHours?: string
  locationId?: string
  contactInformation?: Array<Contacts>
  name?: string
  quantity?: number
}
export interface Taxes {
  description?: string
  currency?: Currency
  taxRate?: number
  active?: boolean
  taxAmount?: number
  taxable?: boolean
  customFields?: Array<CustomAttributes>
  taxDetails?: TaxDetails
  createdAt?: Date
  region?: string
  country?: string
  updatedAt?: Date
  taxCode?: string
  deleted?: boolean
}
export interface ProductOptions {
  values?: Array<string>
  updatedAt?: Date
  productId?: number
  id?: string
  name?: string
  createdAt?: Date
}
export interface Staff {
  role?: OrganizationalRole
  position?: string
  phone?: string
  deleted?: boolean
  updatedAt?: Date
  customFields?: Array<CustomAttributes>
  storeID?: string
  id?: string
  firstName?: string
  gender?: string
  createdAt?: Date
  status?: EmploymentAndCandidateStatus
  photoUrl?: string
  dateOfBirth?: Date
  addresses?: Addresses
  email?: string
  lastName?: string
  active?: boolean
}
export interface RatingsReviews {
  verifiedPurchase?: boolean
  active?: boolean
  deleted?: boolean
  id?: string
  status?: ReviewApprovalStatus
  storeID?: string
  rating?: number
  updatedAt?: Date
  createdAt?: Date
  locale?: string
  review?: string
  reviewerName?: string
  metadata?: Metadata
}
export interface Stores {
  features?: Array<string>
  name?: string
  phone?: string
  currency?: Currency
  owner?: Users
  email?: string
  category?: string
  latitude?: number
  countryCode?: string
  language?: string
  socialProfiles?: Array<SocialProfiles>
  createdAt?: Date
  updatedAt?: Date
  timezone?: string
  id?: string
  country?: string
  longitude?: number
  websiteUrl?: string
  address?: Addresses
  isOperating?: boolean
  ratings?: RatingsReviews
  paymentMethods?: Array<string>
  logoUrl?: string
  storeArea?: number
  description?: string
  businessHours?: Array<BusinessHours>
  relatedStores?: Array<Stores>
  manager?: Staff
}
export interface Tasks {
  relatedToTaskId?: Array<string>
  modifyToken?: string
  updatedAt?: Date
  status?: TaskStatus
  parentTaskId?: string
  repeat?: string
  notifications?: Array<Notifications>
  timeEstimate?: string
  title?: string
  labels?: Array<string>
  id?: string
  dependOnTaskIds?: Array<string>
  dueDate?: Date
  createdAt?: Date
  attachments?: Array<Attachments>
  customFields?: Array<CustomAttributes>
  watchers?: Array<Users>
  timeLogged?: string
  subTaskIds?: Array<string>
  assignee?: Users
  comments?: Array<Comments>
  description?: string
  dueTimezone?: string
  completionPercentage?: number
  priority?: PriorityLevel
  createdBy?: Users
}
export interface Metadata {
  id?: string
  value?: string
  entityType?: string
  updatedAt?: Date
  key?: string
  type?: DataType
  createdAt?: Date
  entityId?: string
}
export interface Comments {
  text?: string
  commentId?: string
  updatedAt?: Date
  flagged?: boolean
  createdAt?: Date
  author?: Users
  parentId?: string
  likes?: number
  metadata?: Array<Metadata>
  deleted?: boolean
  active?: boolean
}
export interface Notifications {
  deleted?: boolean
  customFields?: Array<CustomAttributes>
  attachments?: Array<Attachments>
  notificationId?: string
  priority?: PriorityLevel
  status?: string
  message?: string
  channel?: string
  createdAt?: Date
  recipient?: Users
  title?: string
  updatedAt?: Date
  active?: boolean
  type?: string
}
export interface Entity {
  attributes?: Array<string>
  entityType?: EntityCategory
  entityId?: string
}
export interface Permissions {
  canEdit?: Array<string>
  roles?: Array<string>
  assigneeDetails?: UserOrGroup
  canView?: Array<string>
  accessControlType?: AccessControlModel
  canDelete?: Array<string>
  identifierType?: UniversalIdentifierType
}
export interface UserOrGroup {
  identifier?: string
  displayName?: string
  type?: ParticipantType
}
export interface TimeSession {
  closeTime?: string
  openTime?: string
}
export interface EmploymentUnits {
  description?: string
  name?: string
}
export interface HiringOrganizations {
  size?: string
  locations?: Array<Addresses>
  name?: string
  industry?: string
  description?: string
}
export interface Salaries {
  paymentPeriod?: TimeCycle
  value?: number
  currency?: Currency
}
export interface Jobs {
  description?: string
  occupationalCategory?: string
  jobStartDate?: Date
  languagesSpoken?: Array<string>
  jobTrialPeriod?: string
  employmentType?: EmploymentType
  id?: string
  jobFlexibleHours?: boolean
  jobLocationType?: string
  incentiveCompensation?: string
  educationRequirements?: string
  location?: Addresses
  createdAt?: Date
  jobImmediateStart?: boolean
  incentives?: string
  benefits?: Array<string>
  workHours?: string
  company?: Companies
  remote?: boolean
  qualifications?: string
  industry?: string
  salaryCurrency?: string
  baseSalary?: Salaries
  jobBenefits?: string
  experienceRequirements?: string
  responsibilities?: string
  title?: string
  skills?: Array<string>
  updatedAt?: Date
  employmentUnit?: EmploymentUnits
  jobTrainingProvided?: boolean
  jobShifts?: Array<string>
  validUntil?: Date
  workFromHome?: boolean
  modifyToken?: string
  applicationDeadline?: Date
}
export interface Contacts {
  addresses?: Array<Addresses>
  updatedAt?: Date
  modifyToken?: string
  phones?: Array<Phones>
  company?: string
  websites?: Array<string>
  firstName?: string
  address?: Addresses
  isActive?: boolean
  customFields?: Array<CustomAttributes>
  tags?: Array<string>
  birthday?: Date
  notes?: Notes
  relationship?: string
  emails?: Array<Emails>
  id?: string
  leadId?: string
  defaultEmail?: string
  createdAt?: Date
  note?: string
  lastName?: string
  defaultPhone?: string
  socialProfiles?: Array<SocialProfiles>
}
export interface Emails {
  type?: EmailCategoryType
  email?: string
}
export interface Phones {
  phone?: string
  country?: string
  countryCode?: string
  type?: DeviceUsageType
}
export interface Educations {
  institution?: string
  degree?: string
  fieldOfStudy?: string
  startDate?: Date
  endDate?: Date
  gpa?: number
}
export interface Candidates {
  firstName?: string
  phoneNumber?: string
  id?: string
  references?: Array<References>
  email?: string
  role?: string
  languages?: Array<string>
  updatedAt?: Date
  certifications?: Array<string>
  profilePicture?: Images
  workExperiences?: Array<WorkExperiences>
  lastName?: string
  resume?: Attachments
  educations?: Array<Educations>
  availability?: Date
  jobId?: string
  websites?: Array<string>
  preferredWorkLocation?: string
  status?: EmploymentAndCandidateStatus
  coverLetter?: Attachments
  customFields?: Array<CustomAttributes>
  notes?: Array<Notes>
  skills?: Array<string>
  modifyToken?: string
  socialProfiles?: Array<SocialProfiles>
  createdAt?: Date
}
export interface References {
  name?: string
  position?: string
  relationship?: string
  company?: string
  email?: string
  phoneNumber?: string
}
export interface WorkExperiences {
  company?: string
  position?: string
  description?: string
  startDate?: Date
  endDate?: Date
}
export interface Tickets {
  attachments?: Array<Attachments>
  reporter?: Contacts
  id?: string
  description?: string
  status?: IssueLifecycleStatus
  updatedAt?: Date
  customFields?: Array<CustomAttributes>
  tags?: Array<string>
  type?: SupportQueryType
  dueDate?: Date
  createdAt?: Date
  comments?: Array<Comments>
  priority?: SupportTicketPriority
  notes?: Array<Notes>
  modifyToken?: string
  title?: string
  assignee?: Users
}
export interface InvoiceItems {
  deletedAt?: Date
  isAvailable?: boolean
  options?: Array<ProductOptions>
  customFields?: Array<CustomAttributes>
  availabilityDate?: Date
  gallery?: Array<Images>
  id?: string
  variants?: Array<Variants>
  reviews?: Array<RatingsReviews>
  ratingCount?: number
  dimensions?: Dimensions
  sku?: string
  condition?: ItemCondition
  upc?: string
  inventoryQuantity?: number
  mpn?: string
  price?: number
  rating?: number
  createdAt?: Date
  onSale?: boolean
  tags?: Array<string>
  isbn?: string
  description?: string
  discount?: number
  active?: boolean
  weight?: number
  imageUrl?: string
  brand?: string
  inventoryStatus?: ProductAvailabilityStatus
  ean?: string
  name?: string
  updatedAt?: Date
  currency?: Currency
}
export interface JournalEntryLines {
  taxCode?: string
  debit?: number
  description?: string
  credit?: number
  accountId?: string
  quantity?: number
  tracking?: FinancialTrackingCategories
  id?: number
}
export interface Invoices {
  updatedAt?: Date
  notes?: string
  billingAddress?: Addresses
  shippingAddress?: Addresses
  discountPercentage?: number
  items?: Array<InvoiceItems>
  footer?: string
  id?: string
  active?: boolean
  currency?: Currency
  paymentTerms?: PaymentTerms
  issuedDate?: Date
  taxTotal?: number
  header?: string
  exchangeRate?: number
  vatNumber?: string
  modifyToken?: string
  status?: PaymentStatus
  discountTotal?: number
  dueDate?: Date
  deleted?: boolean
  subtotal?: number
  adjustments?: Array<InvoiceAdjustments>
  paidAmount?: number
  payments?: Array<Payments>
  attachments?: Array<Attachments>
  total?: number
  vatName?: string
  createdAt?: Date
  customer?: Customers
  balanceDue?: number
  invoiceNumber?: string
  terms?: string
}
export interface JournalEntries {
  updatedAt?: Date
  status?: JournalEntryStatus
  name?: string
  deleted?: boolean
  totalAmount?: number
  currency?: Currency
  type?: string
  description?: string
  lineItems?: Array<JournalEntryLines>
  entryNumber?: string
  createdBy?: string
  updatedBy?: string
  id?: string
  memo?: string
  isReconciled?: boolean
  exchangeRate?: number
  date?: Date
  reference?: string
  createdAt?: Date
  modifyToken?: string
  active?: boolean
  attachments?: Array<Attachments>
}
export interface IncomeStatements {
  exchangeRate?: number
  costOfGoodsSold?: number
  profitMargins?: number
  modifyToken?: string
  revenue?: RevenueDetails
  currency?: Currency
  operatingIncome?: number
  depreciationAndAmortization?: number
  incomeTaxExpense?: IncomeTaxExpenseDetails
  accountSummary?: Array<KeyValues>
  createdAt?: Date
  id?: string
  shareholderEquity?: ShareholderEquityDetails
  incomeBeforeTax?: number
  netIncome?: number
  updatedAt?: Date
  ebitda?: number
  interestExpense?: number
  operatingExpenses?: OperatingExpensesDetails
  period?: string
  grossProfit?: number
}
export interface BalanceSheets {
  inventory?: number
  nonCurrentLiabilities?: number
  retainedEarnings?: number
  currentPortionOfLongTermDebt?: number
  currentLiabilities?: number
  modifyToken?: string
  deferredRevenue?: number
  otherCurrentLiabilities?: number
  fixedAssets?: number
  commonStock?: number
  minorityInterest?: number
  preferredStock?: number
  totalLiabilities?: number
  accountsReceivable?: number
  notes?: string
  updatedAt?: Date
  balanceDate?: Date
  shortTermInvestments?: number
  accumulatedDepreciation?: number
  otherNonCurrentAssets?: number
  notesPayable?: number
  active?: boolean
  currency?: Currency
  otherNonCurrentLiabilities?: number
  longTermDebt?: number
  shortTermDebt?: number
  additionalPaidInCapital?: number
  totalLiabilitiesAndEquity?: number
  nonCurrentAssets?: number
  createdAt?: Date
  propertyPlantEquipment?: number
  customFields?: Array<CustomAttributes>
  intangibleAssets?: number
  prepaidExpenses?: number
  otherCurrentAssets?: number
  treasuryStock?: number
  auditInfo?: AuditInformation
  deleted?: boolean
  currentAssets?: number
  cashAndCashEquivalents?: number
  taxLiabilities?: number
  equity?: number
  accountSummary?: Array<KeyValues>
  accountsPayable?: number
  accruedLiabilities?: number
  id?: string
  stockholdersEquity?: number
  totalAssets?: number
}
export interface AuditInformation {
  auditOpinion?: AuditOpinionType
  notes?: string
  auditorName?: string
  auditDate?: Date
}
export interface Vendors {
  contactName?: string
  address?: Addresses
  overdueBalance?: number
  contactEmail?: string
  createdAt?: Date
  modifyToken?: string
  updatedAt?: Date
  accountNumber?: string
  is1099?: boolean
  customFields?: Array<CustomAttributes>
  id?: string
  outstandingBalance?: number
  website?: string
  deleted?: boolean
  currencyCode?: string
  companyName?: string
  note?: string
  tax?: Array<Taxes>
  contactPhone?: string
  active?: boolean
}
export interface Bills {
  amountRemaining?: number
  notes?: string
  amountDue?: number
  currencyCode?: string
  customFields?: Array<CustomAttributes>
  id?: string
  createdAt?: Date
  deleted?: boolean
  customer?: Customers
  attachments?: Array<Attachments>
  issueDate?: Date
  status?: BillingStatus
  dueDate?: Date
  modifyToken?: string
  vendor?: Vendors
  amountPaid?: number
  terms?: string
  lineItems?: Array<Items>
  updatedAt?: Date
  active?: boolean
}
export interface Payments {
  orderId?: string
  amount?: number
  paymentIntent?: string
  receiptEmail?: string
  status?: PaymentStatus
  paymentCaptureMethod?: string
  billingDetails?: BillingDetails
  paymentProcessor?: string
  description?: string
  webhookUrl?: string
  modifyToken?: string
  invoice?: Invoices
  shippingDetails?: ShippingDetails
  paymentMethod?: PaymentMethods
  refund?: Refunds
  updatedAt?: Date
  id?: string
  date?: Date
  transactionId?: string
  notes?: string
  customer?: Customers
  currency?: Currency
  createdAt?: Date
  metadata?: Metadata
  active?: boolean
  deleted?: boolean
}
export interface PurchaseOrders {
  createdAt?: Date
  updatedAt?: Date
  vendor?: Vendors
  shippingCosts?: number
  lineItems?: Array<PurchaseOrderLineItems>
  taxes?: number
  notes?: string
  expectedDeliveryDate?: Date
  orderNumber?: string
  paymentTerms?: string
  id?: string
  status?: OrderStatus
  shipTo?: Addresses
  billTo?: Addresses
  total?: number
  currency?: Currency
  modifyToken?: string
  subtotal?: number
  accountId?: string
  orderDate?: Date
  attachments?: Array<Attachments>
  active?: boolean
  deleted?: boolean
}
export interface Accounts {
  updatedAt?: Date
  interestRate?: number
  overdraftProtection?: boolean
  title?: string
  branch?: string
  notes?: string
  active?: boolean
  closedAt?: Date
  createdAt?: Date
  deleted?: boolean
  id?: string
  status?: FinancialAccountStatus
  balance?: number
  accountType?: AccountType
  currency?: Currency
  owner?: Customers
  modifyToken?: string
  name?: string
  transactions?: Array<Transactions>
  description?: string
  accountNumber?: string
  overdraftLimit?: number
}
export interface PurchaseOrderLineItems {
  quantity?: number
  unitOfMeasure?: string
  discount?: number
  unitPrice?: number
  id?: string
  totalPrice?: number
  description?: string
  deliveryDate?: Date
  sKU?: string
  productId?: string
}
export interface Refunds {
  reason?: string
  status?: TransactionStatus
  id?: string
  paymentId?: string
  amount?: number
  currency?: Currency
  createdAt?: Date
  updatedAt?: Date
}
export interface AdditionalCharges {
  description?: string
  updatedAt?: Date
  id?: string
  amount?: number
  type?: FinancialChargeType
  createdAt?: Date
}
export interface Transactions {
  exchangeRate?: number
  accountId?: string
  taxAmount?: number
  refund?: Refunds
  transactionCategory?: TransactionType
  amount?: number
  tags?: Array<string>
  status?: FinancialTransactionStatus
  paymentMethod?: PaymentMethods
  transactionMethod?: TransactionMethod
  invoiceId?: string
  contact?: Contacts
  shipping?: ShippingDetails
  updatedAt?: Date
  modifyToken?: string
  items?: Array<Items>
  sender?: Customers
  billingDetails?: BillingDetails
  description?: string
  type?: FinancialTransactionType
  paymentIntent?: string
  date?: Date
  createdAt?: Date
  orderId?: string
  applicationFee?: number
  recipient?: Customers
  deleted?: boolean
  currency?: Currency
  checkNumber?: string
  dispute?: Disputes
  id?: string
  accountName?: string
  metadata?: Metadata
}
export interface Expenses {
  category?: ExpenseCategories
  note?: string
  tags?: Array<string>
  reportId?: string
  createdByUserId?: string
  approvedByUserId?: string
  deleted?: boolean
  tax?: Array<Taxes>
  currencyCode?: string
  customFields?: Array<CustomAttributes>
  id?: string
  lineItems?: Array<Items>
  transactionId?: string
  status?: ExpenseApprovalStatus
  description?: string
  merchant?: string
  dateIncurred?: Date
  location?: Addresses
  active?: boolean
  accountId?: string
  createdAt?: Date
  paymentMethod?: PaymentMethods
  attachments?: Array<Attachments>
  receiptUrls?: Array<string>
  updatedAt?: Date
  amount?: number
  modifyToken?: string
}
export interface ExpenseCategories {
  description?: string
  id?: string
  name?: string
}
export interface CreditNotes {
  companyName?: string
  metadata?: Metadata
  lines?: Array<CreditNoteLines>
  currency?: Currency
  createdAt?: Date
  modifyToken?: string
  number?: string
  attachments?: Array<Attachments>
  vatNumber?: string
  customer?: Customers
  issuedDate?: Date
  id?: string
  memo?: string
  description?: string
  creditType?: CreditType
  billingAddress?: Addresses
  adjustment?: number
  shippingAddress?: Addresses
  taxAmount?: number
  status?: CreditNoteStatus
  updatedAt?: Date
  active?: boolean
  deleted?: boolean
  reason?: string
  vatName?: string
  payments?: Array<Payments>
  taxRate?: number
  amount?: number
  companyId?: string
  discounts?: Array<number>
}
export interface CreditNoteLines {
  id?: string
  unitPrice?: number
  total?: number
  quantity?: number
  taxRate?: number
  account?: string
  product?: Products
  description?: string
}
export interface TaxRates {
  id?: string
  taxNumber?: string
  currency?: Currency
  updatedAt?: Date
  shippingIncluded?: boolean
  name?: string
  taxProvider?: string
  taxType?: GlobalTaxType
  customFields?: Array<CustomAttributes>
  modifyToken?: string
  applicableItems?: Array<string>
  country?: string
  region?: string
  createdAt?: Date
  active?: boolean
  description?: string
  percentage?: number
  compound?: boolean
  deleted?: boolean
}
export interface InvoiceAdjustments {
  appliedToInvoiceItemId?: string
  active?: boolean
  updatedAt?: Date
  metadata?: Metadata
  description?: string
  createdAt?: Date
  deleted?: boolean
  id?: string
  type?: InvoiceAdjustmentType
  amount?: number
  currency?: Currency
}
export interface PaymentTerms {
  type?: PaymentTerm
  countrySpecificTerms?: Array<string>
  discountDays?: number
  permittedClientClasses?: Array<string>
  dueDays?: number
  createdDate?: Date
  lastUpdatedDate?: Date
  languageSupport?: Array<string>
  currencyFormatting?: string
  notes?: string
  gracePeriodDays?: number
  allowedMethods?: Array<string>
  updatedAt?: Date
  interestRate?: number
  minimumPayment?: number
  isDeleted?: boolean
  currencyCode?: string
  discountRate?: number
  isActive?: boolean
  id?: string
  description?: string
  createdAt?: Date
  penaltyRate?: number
}
export interface BillingDetails {
  vatId?: string
  note?: string
  createdAt?: Date
  language?: string
  fullName?: string
  customerId?: string
  isDeleted?: boolean
  defaultPaymentMethod?: PaymentMethods
  email?: string
  phoneNumber?: string
  companyName?: string
  active?: boolean
  address?: Addresses
  paymentTerms?: PaymentTerm
  currency?: Currency
  id?: string
  updatedAt?: Date
  additionalAttributes?: Array<CustomAttributes>
}
export interface ShippingItem {
  sku?: string
  productName?: string
  weightUnit?: string
  weight?: number
  id?: string
  productId?: string
  quantity?: number
  dimensions?: Dimensions
  value?: number
}
export interface RevenueDetails {
  otherRevenue?: number
  serviceRevenue?: number
  salesRevenue?: number
}
export interface OperatingExpensesDetails {
  salesGeneralAndAdministrativeExpenses?: number
  researchAndDevelopmentExpenses?: number
  otherOperatingExpenses?: number
}
export interface IncomeTaxExpenseDetails {
  deferredIncomeTax?: number
  currentIncomeTax?: number
  taxAllowanceCredit?: number
}
export interface ShareholderEquityDetails {
  accumulatedOtherComprehensiveIncome?: number
  preferredStock?: number
  commonStock?: number
  treasuryStock?: number
  retainedEarnings?: number
}
export interface Chats {
  participants?: Array<Participants>
  id?: string
  status?: ConversationStatus
  modifyToken?: string
  lastReadMessageId?: string
  messages?: Array<Messages>
  createdAt?: Date
  lastMessage?: Messages
  metadata?: string
  title?: string
  updatedAt?: Date
  unreadCount?: number
  type?: ChatType
  isPinned?: boolean
}
export interface Messages {
  metadata?: Array<Metadata>
  createdAt?: Date
  id?: string
  content?: string
  attachments?: Array<Attachments>
  active?: boolean
  chatId?: string
  deleted?: boolean
  replyToMessageId?: string
  senderId?: string
  priority?: PriorityLevel
  readStatus?: MessageReadStatus
  updatedAt?: Date
  receiverId?: string
  threadId?: string
  deliveryStatus?: MessageDeliveryStatus
  reactions?: Array<Reactions>
  type?: MessageContentType
  modifyToken?: string
  timestamp?: Date
}
export interface Participants {
  displayName?: string
  status?: ParticipantEngagementStatus
  type?: CommunicationRole
  userId?: string
  joinedAt?: Date
}
export interface Reactions {
  createdAt?: Date
  userId?: string
  type?: ReactionType
  messageId?: string
  chatId?: string
}
export interface Disputes {
  charge?: string
  active?: boolean
  amount?: number
  currency?: Currency
  version?: string
  customerId?: string
  deleted?: boolean
  created?: Date
  notes?: string
  reason?: string
  transactionId?: string
  id?: string
  chargeRefundable?: boolean
  metadata?: Metadata
  updated?: Date
  status?: FinancialDisputeStatus
  evidence?: Evidence
}
export interface Evidence {
  customerSignature?: string
  shippingAddress?: string
  serviceDocumentation?: string
  cancellationRebuttal?: string
  productDescription?: string
  billingAddress?: string
  customerCommunication?: string
  customerEmailAddress?: string
  cancellationPolicyDisclosure?: string
  duplicateChargeExplanation?: string
  refundPolicy?: string
  accessActivityLog?: string
  receipt?: string
  refundRefusalExplanation?: string
  shippingCarrier?: string
  duplicateChargeId?: string
  duplicateChargeDocumentation?: string
  cancellationPolicy?: string
  customerPurchaseIp?: string
  refundPolicyDisclosure?: string
  serviceDate?: Date
  shippingDate?: Date
  shippingTrackingNumber?: string
  uncategorizedText?: string
  uncategorizedFile?: string
  shippingDocumentation?: string
  customerName?: string
}
export interface TaxDetails {
  active?: boolean
  effectiveDate?: Date
  taxRegistrationNumber?: string
  updatedAt?: Date
  region?: string
  id?: string
  isTaxIncludedInPrice?: boolean
  rate?: number
  deleted?: boolean
  currency?: Currency
  createdAt?: Date
  expirationDate?: Date
  name?: string
  category?: string
  details?: string
  country?: string
  amount?: number
  jurisdiction?: string
  taxCode?: string
}
export const enum Roles {
  User = 'User',
  Admin = 'Admin',
  Moderator = 'Moderator'
}
export const enum AccountType {
  AssetFixedAssetComputers = 'AssetFixedAssetComputers',
  AssetRetainage = 'AssetRetainage',
  AssetCashAndCashEquivalents = 'AssetCashAndCashEquivalents',
  RevenueDiscountsRefundsGiven = 'RevenueDiscountsRefundsGiven',
  AssetLoansToStockholders = 'AssetLoansToStockholders',
  OtherExpenseDeferredTaxExpense = 'OtherExpenseDeferredTaxExpense',
  OtherIncomeInterestEarned = 'OtherIncomeInterestEarned',
  OtherExpensePriorPeriodItems = 'OtherExpensePriorPeriodItems',
  ExpenseOtherRentalCosts = 'ExpenseOtherRentalCosts',
  AssetCashOnHand = 'AssetCashOnHand',
  AssetAccumulatedAmortization = 'AssetAccumulatedAmortization',
  AssetFixedAssetPhone = 'AssetFixedAssetPhone',
  EquityPersonalIncome = 'EquityPersonalIncome',
  LiabilityLongTermEmployeeBenefitObligations = 'LiabilityLongTermEmployeeBenefitObligations',
  LiabilityGroupAndAssociates = 'LiabilityGroupAndAssociates',
  OtherExpenseIncomeTaxOtherExpense = 'OtherExpenseIncomeTaxOtherExpense',
  OtherIncomeGainLossOnSaleOfFixedAssets = 'OtherIncomeGainLossOnSaleOfFixedAssets',
  EquityPaidInCapitalOrSurplus = 'EquityPaidInCapitalOrSurplus',
  LiabilityProvisionForLiabilities = 'LiabilityProvisionForLiabilities',
  EquityOtherFreeReserves = 'EquityOtherFreeReserves',
  OtherExpenseRentAndLease = 'OtherExpenseRentAndLease',
  ExpenseEntertainmentMeals = 'ExpenseEntertainmentMeals',
  AssetFixedAsset = 'AssetFixedAsset',
  LiabilityLongTermLiability = 'LiabilityLongTermLiability',
  EquityInvestmentGrants = 'EquityInvestmentGrants',
  AssetOtherLongTermInvestments = 'AssetOtherLongTermInvestments',
  EquityRetainedEarnings = 'EquityRetainedEarnings',
  OtherCurrentLiabilityLineOfCredit = 'OtherCurrentLiabilityLineOfCredit',
  AssetGoodwill = 'AssetGoodwill',
  OtherExpensePenaltiesSettlements = 'OtherExpensePenaltiesSettlements',
  OtherCurrentLiabilityGlobalTaxPayable = 'OtherCurrentLiabilityGlobalTaxPayable',
  ExpenseDistributionCosts = 'ExpenseDistributionCosts',
  OtherCurrentLiabilityDutiesAndTaxes = 'OtherCurrentLiabilityDutiesAndTaxes',
  ExpenseProjectStudiesSurveysAssessments = 'ExpenseProjectStudiesSurveysAssessments',
  OtherCurrentLiabilityStateLocalIncomeTaxPayable = 'OtherCurrentLiabilityStateLocalIncomeTaxPayable',
  RevenueNonProfitIncome = 'RevenueNonProfitIncome',
  AssetPrepaymentsAndAccruedIncome = 'AssetPrepaymentsAndAccruedIncome',
  AssetLandAsset = 'AssetLandAsset',
  ExpenseGlobalTaxExpense = 'ExpenseGlobalTaxExpense',
  AssetLoansToOfficers = 'AssetLoansToOfficers',
  OtherIncomeLossOnDisposalOfAssets = 'OtherIncomeLossOnDisposalOfAssets',
  AssetFixedAssetCopiers = 'AssetFixedAssetCopiers',
  OtherExpenseVehicleRegistration = 'OtherExpenseVehicleRegistration',
  AssetAllowanceForBadDebts = 'AssetAllowanceForBadDebts',
  CostOfGoodsSoldEquipmentRentalCos = 'CostOfGoodsSoldEquipmentRentalCos',
  OtherCurrentLiabilityCurrentPortionOfObligationsUnderFinanceLeases = 'OtherCurrentLiabilityCurrentPortionOfObligationsUnderFinanceLeases',
  OtherCurrentLiabilityOtherCurrentLiabilities = 'OtherCurrentLiabilityOtherCurrentLiabilities',
  RevenueCashReceiptIncome = 'RevenueCashReceiptIncome',
  OtherCurrentLiabilityPayrollTaxPayable = 'OtherCurrentLiabilityPayrollTaxPayable',
  AssetProvisionsCurrentAssets = 'AssetProvisionsCurrentAssets',
  EquityEstimatedTaxes = 'EquityEstimatedTaxes',
  EquityTreasuryStock = 'EquityTreasuryStock',
  LiabilityAccountsPayable = 'LiabilityAccountsPayable',
  ExpenseTravelMeals = 'ExpenseTravelMeals',
  OtherExpenseDepreciation = 'OtherExpenseDepreciation',
  AssetBank = 'AssetBank',
  CostOfGoodsSold = 'CostOfGoodsSold',
  EquityOwnersEquity = 'EquityOwnersEquity',
  OtherExpenseUtilities = 'OtherExpenseUtilities',
  OtherIncomeOtherInvestmentIncome = 'OtherIncomeOtherInvestmentIncome',
  RevenueIncome = 'RevenueIncome',
  ExpenseOtherSellingExpenses = 'ExpenseOtherSellingExpenses',
  AssetFixedAssetPhotoVideo = 'AssetFixedAssetPhotoVideo',
  OtherExpenseTaxRoundoffGainOrLoss = 'OtherExpenseTaxRoundoffGainOrLoss',
  AssetPrepaidExpenses = 'AssetPrepaidExpenses',
  AssetLongTermInvestments = 'AssetLongTermInvestments',
  ExpenseOtherMiscellaneousServiceCost = 'ExpenseOtherMiscellaneousServiceCost',
  OtherIncomeUnrealisedLossOnSecuritiesNetOfTax = 'OtherIncomeUnrealisedLossOnSecuritiesNetOfTax',
  LiabilityLongTermBorrowings = 'LiabilityLongTermBorrowings',
  EquityHealthcare = 'EquityHealthcare',
  ExpenseBankCharges = 'ExpenseBankCharges',
  ExpensePayrollExpenses = 'ExpensePayrollExpenses',
  RevenueSalesWholesale = 'RevenueSalesWholesale',
  OtherExpenseWashAndRoadServices = 'OtherExpenseWashAndRoadServices',
  AssetDevelopmentCosts = 'AssetDevelopmentCosts',
  AssetOrganizationalCosts = 'AssetOrganizationalCosts',
  AssetDeferredTax = 'AssetDeferredTax',
  ExpenseTravel = 'ExpenseTravel',
  EquityShareCapital = 'EquityShareCapital',
  AssetGlobalTaxRefund = 'AssetGlobalTaxRefund',
  ExpenseOfficeGeneralAdministrativeExpenses = 'ExpenseOfficeGeneralAdministrativeExpenses',
  ExpenseOtherExternalServices = 'ExpenseOtherExternalServices',
  AssetShortTermLoansAndAdvancesToRelatedParties = 'AssetShortTermLoansAndAdvancesToRelatedParties',
  ExpenseShippingAndDeliveryExpense = 'ExpenseShippingAndDeliveryExpense',
  ExpenseStaffCosts = 'ExpenseStaffCosts',
  OtherCurrentLiabilityRentsInTrustLiability = 'OtherCurrentLiabilityRentsInTrustLiability',
  ExpenseLegalProfessionalFees = 'ExpenseLegalProfessionalFees',
  AssetInvestments = 'AssetInvestments',
  EquityPartnersEquity = 'EquityPartnersEquity',
  EquityEquityInEarningsOfSubsidiuaries = 'EquityEquityInEarningsOfSubsidiuaries',
  Expense = 'Expense',
  OtherExpenseDepletion = 'OtherExpenseDepletion',
  OtherExpenseOtherHomeOfficeExpenses = 'OtherExpenseOtherHomeOfficeExpenses',
  CostOfGoodsSoldCostOfSales = 'CostOfGoodsSoldCostOfSales',
  OtherExpenseExchangeGainOrLoss = 'OtherExpenseExchangeGainOrLoss',
  ExpensePurchasesRebates = 'ExpensePurchasesRebates',
  ExpenseDuesSubscriptions = 'ExpenseDuesSubscriptions',
  ExpenseUnappliedCashBillPaymentExpense = 'ExpenseUnappliedCashBillPaymentExpense',
  AssetOtherFixedAssets = 'AssetOtherFixedAssets',
  LiabilityAccruedVacationPayable = 'LiabilityAccruedVacationPayable',
  OtherCurrentLiabilityLoanPayable = 'OtherCurrentLiabilityLoanPayable',
  ExpenseShippingFreightDelivery = 'ExpenseShippingFreightDelivery',
  AssetRentsHeldInTrust = 'AssetRentsHeldInTrust',
  AssetDepletableAssets = 'AssetDepletableAssets',
  LiabilityProvisionsNonCurrentLiabilities = 'LiabilityProvisionsNonCurrentLiabilities',
  CostOfGoodsSoldOtherCostsOfServiceCos = 'CostOfGoodsSoldOtherCostsOfServiceCos',
  LiabilityOutstandingDuesOtherThanMicroSmallEnterprise = 'LiabilityOutstandingDuesOtherThanMicroSmallEnterprise',
  OtherCurrentLiabilityPayrollClearing = 'OtherCurrentLiabilityPayrollClearing',
  AssetInventory = 'AssetInventory',
  AssetCumulativeDepreciationOnIntangibleAssets = 'AssetCumulativeDepreciationOnIntangibleAssets',
  OtherExpenseOtherVehicleExpenses = 'OtherExpenseOtherVehicleExpenses',
  AssetFixedAssetOtherToolsEquipment = 'AssetFixedAssetOtherToolsEquipment',
  OtherExpenseVehicleRepairs = 'OtherExpenseVehicleRepairs',
  Liability = 'Liability',
  OtherIncomeDividendIncome = 'OtherIncomeDividendIncome',
  LiabilityDeferredTaxLiabilities = 'LiabilityDeferredTaxLiabilities',
  LiabilityOutstandingDuesMicroSmallEnterprise = 'LiabilityOutstandingDuesMicroSmallEnterprise',
  OtherExpenseVehicleLease = 'OtherExpenseVehicleLease',
  OtherCurrentLiabilityInterestPayables = 'OtherCurrentLiabilityInterestPayables',
  LiabilityAccruedLongTermLiabilities = 'LiabilityAccruedLongTermLiabilities',
  OtherExpenseVehicle = 'OtherExpenseVehicle',
  ExpenseTravelExpensesGeneralAndAdminExpenses = 'ExpenseTravelExpensesGeneralAndAdminExpenses',
  ExpenseBadDebts = 'ExpenseBadDebts',
  OtherCurrentLiabilitySalesTaxPayable = 'OtherCurrentLiabilitySalesTaxPayable',
  OtherCurrentLiabilitySocialSecurityAgencies = 'OtherCurrentLiabilitySocialSecurityAgencies',
  LiabilityCreditCard = 'LiabilityCreditCard',
  OtherExpenseHomeOffice = 'OtherExpenseHomeOffice',
  CostOfGoodsSoldFreightAndDeliveryCost = 'CostOfGoodsSoldFreightAndDeliveryCost',
  ExpenseLossOnDiscontinuedOperationsNetOfTax = 'ExpenseLossOnDiscontinuedOperationsNetOfTax',
  AssetOtherAsset = 'AssetOtherAsset',
  OtherCurrentLiabilityFederalIncomeTaxPayable = 'OtherCurrentLiabilityFederalIncomeTaxPayable',
  OtherCurrentLiabilityShortTermBorrowings = 'OtherCurrentLiabilityShortTermBorrowings',
  OtherExpenseVehicleInsurance = 'OtherExpenseVehicleInsurance',
  RevenueSalesOfProductIncome = 'RevenueSalesOfProductIncome',
  AssetAccumulatedDepreciation = 'AssetAccumulatedDepreciation',
  OtherExpenseVehicleLoanInterest = 'OtherExpenseVehicleLoanInterest',
  OtherExpenseOtherMiscellaneousExpense = 'OtherExpenseOtherMiscellaneousExpense',
  LiabilityOtherLongTermProvisions = 'LiabilityOtherLongTermProvisions',
  AssetShortTermInvestmentsInRelatedParties = 'AssetShortTermInvestmentsInRelatedParties',
  OtherExpenseHomeOwnerRentalInsurance = 'OtherExpenseHomeOwnerRentalInsurance',
  AssetProvisionsFixedAssets = 'AssetProvisionsFixedAssets',
  AssetLongTermLoansAndAdvancesToRelatedParties = 'AssetLongTermLoansAndAdvancesToRelatedParties',
  AssetGlobalTaxDeferred = 'AssetGlobalTaxDeferred',
  ExpenseEntertainment = 'ExpenseEntertainment',
  LiabilityNotesPayable = 'LiabilityNotesPayable',
  AssetNonCurrentAssets = 'AssetNonCurrentAssets',
  EquityCapitalReserves = 'EquityCapitalReserves',
  Income = 'Income',
  LiabilityDebtsRelatedToParticipatingInterests = 'LiabilityDebtsRelatedToParticipatingInterests',
  OtherCurrentLiabilityDirectDepositPayable = 'OtherCurrentLiabilityDirectDepositPayable',
  OtherCurrentLiabilityPrepaidExpensesPayable = 'OtherCurrentLiabilityPrepaidExpensesPayable',
  OtherExpense = 'OtherExpense',
  RevenueRevenueGeneral = 'RevenueRevenueGeneral',
  ExpenseExternalServices = 'ExpenseExternalServices',
  ExpenseExtraordinaryCharges = 'ExpenseExtraordinaryCharges',
  ExpenseOtherCurrentOperatingCharges = 'ExpenseOtherCurrentOperatingCharges',
  ExpensePromotionalMeals = 'ExpensePromotionalMeals',
  OtherCurrentLiabilityTrustAccountsLiabilities = 'OtherCurrentLiabilityTrustAccountsLiabilities',
  EquityCalledUpShareCapital = 'EquityCalledUpShareCapital',
  EquityShareApplicationMoneyPendingAllotment = 'EquityShareApplicationMoneyPendingAllotment',
  AssetLicenses = 'AssetLicenses',
  RevenueOtherCurrentOperatingIncome = 'RevenueOtherCurrentOperatingIncome',
  AssetLeaseBuyout = 'AssetLeaseBuyout',
  AssetLeaseholdImprovements = 'AssetLeaseholdImprovements',
  AssetTradeAndOtherReceivables = 'AssetTradeAndOtherReceivables',
  AssetTrustAccounts = 'AssetTrustAccounts',
  AssetOtherConsumables = 'AssetOtherConsumables',
  AssetIntangibleAssetsUnderDevelopment = 'AssetIntangibleAssetsUnderDevelopment',
  AssetIntangibleAssets = 'AssetIntangibleAssets',
  OtherCurrentLiabilityCurrentPortionEmployeeBenefitsObligations = 'OtherCurrentLiabilityCurrentPortionEmployeeBenefitsObligations',
  LiabilityAccrualsAndDeferredIncome = 'LiabilityAccrualsAndDeferredIncome',
  OtherIncomeOtherOperatingIncome = 'OtherIncomeOtherOperatingIncome',
  OtherCurrentLiabilitySundryDebtorsAndCreditors = 'OtherCurrentLiabilitySundryDebtorsAndCreditors',
  ExpenseAmortizationExpense = 'ExpenseAmortizationExpense',
  ExpenseTravelExpensesSellingExpense = 'ExpenseTravelExpensesSellingExpense',
  OtherCurrentLiabilityProvisionForWarrantyObligations = 'OtherCurrentLiabilityProvisionForWarrantyObligations',
  AssetAccumulatedAmortizationOfOtherAssets = 'AssetAccumulatedAmortizationOfOtherAssets',
  CostOfGoodsSoldCostOfLaborCos = 'CostOfGoodsSoldCostOfLaborCos',
  AssetCapitalWip = 'AssetCapitalWip',
  AssetFurnitureAndFixtures = 'AssetFurnitureAndFixtures',
  LiabilityLongTermDebit = 'LiabilityLongTermDebit',
  ExpenseTaxesPaid = 'ExpenseTaxesPaid',
  ExpenseIncomeTaxExpense = 'ExpenseIncomeTaxExpense',
  AssetSavings = 'AssetSavings',
  ExpenseCostOfLabor = 'ExpenseCostOfLabor',
  EquityAccumulatedOtherComprehensiveIncome = 'EquityAccumulatedOtherComprehensiveIncome',
  EquityOpeningBalanceEquity = 'EquityOpeningBalanceEquity',
  Equity = 'Equity',
  AssetAssetsHeldForSale = 'AssetAssetsHeldForSale',
  RevenueOwnWorkCapitalized = 'RevenueOwnWorkCapitalized',
  LiabilityStaffAndRelatedLongTermLiabilityAccounts = 'LiabilityStaffAndRelatedLongTermLiabilityAccounts',
  AssetMachineryAndEquipment = 'AssetMachineryAndEquipment',
  OtherCurrentLiabilityCurrentLiabilities = 'OtherCurrentLiabilityCurrentLiabilities',
  OtherCurrentLiabilityTradeAndOtherPayables = 'OtherCurrentLiabilityTradeAndOtherPayables',
  ExpenseOfficeExpenses = 'ExpenseOfficeExpenses',
  OtherCurrentLiability = 'OtherCurrentLiability',
  OtherExpenseExtraordinaryItems = 'OtherExpenseExtraordinaryItems',
  RevenueOtherPrimaryIncome = 'RevenueOtherPrimaryIncome',
  LiabilityLiabilitiesRelatedToAssetsHeldForSale = 'LiabilityLiabilitiesRelatedToAssetsHeldForSale',
  EquityPreferredStock = 'EquityPreferredStock',
  OtherExpenseExceptionalItems = 'OtherExpenseExceptionalItems',
  OtherExpenseMortgageInterest = 'OtherExpenseMortgageInterest',
  ExpenseManagementCompensation = 'ExpenseManagementCompensation',
  AssetOtherLongTermLoansAndAdvances = 'AssetOtherLongTermLoansAndAdvances',
  AssetBuildings = 'AssetBuildings',
  CostOfGoodsSoldShippingFreightDeliveryCos = 'CostOfGoodsSoldShippingFreightDeliveryCos',
  RevenueUnappliedCashPaymentIncome = 'RevenueUnappliedCashPaymentIncome',
  AssetFixedAssetFurniture = 'AssetFixedAssetFurniture',
  AssetOtherEarMarkedBankAccounts = 'AssetOtherEarMarkedBankAccounts',
  CostOfGoodsSoldSuppliesMaterialsCogs = 'CostOfGoodsSoldSuppliesMaterialsCogs',
  AssetUndepositedFunds = 'AssetUndepositedFunds',
  LiabilityObligationsUnderFinanceLeases = 'LiabilityObligationsUnderFinanceLeases',
  OtherCurrentLiabilityStaffAndRelatedLiabilityAccounts = 'OtherCurrentLiabilityStaffAndRelatedLiabilityAccounts',
  AssetParticipatingInterests = 'AssetParticipatingInterests',
  ExpenseFinanceCosts = 'ExpenseFinanceCosts',
  EquityDividendDisbursed = 'EquityDividendDisbursed',
  AssetChecking = 'AssetChecking',
  ExpenseAuto = 'ExpenseAuto',
  ExpenseInterestPaid = 'ExpenseInterestPaid',
  RevenueSavingsByTaxScheme = 'RevenueSavingsByTaxScheme',
  OtherIncome = 'OtherIncome',
  AssetProvisionsNonCurrentAssets = 'AssetProvisionsNonCurrentAssets',
  AssetAssetsAvailableForSale = 'AssetAssetsAvailableForSale',
  OtherCurrentLiabilityDividendsPayable = 'OtherCurrentLiabilityDividendsPayable',
  OtherExpenseVehicleLoan = 'OtherExpenseVehicleLoan',
  AssetLand = 'AssetLand',
  AssetOtherCurrentAsset = 'AssetOtherCurrentAsset',
  ExpenseBorrowingCost = 'ExpenseBorrowingCost',
  ExpenseAdvertisingPromotional = 'ExpenseAdvertisingPromotional',
  ExpenseCommissionsAndFees = 'ExpenseCommissionsAndFees',
  ExpenseCharitableContributions = 'ExpenseCharitableContributions',
  EquityFunds = 'EquityFunds',
  AssetSecurityDeposits = 'AssetSecurityDeposits',
  EquityPartnerDistributions = 'EquityPartnerDistributions',
  AssetVehicles = 'AssetVehicles',
  ExpenseAppropriationsToDepreciation = 'ExpenseAppropriationsToDepreciation',
  ExpenseInsurance = 'ExpenseInsurance',
  AssetBalWithGovtAuthorities = 'AssetBalWithGovtAuthorities',
  AccountsReceivable = 'AccountsReceivable',
  ExpenseRepairMaintenance = 'ExpenseRepairMaintenance',
  LiabilityOtherLongTermLiabilities = 'LiabilityOtherLongTermLiabilities',
  RevenueSalesRetail = 'RevenueSalesRetail',
  AssetLoansToOthers = 'AssetLoansToOthers',
  EquityPartnerContributions = 'EquityPartnerContributions',
  LiabilityBankLoans = 'LiabilityBankLoans',
  AssetInvestmentOther = 'AssetInvestmentOther',
  AssetAccumulatedDepletion = 'AssetAccumulatedDepletion',
  AssetAssetsInCourseOfConstruction = 'AssetAssetsInCourseOfConstruction',
  AssetFixedAssetSoftware = 'AssetFixedAssetSoftware',
  ExpenseEquipmentRental = 'ExpenseEquipmentRental',
  OtherExpenseMatCredit = 'OtherExpenseMatCredit',
  OtherExpenseParkingAndTolls = 'OtherExpenseParkingAndTolls',
  OtherIncomeGainLossOnSaleOfInvestments = 'OtherIncomeGainLossOnSaleOfInvestments',
  OtherIncomeTaxExemptInterest = 'OtherIncomeTaxExemptInterest',
  OtherExpenseRepairsAndMaintenance = 'OtherExpenseRepairsAndMaintenance',
  AssetOtherLongTermAssets = 'AssetOtherLongTermAssets',
  ExpenseSuppliesMaterials = 'ExpenseSuppliesMaterials',
  AssetAvailableForSaleFinancialAssets = 'AssetAvailableForSaleFinancialAssets',
  ExpenseUtilities = 'ExpenseUtilities',
  OtherCurrentLiabilityProvisionsCurrentLiabilities = 'OtherCurrentLiabilityProvisionsCurrentLiabilities',
  OtherExpenseAmortization = 'OtherExpenseAmortization',
  ExpenseRentOrLeaseOfBuildings = 'ExpenseRentOrLeaseOfBuildings',
  AssetMoneyMarket = 'AssetMoneyMarket',
  OtherCurrentLiabilityGlobalTaxSuspense = 'OtherCurrentLiabilityGlobalTaxSuspense',
  EquityCommonStock = 'EquityCommonStock',
  AssetOtherCurrentAssets = 'AssetOtherCurrentAssets',
  LiabilityShareholderNotesPayable = 'LiabilityShareholderNotesPayable',
  AssetCalledUpShareCapitalNotPaid = 'AssetCalledUpShareCapitalNotPaid',
  AssetInternalTransfers = 'AssetInternalTransfers',
  AssetInvestmentTaxExemptSecurities = 'AssetInvestmentTaxExemptSecurities',
  ExpenseSundry = 'ExpenseSundry',
  EquityPersonalExpense = 'EquityPersonalExpense',
  OtherCurrentLiabilityAccruedLiabilities = 'OtherCurrentLiabilityAccruedLiabilities',
  RevenueServiceFeeIncome = 'RevenueServiceFeeIncome',
  AssetOtherIntangibleAssets = 'AssetOtherIntangibleAssets',
  AssetInvestmentMortgageRealEstateLoans = 'AssetInvestmentMortgageRealEstateLoans',
  EquityMoneyReceivedAgainstShareWarrants = 'EquityMoneyReceivedAgainstShareWarrants',
  OtherExpenseGasAndFuel = 'OtherExpenseGasAndFuel',
  RevenueOperatingGrants = 'RevenueOperatingGrants',
  AssetExpenditureAuthorisationsAndLettersOfCredit = 'AssetExpenditureAuthorisationsAndLettersOfCredit',
  EquityAccumulatedAdjustment = 'EquityAccumulatedAdjustment',
  LiabilityGovernmentAndOtherPublicAuthorities = 'LiabilityGovernmentAndOtherPublicAuthorities',
  OtherCurrentLiabilityCurrentTaxLiability = 'OtherCurrentLiabilityCurrentTaxLiability',
  AssetInvestmentUsGovernmentObligations = 'AssetInvestmentUsGovernmentObligations',
  ExpensePenaltiesSettlements = 'ExpensePenaltiesSettlements',
  Asset = 'Asset',
  ExpenseOtherBusinessExpenses = 'ExpenseOtherBusinessExpenses',
  AssetEmployeeCashAdvances = 'AssetEmployeeCashAdvances',
  OtherIncomeOtherMiscellaneousIncome = 'OtherIncomeOtherMiscellaneousIncome',
  OtherCurrentLiabilityInsurancePayable = 'OtherCurrentLiabilityInsurancePayable'
}
export const enum SkuValidation {
  None = 'None',
  LocalUnique = 'LocalUnique',
  GlobalUnique = 'GlobalUnique'
}
export const enum TransactionMethod {
  Mail = 'Mail',
  Mobile = 'Mobile',
  Atm = 'Atm',
  BankBranch = 'BankBranch',
  Telephone = 'Telephone',
  Online = 'Online'
}
export const enum CreditType {
  Prepayment = 'Prepayment',
  Goodwill = 'Goodwill'
}
export const enum Gender {
  Female = 'Female',
  Other = 'Other',
  PreferNotToSay = 'PreferNotToSay',
  Male = 'Male'
}
export const enum EmploymentType {
  Temporary = 'Temporary',
  Contract = 'Contract',
  Volunteer = 'Volunteer',
  Seasonal = 'Seasonal',
  Permanent = 'Permanent',
  PartTime = 'PartTime',
  Internship = 'Internship',
  FullTime = 'FullTime',
  Freelance = 'Freelance'
}
export const enum TimeCycle {
  SemiAnnually = 'SemiAnnually',
  Biennially = 'Biennially',
  AdHoc = 'AdHoc',
  Custom = 'Custom',
  Annually = 'Annually',
  Biweekly = 'Biweekly',
  Hourly = 'Hourly',
  Monthly = 'Monthly',
  Daily = 'Daily',
  Secondly = 'Secondly',
  Weekly = 'Weekly',
  Quarterly = 'Quarterly',
  Minutely = 'Minutely',
  Triennially = 'Triennially',
  SemiMonthly = 'SemiMonthly'
}
export const enum Country {
  Mongolia = 'Mongolia',
  CongoRepublic = 'CongoRepublic',
  Morocco = 'Morocco',
  Greece = 'Greece',
  Rwanda = 'Rwanda',
  Bahamas = 'Bahamas',
  Botswana = 'Botswana',
  Turkmenistan = 'Turkmenistan',
  Lebanon = 'Lebanon',
  Kuwait = 'Kuwait',
  CoteDIvoire = 'CoteDIvoire',
  Austria = 'Austria',
  Cameroon = 'Cameroon',
  Brazil = 'Brazil',
  TimorLeste = 'TimorLeste',
  Gabon = 'Gabon',
  Russia = 'Russia',
  Bahrain = 'Bahrain',
  Eritrea = 'Eritrea',
  Mali = 'Mali',
  Nepal = 'Nepal',
  Cyprus = 'Cyprus',
  Jordan = 'Jordan',
  Laos = 'Laos',
  Angola = 'Angola',
  Malawi = 'Malawi',
  Mexico = 'Mexico',
  Luxembourg = 'Luxembourg',
  Uzbekistan = 'Uzbekistan',
  SouthSudan = 'SouthSudan',
  Singapore = 'Singapore',
  Vanuatu = 'Vanuatu',
  Hungary = 'Hungary',
  Venezuela = 'Venezuela',
  Cuba = 'Cuba',
  Albania = 'Albania',
  TrinidadAndTobago = 'TrinidadAndTobago',
  Canada = 'Canada',
  Azerbaijan = 'Azerbaijan',
  Panama = 'Panama',
  Burundi = 'Burundi',
  Yemen = 'Yemen',
  Norway = 'Norway',
  Kyrgyzstan = 'Kyrgyzstan',
  Bhutan = 'Bhutan',
  Turkey = 'Turkey',
  SanMarino = 'SanMarino',
  Eswatini = 'Eswatini',
  Niger = 'Niger',
  Nicaragua = 'Nicaragua',
  Iran = 'Iran',
  Mozambique = 'Mozambique',
  Afghanistan = 'Afghanistan',
  Italy = 'Italy',
  SaudiArabia = 'SaudiArabia',
  Guatemala = 'Guatemala',
  Libya = 'Libya',
  SaoTomeAndPrincipe = 'SaoTomeAndPrincipe',
  Syria = 'Syria',
  Haiti = 'Haiti',
  MarshallIslands = 'MarshallIslands',
  UnitedArabEmirates = 'UnitedArabEmirates',
  Brunei = 'Brunei',
  NorthKorea = 'NorthKorea',
  CostaRica = 'CostaRica',
  CentralAfricanRepublic = 'CentralAfricanRepublic',
  Barbados = 'Barbados',
  NorthMacedonia = 'NorthMacedonia',
  Poland = 'Poland',
  Oman = 'Oman',
  Pakistan = 'Pakistan',
  SaintLucia = 'SaintLucia',
  SierraLeone = 'SierraLeone',
  SriLanka = 'SriLanka',
  Suriname = 'Suriname',
  Germany = 'Germany',
  Switzerland = 'Switzerland',
  Tajikistan = 'Tajikistan',
  Armenia = 'Armenia',
  Liberia = 'Liberia',
  Finland = 'Finland',
  VaticanCity = 'VaticanCity',
  UnitedKingdom = 'UnitedKingdom',
  Namibia = 'Namibia',
  Lesotho = 'Lesotho',
  Chad = 'Chad',
  Mauritius = 'Mauritius',
  Lithuania = 'Lithuania',
  Mauritania = 'Mauritania',
  Australia = 'Australia',
  Indonesia = 'Indonesia',
  Tunisia = 'Tunisia',
  BosniaAndHerzegovina = 'BosniaAndHerzegovina',
  ElSalvador = 'ElSalvador',
  Denmark = 'Denmark',
  CaboVerde = 'CaboVerde',
  China = 'China',
  Chile = 'Chile',
  Dominica = 'Dominica',
  Comoros = 'Comoros',
  Israel = 'Israel',
  NewZealand = 'NewZealand',
  Ethiopia = 'Ethiopia',
  Senegal = 'Senegal',
  SolomonIslands = 'SolomonIslands',
  Myanmar = 'Myanmar',
  France = 'France',
  Bangladesh = 'Bangladesh',
  Honduras = 'Honduras',
  Ireland = 'Ireland',
  Micronesia = 'Micronesia',
  SaintKittsAndNevis = 'SaintKittsAndNevis',
  Tanzania = 'Tanzania',
  Belize = 'Belize',
  Bolivia = 'Bolivia',
  Cambodia = 'Cambodia',
  Fiji = 'Fiji',
  Guyana = 'Guyana',
  Palestine = 'Palestine',
  PapuaNewGuinea = 'PapuaNewGuinea',
  Estonia = 'Estonia',
  Thailand = 'Thailand',
  Somalia = 'Somalia',
  Palau = 'Palau',
  Slovenia = 'Slovenia',
  Uganda = 'Uganda',
  Ukraine = 'Ukraine',
  Uruguay = 'Uruguay',
  Guinea = 'Guinea',
  Madagascar = 'Madagascar',
  Monaco = 'Monaco',
  Togo = 'Togo',
  Argentina = 'Argentina',
  Tuvalu = 'Tuvalu',
  Peru = 'Peru',
  SaintVincentAndTheGrenadines = 'SaintVincentAndTheGrenadines',
  Malta = 'Malta',
  Bulgaria = 'Bulgaria',
  Ecuador = 'Ecuador',
  Spain = 'Spain',
  Seychelles = 'Seychelles',
  Gambia = 'Gambia',
  SouthKorea = 'SouthKorea',
  India = 'India',
  Algeria = 'Algeria',
  DominicanRepublic = 'DominicanRepublic',
  Iraq = 'Iraq',
  Tonga = 'Tonga',
  Vietnam = 'Vietnam',
  Egypt = 'Egypt',
  Iceland = 'Iceland',
  Malaysia = 'Malaysia',
  Philippines = 'Philippines',
  Qatar = 'Qatar',
  AntiguaAndBarbuda = 'AntiguaAndBarbuda',
  CzechRepublic = 'CzechRepublic',
  EquatorialGuinea = 'EquatorialGuinea',
  Georgia = 'Georgia',
  Kazakhstan = 'Kazakhstan',
  Serbia = 'Serbia',
  CongoDemocraticRepublic = 'CongoDemocraticRepublic',
  Ghana = 'Ghana',
  Belgium = 'Belgium',
  Kiribati = 'Kiribati',
  Latvia = 'Latvia',
  Paraguay = 'Paraguay',
  Benin = 'Benin',
  Colombia = 'Colombia',
  Portugal = 'Portugal',
  SouthAfrica = 'SouthAfrica',
  Montenegro = 'Montenegro',
  Samoa = 'Samoa',
  Djibouti = 'Djibouti',
  Sudan = 'Sudan',
  Maldives = 'Maldives',
  Andorra = 'Andorra',
  Nauru = 'Nauru',
  UnitedStates = 'UnitedStates',
  Zambia = 'Zambia',
  Zimbabwe = 'Zimbabwe',
  Moldova = 'Moldova',
  Liechtenstein = 'Liechtenstein',
  Netherlands = 'Netherlands',
  Grenada = 'Grenada',
  Croatia = 'Croatia',
  Belarus = 'Belarus',
  Nigeria = 'Nigeria',
  Jamaica = 'Jamaica',
  Kenya = 'Kenya',
  Slovakia = 'Slovakia',
  BurkinaFaso = 'BurkinaFaso',
  Romania = 'Romania',
  Sweden = 'Sweden',
  GuineaBissau = 'GuineaBissau',
  Taiwan = 'Taiwan',
  Japan = 'Japan'
}
export const enum FinancialTrackingCategories {
  Division = 'Division',
  Project = 'Project',
  None = 'None',
  Customer = 'Customer',
  Class = 'Class',
  Vendor = 'Vendor',
  CostCenter = 'CostCenter',
  Department = 'Department',
  Location = 'Location',
  Product = 'Product',
  Service = 'Service',
  Other = 'Other',
  Employee = 'Employee'
}
export const enum CreditNoteStatus {
  Issued = 'Issued',
  Disputed = 'Disputed',
  Completed = 'Completed',
  Revised = 'Revised',
  Void = 'Void',
  Pending = 'Pending',
  Applied = 'Applied',
  Cancelled = 'Cancelled',
  Draft = 'Draft'
}
export const enum GlobalTaxType {
  Vat = 'Vat',
  PropertyTax = 'PropertyTax',
  Gst = 'Gst',
  Other = 'Other',
  SalesTax = 'SalesTax',
  ExciseTax = 'ExciseTax',
  CustomsDuty = 'CustomsDuty'
}
export const enum JournalEntryStatus {
  Draft = 'Draft',
  Pending = 'Pending',
  Voided = 'Voided',
  Posted = 'Posted',
  Error = 'Error',
  Corrected = 'Corrected'
}
export const enum PaymentTerm {
  CashOnDelivery = 'CashOnDelivery',
  Prepaid = 'Prepaid',
  Net60 = 'Net60',
  DueEndOfMonth = 'DueEndOfMonth',
  DeferredPayment = 'DeferredPayment',
  UponCompletion = 'UponCompletion',
  Net30 = 'Net30',
  CashWithOrder = 'CashWithOrder',
  Installment = 'Installment',
  CashBeforeShipment = 'CashBeforeShipment',
  Custom = 'Custom',
  Net = 'Net',
  CashInAdvance = 'CashInAdvance',
  DueOnReceipt = 'DueOnReceipt',
  Prepayment = 'Prepayment',
  Net90 = 'Net90'
}
export const enum IdentityProvider {
  Signal = 'Signal',
  Line = 'Line',
  Reddit = 'Reddit',
  Yahoo = 'Yahoo',
  Amazon = 'Amazon',
  Flickr = 'Flickr',
  Telegram = 'Telegram',
  Qq = 'Qq',
  Whatsapp = 'Whatsapp',
  Tumblr = 'Tumblr',
  Tiktok = 'Tiktok',
  Behance = 'Behance',
  Snapchat = 'Snapchat',
  Wechat = 'Wechat',
  Google = 'Google',
  Dribbble = 'Dribbble',
  Twitter = 'Twitter',
  Instagram = 'Instagram',
  Linkedin = 'Linkedin',
  Vimeo = 'Vimeo',
  Slack = 'Slack',
  Discord = 'Discord',
  Facebook = 'Facebook',
  Paypal = 'Paypal',
  Apple = 'Apple',
  Github = 'Github',
  Pinterest = 'Pinterest',
  Foursquare = 'Foursquare',
  Microsoft = 'Microsoft',
  Other = 'Other'
}
export const enum EmploymentAndCandidateStatus {
  InReview = 'InReview',
  New = 'New',
  OnLeave = 'OnLeave',
  Inactive = 'Inactive',
  Terminated = 'Terminated',
  Active = 'Active',
  Hired = 'Hired',
  NotSelected = 'NotSelected',
  Other = 'Other',
  Interviewing = 'Interviewing',
  OfferExtended = 'OfferExtended'
}
export const enum DayOfWeek {
  Saturday = 'Saturday',
  Tuesday = 'Tuesday',
  Sunday = 'Sunday',
  Thursday = 'Thursday',
  Monday = 'Monday',
  Wednesday = 'Wednesday',
  Friday = 'Friday'
}
export const enum OrganizationalRole {
  Other = 'Other',
  Contractor = 'Contractor',
  Employee = 'Employee',
  Manager = 'Manager',
  Admin = 'Admin',
  Supervisor = 'Supervisor',
  Director = 'Director'
}
export const enum ReviewApprovalStatus {
  Rejected = 'Rejected',
  Revised = 'Revised',
  Approved = 'Approved',
  Pending = 'Pending',
  InReview = 'InReview'
}
export const enum AccountEngagementLevel {
  Warm = 'Warm',
  Unknown = 'Unknown',
  Cold = 'Cold',
  Hot = 'Hot'
}
export const enum StakeholderType {
  Competitor = 'Competitor',
  Other = 'Other',
  Partner = 'Partner',
  Vendor = 'Vendor',
  Investor = 'Investor',
  Customer = 'Customer'
}
export const enum CampaignType {
  SearchEngine = 'SearchEngine',
  Email = 'Email',
  Other = 'Other',
  SocialMedia = 'SocialMedia',
  Display = 'Display'
}
export const enum AccountStatus {
  Active = 'Active',
  Suspended = 'Suspended',
  Pending = 'Pending',
  Closed = 'Closed',
  Inactive = 'Inactive'
}
export const enum ContactAddressType {
  Work = 'Work',
  Temporary = 'Temporary',
  Home = 'Home',
  Shipping = 'Shipping',
  Business = 'Business',
  Billing = 'Billing',
  Personal = 'Personal',
  Other = 'Other'
}
export const enum CampaignStatus {
  Planned = 'Planned',
  Archived = 'Archived',
  Cancelled = 'Cancelled',
  Paused = 'Paused',
  Draft = 'Draft',
  Active = 'Active',
  Scheduled = 'Scheduled',
  Completed = 'Completed'
}
export const enum CustomerStatus {
  Pending = 'Pending',
  Inactive = 'Inactive',
  Suspended = 'Suspended',
  Active = 'Active',
  Archived = 'Archived'
}
export const enum CustomerType {
  Online = 'Online',
  B2c = 'B2c',
  Corporate = 'Corporate',
  Wholesale = 'Wholesale',
  B2b = 'B2b',
  Retail = 'Retail'
}
export const enum SocialPlatform {
  Tiktok = 'Tiktok',
  Youtube = 'Youtube',
  Reddit = 'Reddit',
  X = 'X',
  Linkedin = 'Linkedin',
  Pinterest = 'Pinterest',
  Instagram = 'Instagram',
  Snapchat = 'Snapchat',
  Facebook = 'Facebook',
  Tumblr = 'Tumblr',
  OtherSocialPlatform = 'OtherSocialPlatform',
  Twitter = 'Twitter'
}
export const enum LeadLifecycleStatus {
  Open = 'Open',
  Revisited = 'Revisited',
  Lost = 'Lost',
  AttemptedToContact = 'AttemptedToContact',
  InProcess = 'InProcess',
  Unqualified = 'Unqualified',
  Connected = 'Connected',
  BadTiming = 'BadTiming',
  New = 'New',
  Converted = 'Converted'
}
export const enum AccountingAccountType {
  ExpenseAuto = 'ExpenseAuto',
  LiabilityGroupAndAssociates = 'LiabilityGroupAndAssociates',
  OtherCurrentLiabilityLoanPayable = 'OtherCurrentLiabilityLoanPayable',
  OtherExpenseVehicle = 'OtherExpenseVehicle',
  OtherExpenseUtilities = 'OtherExpenseUtilities',
  EquityPersonalIncome = 'EquityPersonalIncome',
  AssetOtherLongTermInvestments = 'AssetOtherLongTermInvestments',
  OtherExpenseVehicleRepairs = 'OtherExpenseVehicleRepairs',
  RevenueServiceFeeIncome = 'RevenueServiceFeeIncome',
  AssetOtherLongTermLoansAndAdvances = 'AssetOtherLongTermLoansAndAdvances',
  AssetOtherFixedAssets = 'AssetOtherFixedAssets',
  AssetChecking = 'AssetChecking',
  EquityTreasuryStock = 'EquityTreasuryStock',
  LiabilityNotesPayable = 'LiabilityNotesPayable',
  AssetGlobalTaxDeferred = 'AssetGlobalTaxDeferred',
  OtherCurrentLiabilityOtherCurrentLiabilities = 'OtherCurrentLiabilityOtherCurrentLiabilities',
  AssetLeaseBuyout = 'AssetLeaseBuyout',
  CostOfGoodsSold = 'CostOfGoodsSold',
  CostOfGoodsSoldFreightAndDeliveryCost = 'CostOfGoodsSoldFreightAndDeliveryCost',
  ExpenseTaxesPaid = 'ExpenseTaxesPaid',
  OtherExpenseHomeOffice = 'OtherExpenseHomeOffice',
  OtherCurrentLiabilityGlobalTaxPayable = 'OtherCurrentLiabilityGlobalTaxPayable',
  OtherCurrentLiabilityStaffAndRelatedLiabilityAccounts = 'OtherCurrentLiabilityStaffAndRelatedLiabilityAccounts',
  OtherExpense = 'OtherExpense',
  OtherCurrentLiabilityPayrollClearing = 'OtherCurrentLiabilityPayrollClearing',
  RevenueSalesOfProductIncome = 'RevenueSalesOfProductIncome',
  AssetLongTermLoansAndAdvancesToRelatedParties = 'AssetLongTermLoansAndAdvancesToRelatedParties',
  LiabilityLongTermDebit = 'LiabilityLongTermDebit',
  LiabilityOtherLongTermLiabilities = 'LiabilityOtherLongTermLiabilities',
  EquityAccumulatedOtherComprehensiveIncome = 'EquityAccumulatedOtherComprehensiveIncome',
  OtherExpenseDepletion = 'OtherExpenseDepletion',
  LiabilityStaffAndRelatedLongTermLiabilityAccounts = 'LiabilityStaffAndRelatedLongTermLiabilityAccounts',
  OtherCurrentLiabilityLineOfCredit = 'OtherCurrentLiabilityLineOfCredit',
  ExpenseUnappliedCashBillPaymentExpense = 'ExpenseUnappliedCashBillPaymentExpense',
  AssetInvestments = 'AssetInvestments',
  ExpenseLegalProfessionalFees = 'ExpenseLegalProfessionalFees',
  RevenueCashReceiptIncome = 'RevenueCashReceiptIncome',
  LiabilityBankLoans = 'LiabilityBankLoans',
  AssetAssetsInCourseOfConstruction = 'AssetAssetsInCourseOfConstruction',
  OtherIncomeGainLossOnSaleOfInvestments = 'OtherIncomeGainLossOnSaleOfInvestments',
  AssetLandAsset = 'AssetLandAsset',
  LiabilityLiabilitiesRelatedToAssetsHeldForSale = 'LiabilityLiabilitiesRelatedToAssetsHeldForSale',
  LiabilityProvisionForLiabilities = 'LiabilityProvisionForLiabilities',
  AssetExpenditureAuthorisationsAndLettersOfCredit = 'AssetExpenditureAuthorisationsAndLettersOfCredit',
  OtherCurrentLiabilityTradeAndOtherPayables = 'OtherCurrentLiabilityTradeAndOtherPayables',
  EquityShareApplicationMoneyPendingAllotment = 'EquityShareApplicationMoneyPendingAllotment',
  RevenueOtherPrimaryIncome = 'RevenueOtherPrimaryIncome',
  AssetSecurityDeposits = 'AssetSecurityDeposits',
  AssetOtherIntangibleAssets = 'AssetOtherIntangibleAssets',
  EquityEstimatedTaxes = 'EquityEstimatedTaxes',
  ExpenseManagementCompensation = 'ExpenseManagementCompensation',
  ExpenseProjectStudiesSurveysAssessments = 'ExpenseProjectStudiesSurveysAssessments',
  OtherCurrentLiabilityInsurancePayable = 'OtherCurrentLiabilityInsurancePayable',
  AssetAccumulatedDepreciation = 'AssetAccumulatedDepreciation',
  LiabilityLongTermBorrowings = 'LiabilityLongTermBorrowings',
  OtherExpenseVehicleLoanInterest = 'OtherExpenseVehicleLoanInterest',
  OtherCurrentLiabilityCurrentPortionEmployeeBenefitsObligations = 'OtherCurrentLiabilityCurrentPortionEmployeeBenefitsObligations',
  ExpenseEntertainment = 'ExpenseEntertainment',
  CostOfGoodsSoldCostOfLaborCos = 'CostOfGoodsSoldCostOfLaborCos',
  OtherCurrentLiabilityTrustAccountsLiabilities = 'OtherCurrentLiabilityTrustAccountsLiabilities',
  ExpenseLossOnDiscontinuedOperationsNetOfTax = 'ExpenseLossOnDiscontinuedOperationsNetOfTax',
  ExpenseAppropriationsToDepreciation = 'ExpenseAppropriationsToDepreciation',
  AssetMachineryAndEquipment = 'AssetMachineryAndEquipment',
  AssetPrepaidExpenses = 'AssetPrepaidExpenses',
  AssetOtherAsset = 'AssetOtherAsset',
  OtherCurrentLiabilitySalesTaxPayable = 'OtherCurrentLiabilitySalesTaxPayable',
  AssetBuildings = 'AssetBuildings',
  AssetDevelopmentCosts = 'AssetDevelopmentCosts',
  AssetOrganizationalCosts = 'AssetOrganizationalCosts',
  RevenueSavingsByTaxScheme = 'RevenueSavingsByTaxScheme',
  ExpenseUtilities = 'ExpenseUtilities',
  RevenueNonProfitIncome = 'RevenueNonProfitIncome',
  OtherExpenseOtherMiscellaneousExpense = 'OtherExpenseOtherMiscellaneousExpense',
  AssetUndepositedFunds = 'AssetUndepositedFunds',
  OtherCurrentLiabilityDutiesAndTaxes = 'OtherCurrentLiabilityDutiesAndTaxes',
  EquityOpeningBalanceEquity = 'EquityOpeningBalanceEquity',
  ExpenseDuesSubscriptions = 'ExpenseDuesSubscriptions',
  LiabilityLongTermEmployeeBenefitObligations = 'LiabilityLongTermEmployeeBenefitObligations',
  OtherCurrentLiabilityAccruedLiabilities = 'OtherCurrentLiabilityAccruedLiabilities',
  ExpenseTravelExpensesSellingExpense = 'ExpenseTravelExpensesSellingExpense',
  OtherExpenseWashAndRoadServices = 'OtherExpenseWashAndRoadServices',
  LiabilityDebtsRelatedToParticipatingInterests = 'LiabilityDebtsRelatedToParticipatingInterests',
  AssetInvestmentTaxExemptSecurities = 'AssetInvestmentTaxExemptSecurities',
  OtherExpenseDepreciation = 'OtherExpenseDepreciation',
  OtherExpenseExceptionalItems = 'OtherExpenseExceptionalItems',
  AssetIntangibleAssetsUnderDevelopment = 'AssetIntangibleAssetsUnderDevelopment',
  OtherExpenseExchangeGainOrLoss = 'OtherExpenseExchangeGainOrLoss',
  OtherCurrentLiabilitySundryDebtorsAndCreditors = 'OtherCurrentLiabilitySundryDebtorsAndCreditors',
  AssetInventory = 'AssetInventory',
  OtherExpenseMatCredit = 'OtherExpenseMatCredit',
  EquityAccumulatedAdjustment = 'EquityAccumulatedAdjustment',
  ExpenseTravelExpensesGeneralAndAdminExpenses = 'ExpenseTravelExpensesGeneralAndAdminExpenses',
  OtherCurrentLiabilityDirectDepositPayable = 'OtherCurrentLiabilityDirectDepositPayable',
  OtherCurrentLiabilityCurrentPortionOfObligationsUnderFinanceLeases = 'OtherCurrentLiabilityCurrentPortionOfObligationsUnderFinanceLeases',
  EquityCapitalReserves = 'EquityCapitalReserves',
  AssetRetainage = 'AssetRetainage',
  CostOfGoodsSoldEquipmentRentalCos = 'CostOfGoodsSoldEquipmentRentalCos',
  EquityPartnersEquity = 'EquityPartnersEquity',
  OtherExpenseOtherVehicleExpenses = 'OtherExpenseOtherVehicleExpenses',
  EquityPreferredStock = 'EquityPreferredStock',
  ExpensePromotionalMeals = 'ExpensePromotionalMeals',
  AssetLeaseholdImprovements = 'AssetLeaseholdImprovements',
  AssetLicenses = 'AssetLicenses',
  ExpenseEntertainmentMeals = 'ExpenseEntertainmentMeals',
  CostOfGoodsSoldCostOfSales = 'CostOfGoodsSoldCostOfSales',
  LiabilityAccruedLongTermLiabilities = 'LiabilityAccruedLongTermLiabilities',
  OtherExpenseRepairsAndMaintenance = 'OtherExpenseRepairsAndMaintenance',
  RevenueDiscountsRefundsGiven = 'RevenueDiscountsRefundsGiven',
  ExpenseSuppliesMaterials = 'ExpenseSuppliesMaterials',
  AssetFixedAssetCopiers = 'AssetFixedAssetCopiers',
  OtherCurrentLiabilityProvisionForWarrantyObligations = 'OtherCurrentLiabilityProvisionForWarrantyObligations',
  ExpenseAdvertisingPromotional = 'ExpenseAdvertisingPromotional',
  LiabilityAccruedVacationPayable = 'LiabilityAccruedVacationPayable',
  ExpenseGlobalTaxExpense = 'ExpenseGlobalTaxExpense',
  AssetProvisionsNonCurrentAssets = 'AssetProvisionsNonCurrentAssets',
  OtherExpenseAmortization = 'OtherExpenseAmortization',
  AssetTradeAndOtherReceivables = 'AssetTradeAndOtherReceivables',
  OtherCurrentLiabilityShortTermBorrowings = 'OtherCurrentLiabilityShortTermBorrowings',
  EquityDividendDisbursed = 'EquityDividendDisbursed',
  ExpenseOfficeGeneralAdministrativeExpenses = 'ExpenseOfficeGeneralAdministrativeExpenses',
  ExpenseExternalServices = 'ExpenseExternalServices',
  OtherIncomeUnrealisedLossOnSecuritiesNetOfTax = 'OtherIncomeUnrealisedLossOnSecuritiesNetOfTax',
  AssetProvisionsCurrentAssets = 'AssetProvisionsCurrentAssets',
  OtherExpenseMortgageInterest = 'OtherExpenseMortgageInterest',
  Asset = 'Asset',
  LiabilityProvisionsNonCurrentLiabilities = 'LiabilityProvisionsNonCurrentLiabilities',
  AssetAccumulatedAmortizationOfOtherAssets = 'AssetAccumulatedAmortizationOfOtherAssets',
  AssetAssetsAvailableForSale = 'AssetAssetsAvailableForSale',
  AssetTrustAccounts = 'AssetTrustAccounts',
  OtherExpenseDeferredTaxExpense = 'OtherExpenseDeferredTaxExpense',
  AssetGoodwill = 'AssetGoodwill',
  AssetAccumulatedDepletion = 'AssetAccumulatedDepletion',
  AssetLongTermInvestments = 'AssetLongTermInvestments',
  AssetOtherCurrentAsset = 'AssetOtherCurrentAsset',
  AssetLoansToOfficers = 'AssetLoansToOfficers',
  ExpenseTravel = 'ExpenseTravel',
  OtherCurrentLiabilityPrepaidExpensesPayable = 'OtherCurrentLiabilityPrepaidExpensesPayable',
  AssetDepletableAssets = 'AssetDepletableAssets',
  OtherCurrentLiabilityCurrentLiabilities = 'OtherCurrentLiabilityCurrentLiabilities',
  RevenueIncome = 'RevenueIncome',
  EquityPersonalExpense = 'EquityPersonalExpense',
  CostOfGoodsSoldOtherCostsOfServiceCos = 'CostOfGoodsSoldOtherCostsOfServiceCos',
  EquityCommonStock = 'EquityCommonStock',
  RevenueSalesRetail = 'RevenueSalesRetail',
  OtherExpenseHomeOwnerRentalInsurance = 'OtherExpenseHomeOwnerRentalInsurance',
  OtherIncomeInterestEarned = 'OtherIncomeInterestEarned',
  EquityFunds = 'EquityFunds',
  OtherIncomeLossOnDisposalOfAssets = 'OtherIncomeLossOnDisposalOfAssets',
  OtherExpenseIncomeTaxOtherExpense = 'OtherExpenseIncomeTaxOtherExpense',
  EquityMoneyReceivedAgainstShareWarrants = 'EquityMoneyReceivedAgainstShareWarrants',
  AssetOtherCurrentAssets = 'AssetOtherCurrentAssets',
  ExpenseIncomeTaxExpense = 'ExpenseIncomeTaxExpense',
  OtherExpensePriorPeriodItems = 'OtherExpensePriorPeriodItems',
  OtherIncome = 'OtherIncome',
  AssetLand = 'AssetLand',
  EquityCalledUpShareCapital = 'EquityCalledUpShareCapital',
  OtherExpenseRentAndLease = 'OtherExpenseRentAndLease',
  LiabilityDeferredTaxLiabilities = 'LiabilityDeferredTaxLiabilities',
  OtherCurrentLiabilityGlobalTaxSuspense = 'OtherCurrentLiabilityGlobalTaxSuspense',
  OtherCurrentLiabilityDividendsPayable = 'OtherCurrentLiabilityDividendsPayable',
  AssetOtherConsumables = 'AssetOtherConsumables',
  AssetEmployeeCashAdvances = 'AssetEmployeeCashAdvances',
  AssetIntangibleAssets = 'AssetIntangibleAssets',
  OtherIncomeOtherOperatingIncome = 'OtherIncomeOtherOperatingIncome',
  ExpenseBadDebts = 'ExpenseBadDebts',
  AssetFurnitureAndFixtures = 'AssetFurnitureAndFixtures',
  AssetOtherEarMarkedBankAccounts = 'AssetOtherEarMarkedBankAccounts',
  Equity = 'Equity',
  ExpenseBankCharges = 'ExpenseBankCharges',
  ExpenseOtherBusinessExpenses = 'ExpenseOtherBusinessExpenses',
  AssetInvestmentMortgageRealEstateLoans = 'AssetInvestmentMortgageRealEstateLoans',
  LiabilityShareholderNotesPayable = 'LiabilityShareholderNotesPayable',
  LiabilityObligationsUnderFinanceLeases = 'LiabilityObligationsUnderFinanceLeases',
  RevenueUnappliedCashPaymentIncome = 'RevenueUnappliedCashPaymentIncome',
  ExpensePayrollExpenses = 'ExpensePayrollExpenses',
  RevenueSalesWholesale = 'RevenueSalesWholesale',
  Expense = 'Expense',
  CostOfGoodsSoldSuppliesMaterialsCogs = 'CostOfGoodsSoldSuppliesMaterialsCogs',
  AssetCashOnHand = 'AssetCashOnHand',
  AssetInternalTransfers = 'AssetInternalTransfers',
  LiabilityAccrualsAndDeferredIncome = 'LiabilityAccrualsAndDeferredIncome',
  AssetPrepaymentsAndAccruedIncome = 'AssetPrepaymentsAndAccruedIncome',
  ExpenseTravelMeals = 'ExpenseTravelMeals',
  ExpenseOtherSellingExpenses = 'ExpenseOtherSellingExpenses',
  LiabilityAccountsPayable = 'LiabilityAccountsPayable',
  AssetCumulativeDepreciationOnIntangibleAssets = 'AssetCumulativeDepreciationOnIntangibleAssets',
  EquityEquityInEarningsOfSubsidiuaries = 'EquityEquityInEarningsOfSubsidiuaries',
  LiabilityOutstandingDuesOtherThanMicroSmallEnterprise = 'LiabilityOutstandingDuesOtherThanMicroSmallEnterprise',
  LiabilityGovernmentAndOtherPublicAuthorities = 'LiabilityGovernmentAndOtherPublicAuthorities',
  OtherCurrentLiabilityProvisionsCurrentLiabilities = 'OtherCurrentLiabilityProvisionsCurrentLiabilities',
  RevenueRevenueGeneral = 'RevenueRevenueGeneral',
  OtherIncomeTaxExemptInterest = 'OtherIncomeTaxExemptInterest',
  ExpenseDistributionCosts = 'ExpenseDistributionCosts',
  OtherCurrentLiabilityRentsInTrustLiability = 'OtherCurrentLiabilityRentsInTrustLiability',
  AssetBank = 'AssetBank',
  ExpenseBorrowingCost = 'ExpenseBorrowingCost',
  OtherExpenseParkingAndTolls = 'OtherExpenseParkingAndTolls',
  LiabilityLongTermLiability = 'LiabilityLongTermLiability',
  OtherCurrentLiabilitySocialSecurityAgencies = 'OtherCurrentLiabilitySocialSecurityAgencies',
  RevenueOtherCurrentOperatingIncome = 'RevenueOtherCurrentOperatingIncome',
  EquityHealthcare = 'EquityHealthcare',
  LiabilityCreditCard = 'LiabilityCreditCard',
  ExpenseFinanceCosts = 'ExpenseFinanceCosts',
  AssetSavings = 'AssetSavings',
  AssetDeferredTax = 'AssetDeferredTax',
  AssetAccumulatedAmortization = 'AssetAccumulatedAmortization',
  RevenueOwnWorkCapitalized = 'RevenueOwnWorkCapitalized',
  EquityPaidInCapitalOrSurplus = 'EquityPaidInCapitalOrSurplus',
  AssetCapitalWip = 'AssetCapitalWip',
  AssetFixedAssetPhotoVideo = 'AssetFixedAssetPhotoVideo',
  OtherExpenseVehicleLease = 'OtherExpenseVehicleLease',
  EquityOwnersEquity = 'EquityOwnersEquity',
  AssetInvestmentUsGovernmentObligations = 'AssetInvestmentUsGovernmentObligations',
  OtherExpenseVehicleLoan = 'OtherExpenseVehicleLoan',
  ExpenseEquipmentRental = 'ExpenseEquipmentRental',
  ExpenseAmortizationExpense = 'ExpenseAmortizationExpense',
  AssetFixedAssetComputers = 'AssetFixedAssetComputers',
  OtherExpenseTaxRoundoffGainOrLoss = 'OtherExpenseTaxRoundoffGainOrLoss',
  EquityInvestmentGrants = 'EquityInvestmentGrants',
  AssetProvisionsFixedAssets = 'AssetProvisionsFixedAssets',
  OtherIncomeOtherInvestmentIncome = 'OtherIncomeOtherInvestmentIncome',
  ExpenseOtherCurrentOperatingCharges = 'ExpenseOtherCurrentOperatingCharges',
  LiabilityOutstandingDuesMicroSmallEnterprise = 'LiabilityOutstandingDuesMicroSmallEnterprise',
  AssetAssetsHeldForSale = 'AssetAssetsHeldForSale',
  RevenueOperatingGrants = 'RevenueOperatingGrants',
  EquityOtherFreeReserves = 'EquityOtherFreeReserves',
  OtherCurrentLiabilityFederalIncomeTaxPayable = 'OtherCurrentLiabilityFederalIncomeTaxPayable',
  OtherCurrentLiabilityCurrentTaxLiability = 'OtherCurrentLiabilityCurrentTaxLiability',
  ExpenseShippingFreightDelivery = 'ExpenseShippingFreightDelivery',
  ExpenseOtherRentalCosts = 'ExpenseOtherRentalCosts',
  CostOfGoodsSoldShippingFreightDeliveryCos = 'CostOfGoodsSoldShippingFreightDeliveryCos',
  AssetCashAndCashEquivalents = 'AssetCashAndCashEquivalents',
  ExpenseStaffCosts = 'ExpenseStaffCosts',
  OtherCurrentLiabilityPayrollTaxPayable = 'OtherCurrentLiabilityPayrollTaxPayable',
  OtherExpensePenaltiesSettlements = 'OtherExpensePenaltiesSettlements',
  ExpenseInterestPaid = 'ExpenseInterestPaid',
  AssetNonCurrentAssets = 'AssetNonCurrentAssets',
  ExpenseCostOfLabor = 'ExpenseCostOfLabor',
  ExpenseCharitableContributions = 'ExpenseCharitableContributions',
  OtherCurrentLiability = 'OtherCurrentLiability',
  EquityShareCapital = 'EquityShareCapital',
  ExpenseOtherMiscellaneousServiceCost = 'ExpenseOtherMiscellaneousServiceCost',
  AccountsReceivable = 'AccountsReceivable',
  AssetVehicles = 'AssetVehicles',
  AssetAllowanceForBadDebts = 'AssetAllowanceForBadDebts',
  ExpenseRepairMaintenance = 'ExpenseRepairMaintenance',
  OtherCurrentLiabilityInterestPayables = 'OtherCurrentLiabilityInterestPayables',
  OtherExpenseGasAndFuel = 'OtherExpenseGasAndFuel',
  AssetShortTermLoansAndAdvancesToRelatedParties = 'AssetShortTermLoansAndAdvancesToRelatedParties',
  AssetLoansToOthers = 'AssetLoansToOthers',
  AssetLoansToStockholders = 'AssetLoansToStockholders',
  EquityPartnerDistributions = 'EquityPartnerDistributions',
  ExpenseInsurance = 'ExpenseInsurance',
  OtherExpenseOtherHomeOfficeExpenses = 'OtherExpenseOtherHomeOfficeExpenses',
  AssetShortTermInvestmentsInRelatedParties = 'AssetShortTermInvestmentsInRelatedParties',
  AssetAvailableForSaleFinancialAssets = 'AssetAvailableForSaleFinancialAssets',
  AssetGlobalTaxRefund = 'AssetGlobalTaxRefund',
  AssetOtherLongTermAssets = 'AssetOtherLongTermAssets',
  ExpenseSundry = 'ExpenseSundry',
  AssetBalWithGovtAuthorities = 'AssetBalWithGovtAuthorities',
  OtherIncomeOtherMiscellaneousIncome = 'OtherIncomeOtherMiscellaneousIncome',
  ExpenseOtherExternalServices = 'ExpenseOtherExternalServices',
  ExpenseShippingAndDeliveryExpense = 'ExpenseShippingAndDeliveryExpense',
  AssetFixedAssetFurniture = 'AssetFixedAssetFurniture',
  EquityPartnerContributions = 'EquityPartnerContributions',
  OtherCurrentLiabilityStateLocalIncomeTaxPayable = 'OtherCurrentLiabilityStateLocalIncomeTaxPayable',
  OtherExpenseExtraordinaryItems = 'OtherExpenseExtraordinaryItems',
  ExpenseOfficeExpenses = 'ExpenseOfficeExpenses',
  OtherExpenseVehicleInsurance = 'OtherExpenseVehicleInsurance',
  AssetInvestmentOther = 'AssetInvestmentOther',
  OtherIncomeDividendIncome = 'OtherIncomeDividendIncome',
  AssetCalledUpShareCapitalNotPaid = 'AssetCalledUpShareCapitalNotPaid',
  EquityRetainedEarnings = 'EquityRetainedEarnings',
  AssetFixedAssetSoftware = 'AssetFixedAssetSoftware',
  AssetRentsHeldInTrust = 'AssetRentsHeldInTrust',
  ExpenseCommissionsAndFees = 'ExpenseCommissionsAndFees',
  OtherExpenseVehicleRegistration = 'OtherExpenseVehicleRegistration',
  AssetFixedAsset = 'AssetFixedAsset',
  OtherIncomeGainLossOnSaleOfFixedAssets = 'OtherIncomeGainLossOnSaleOfFixedAssets',
  AssetParticipatingInterests = 'AssetParticipatingInterests',
  AssetFixedAssetOtherToolsEquipment = 'AssetFixedAssetOtherToolsEquipment',
  ExpensePurchasesRebates = 'ExpensePurchasesRebates',
  LiabilityOtherLongTermProvisions = 'LiabilityOtherLongTermProvisions',
  ExpenseExtraordinaryCharges = 'ExpenseExtraordinaryCharges',
  AssetMoneyMarket = 'AssetMoneyMarket',
  AssetFixedAssetPhone = 'AssetFixedAssetPhone',
  ExpenseRentOrLeaseOfBuildings = 'ExpenseRentOrLeaseOfBuildings'
}
export const enum ConversationStatus {
  Deleted = 'Deleted',
  Active = 'Active',
  Archived = 'Archived'
}
export const enum MessageReadStatus {
  Unsent = 'Unsent',
  Failed = 'Failed',
  Sent = 'Sent',
  Delivered = 'Delivered',
  Read = 'Read'
}
export const enum MessageContentType {
  Location = 'Location',
  Image = 'Image',
  Sticker = 'Sticker',
  Video = 'Video',
  Gif = 'Gif',
  Audio = 'Audio',
  File = 'File',
  Contact = 'Contact',
  Voice = 'Voice',
  Link = 'Link',
  Text = 'Text',
  Document = 'Document'
}
export const enum MessageDeliveryStatus {
  Sent = 'Sent',
  Read = 'Read',
  Pending = 'Pending',
  Error = 'Error',
  Undeliverable = 'Undeliverable',
  Delivered = 'Delivered',
  Failed = 'Failed'
}
export const enum CommunicationRole {
  Assistant = 'Assistant',
  Bot = 'Bot',
  Moderator = 'Moderator',
  Member = 'Member',
  User = 'User',
  Guest = 'Guest',
  Admin = 'Admin',
  Service = 'Service',
  Group = 'Group',
  Channel = 'Channel',
  System = 'System',
  Owner = 'Owner'
}
export const enum ParticipantEngagementStatus {
  Banned = 'Banned',
  Inactive = 'Inactive',
  Admin = 'Admin',
  Guest = 'Guest',
  Moderator = 'Moderator',
  Left = 'Left',
  Active = 'Active'
}
export const enum ReactionType {
  Bookmark = 'Bookmark',
  Interested = 'Interested',
  Love = 'Love',
  Angry = 'Angry',
  Sad = 'Sad',
  Wow = 'Wow',
  Like = 'Like',
  Dislike = 'Dislike',
  Laugh = 'Laugh'
}
export const enum SupportTicketPriority {
  Low = 'Low',
  Urgent = 'Urgent',
  Medium = 'Medium',
  High = 'High',
  Immediate = 'Immediate'
}
export const enum IssueLifecycleStatus {
  Resolved = 'Resolved',
  Cancelled = 'Cancelled',
  Closed = 'Closed',
  Open = 'Open',
  InProgress = 'InProgress',
  OnHold = 'OnHold',
  Pending = 'Pending'
}
export const enum SupportQueryType {
  Feedback = 'Feedback',
  Bug = 'Bug',
  Incident = 'Incident',
  Task = 'Task',
  Problem = 'Problem',
  FeatureRequest = 'FeatureRequest',
  Question = 'Question'
}
export const enum ItemEntityStatus {
  Deleted = 'Deleted',
  Inactive = 'Inactive',
  Active = 'Active',
  Archived = 'Archived',
  Pending = 'Pending',
  Completed = 'Completed',
  Suspended = 'Suspended'
}
export const enum Currency {
  IDR = 'IDR',
  TOP = 'TOP',
  CAD = 'CAD',
  OMR = 'OMR',
  KMF = 'KMF',
  WST = 'WST',
  GEL = 'GEL',
  TZS = 'TZS',
  CHF = 'CHF',
  LBP = 'LBP',
  SOS = 'SOS',
  AMD = 'AMD',
  XPF = 'XPF',
  PYG = 'PYG',
  TMT = 'TMT',
  BWP = 'BWP',
  CUC = 'CUC',
  EUR = 'EUR',
  HRK = 'HRK',
  UYU = 'UYU',
  BAM = 'BAM',
  CLP = 'CLP',
  NOK = 'NOK',
  ZWL = 'ZWL',
  MUR = 'MUR',
  BDT = 'BDT',
  JPY = 'JPY',
  LYD = 'LYD',
  TVD = 'TVD',
  NAD = 'NAD',
  MXN = 'MXN',
  USD = 'USD',
  AFN = 'AFN',
  SEK = 'SEK',
  GIP = 'GIP',
  IQD = 'IQD',
  NGN = 'NGN',
  FKP = 'FKP',
  LKR = 'LKR',
  SGD = 'SGD',
  SAR = 'SAR',
  DOP = 'DOP',
  JMD = 'JMD',
  COP = 'COP',
  SRD = 'SRD',
  AZN = 'AZN',
  BTN = 'BTN',
  SZL = 'SZL',
  IMP = 'IMP',
  KWD = 'KWD',
  BSD = 'BSD',
  BND = 'BND',
  JEP = 'JEP',
  MAD = 'MAD',
  UAH = 'UAH',
  GNF = 'GNF',
  PHP = 'PHP',
  ALL = 'ALL',
  DKK = 'DKK',
  AWG = 'AWG',
  DJF = 'DJF',
  VES = 'VES',
  ILS = 'ILS',
  ZMW = 'ZMW',
  CZK = 'CZK',
  ISK = 'ISK',
  SBD = 'SBD',
  TTD = 'TTD',
  MNT = 'MNT',
  ZAR = 'ZAR',
  PKR = 'PKR',
  NZD = 'NZD',
  KPW = 'KPW',
  SHP = 'SHP',
  GMD = 'GMD',
  CRC = 'CRC',
  PEN = 'PEN',
  AED = 'AED',
  CUP = 'CUP',
  ERN = 'ERN',
  PLN = 'PLN',
  MYR = 'MYR',
  KZT = 'KZT',
  SLL = 'SLL',
  BOB = 'BOB',
  ETB = 'ETB',
  MKD = 'MKD',
  FOK = 'FOK',
  KYD = 'KYD',
  XOF = 'XOF',
  GTQ = 'GTQ',
  NPR = 'NPR',
  XAF = 'XAF',
  BRL = 'BRL',
  NIO = 'NIO',
  BYN = 'BYN',
  RSD = 'RSD',
  MRU = 'MRU',
  HNL = 'HNL',
  UGX = 'UGX',
  XCD = 'XCD',
  UZS = 'UZS',
  GHS = 'GHS',
  SDG = 'SDG',
  BBD = 'BBD',
  LAK = 'LAK',
  STN = 'STN',
  KHR = 'KHR',
  TJS = 'TJS',
  JOD = 'JOD',
  HUF = 'HUF',
  INR = 'INR',
  RWF = 'RWF',
  FJD = 'FJD',
  KRW = 'KRW',
  PGK = 'PGK',
  MGA = 'MGA',
  MZN = 'MZN',
  QAR = 'QAR',
  RON = 'RON',
  MMK = 'MMK',
  HKD = 'HKD',
  RUB = 'RUB',
  SCR = 'SCR',
  VUV = 'VUV',
  LRD = 'LRD',
  MWK = 'MWK',
  SYP = 'SYP',
  XDR = 'XDR',
  CVE = 'CVE',
  KID = 'KID',
  MDL = 'MDL',
  THB = 'THB',
  VND = 'VND',
  ARS = 'ARS',
  BZD = 'BZD',
  ANG = 'ANG',
  BMD = 'BMD',
  CNY = 'CNY',
  KGS = 'KGS',
  LSL = 'LSL',
  BGN = 'BGN',
  EGP = 'EGP',
  GYD = 'GYD',
  CDF = 'CDF',
  AOA = 'AOA',
  GBP = 'GBP',
  HTG = 'HTG',
  SSP = 'SSP',
  AUD = 'AUD',
  MOP = 'MOP',
  KES = 'KES',
  PAB = 'PAB',
  GGP = 'GGP',
  TND = 'TND',
  DZD = 'DZD',
  BIF = 'BIF',
  IRR = 'IRR',
  BHD = 'BHD',
  TWD = 'TWD',
  TRY = 'TRY',
  YER = 'YER',
  MVR = 'MVR'
}
export const enum OrderStatus {
  Failed = 'Failed',
  Refunded = 'Refunded',
  AwaitingShipment = 'AwaitingShipment',
  Abandoned = 'Abandoned',
  Completed = 'Completed',
  AwaitingPayment = 'AwaitingPayment',
  Cancelled = 'Cancelled',
  Disputed = 'Disputed',
  AwaitingPickup = 'AwaitingPickup',
  Delivered = 'Delivered',
  Pending = 'Pending',
  OnHold = 'OnHold',
  Shipped = 'Shipped',
  Processing = 'Processing',
  Returned = 'Returned'
}
export const enum DiscountType {
  FixedAmount = 'FixedAmount',
  Percentage = 'Percentage',
  BuyOneGetOne = 'BuyOneGetOne',
  TieredDiscount = 'TieredDiscount',
  ConditionalDiscount = 'ConditionalDiscount'
}
export const enum CustomerEligibilityStatus {
  NewCustomers = 'NewCustomers',
  VipCustomers = 'VipCustomers',
  AllCustomers = 'AllCustomers',
  ReturningCustomers = 'ReturningCustomers',
  SpecificConditions = 'SpecificConditions',
  Other = 'Other'
}
export const enum ImageMimeType {
  ImageWebp = 'ImageWebp',
  ImageGif = 'ImageGif',
  ImageBmp = 'ImageBmp',
  ImageSvgXml = 'ImageSvgXml',
  ImageTiff = 'ImageTiff',
  ImageJpeg = 'ImageJpeg',
  ImagePng = 'ImagePng',
  ImageHeic = 'ImageHeic'
}
export const enum LifecycleStatus {
  Issued = 'Issued',
  Active = 'Active',
  Expired = 'Expired',
  Cancelled = 'Cancelled',
  Suspended = 'Suspended',
  Redeemed = 'Redeemed'
}
export const enum FulfillmentStatus {
  Pending = 'Pending',
  Failure = 'Failure',
  Cancelled = 'Cancelled',
  Delivered = 'Delivered',
  InTransit = 'InTransit',
  Returned = 'Returned'
}
export const enum PaymentMethod {
  CreditCard = 'CreditCard',
  MobileWallet = 'MobileWallet',
  CashOnDelivery = 'CashOnDelivery',
  Check = 'Check',
  Cryptocurrency = 'Cryptocurrency',
  BankTransfer = 'BankTransfer',
  MobilePayment = 'MobilePayment',
  Other = 'Other',
  DebitCard = 'DebitCard',
  Paypal = 'Paypal',
  Cash = 'Cash'
}
export const enum FinancialTransactionStatus {
  Cancelled = 'Cancelled',
  Pending = 'Pending',
  Cleared = 'Cleared',
  Failed = 'Failed',
  Refunded = 'Refunded',
  SettlementInProgress = 'SettlementInProgress',
  Authorized = 'Authorized',
  Disputed = 'Disputed'
}
export const enum OrderingCriteria {
  CreationDate = 'CreationDate',
  Manual = 'Manual',
  Alphabetical = 'Alphabetical',
  PriceDescending = 'PriceDescending',
  Rating = 'Rating',
  Relevance = 'Relevance',
  Popularity = 'Popularity',
  PriceAscending = 'PriceAscending'
}
export const enum ChatType {
  Public = 'Public',
  Group = 'Group',
  Private = 'Private'
}
export const enum AuditOpinionType {
  Qualified = 'Qualified',
  Disclaimer = 'Disclaimer',
  Adverse = 'Adverse',
  Unqualified = 'Unqualified'
}
export const enum InventoryStorageType {
  DistributionCenter = 'DistributionCenter',
  OnlineMarketplace = 'OnlineMarketplace',
  Other = 'Other',
  Warehouse = 'Warehouse',
  Consignment = 'Consignment',
  DropShipper = 'DropShipper',
  RetailStore = 'RetailStore'
}
export const enum ProductAvailabilityStatus {
  PreOrder = 'PreOrder',
  Discontinued = 'Discontinued',
  BackOrder = 'BackOrder',
  InStock = 'InStock',
  OutOfStock = 'OutOfStock'
}
export const enum ItemCondition {
  Refurbished = 'Refurbished',
  Used = 'Used',
  New = 'New',
  LikeNew = 'LikeNew',
  Damaged = 'Damaged',
  OpenBox = 'OpenBox'
}
export const enum ExpenseApprovalStatus {
  Reimbursed = 'Reimbursed',
  Cancelled = 'Cancelled',
  Approved = 'Approved',
  Processed = 'Processed',
  Reviewing = 'Reviewing',
  Pending = 'Pending',
  New = 'New',
  Denied = 'Denied'
}
export const enum FinancialChargeType {
  Commission = 'Commission',
  Other = 'Other',
  LateFee = 'LateFee',
  TransactionFee = 'TransactionFee',
  ServiceCharge = 'ServiceCharge',
  InterestCharge = 'InterestCharge',
  ProcessingFee = 'ProcessingFee'
}
export const enum ItemAvailabilityStatus {
  Inactive = 'Inactive',
  OutOfStock = 'OutOfStock',
  Discontinued = 'Discontinued',
  Active = 'Active'
}
export const enum FinancialAccountStatus {
  Delinquent = 'Delinquent',
  Active = 'Active',
  Closed = 'Closed',
  Inactive = 'Inactive',
  UnderReview = 'UnderReview',
  Frozen = 'Frozen',
  Suspended = 'Suspended'
}
export const enum TransactionStatus {
  Pending = 'Pending',
  Cancelled = 'Cancelled',
  Initiated = 'Initiated',
  InProgress = 'InProgress',
  Error = 'Error',
  Succeeded = 'Succeeded',
  Failed = 'Failed'
}
export const enum BillingStatus {
  Overdue = 'Overdue',
  Paid = 'Paid',
  PartiallyPaid = 'PartiallyPaid',
  Pending = 'Pending',
  Unpaid = 'Unpaid'
}
export const enum TransactionType {
  Charge = 'Charge',
  Payment = 'Payment',
  Deposit = 'Deposit',
  Adjustment = 'Adjustment',
  Transfer = 'Transfer',
  Withdrawal = 'Withdrawal',
  Fee = 'Fee',
  Refund = 'Refund'
}
export const enum VisibilityScope {
  Global = 'Global',
  Internal = 'Internal',
  Private = 'Private',
  Web = 'Web',
  App = 'App'
}
export const enum PaymentStatus {
  Disputed = 'Disputed',
  Overdue = 'Overdue',
  Failed = 'Failed',
  Pending = 'Pending',
  Refunded = 'Refunded',
  Partial = 'Partial',
  Draft = 'Draft',
  Adjusted = 'Adjusted',
  Processing = 'Processing',
  Succeeded = 'Succeeded',
  Cancelled = 'Cancelled',
  Error = 'Error',
  PartiallyRefunded = 'PartiallyRefunded'
}
export const enum InvoiceAdjustmentType {
  Tip = 'Tip',
  Other = 'Other',
  Discount = 'Discount',
  Shipping = 'Shipping',
  Tax = 'Tax'
}
export const enum DataType {
  String = 'String',
  Boolean = 'Boolean',
  Binary = 'Binary',
  Number = 'Number',
  Date = 'Date',
  Object = 'Object',
  Array = 'Array',
  Null = 'Null',
  Json = 'Json',
  Undefined = 'Undefined'
}
export const enum EntityLifecycleStatus {
  Active = 'Active',
  Archived = 'Archived',
  Deleted = 'Deleted',
  Preorder = 'Preorder',
  Draft = 'Draft',
  Inactive = 'Inactive',
  Scheduled = 'Scheduled'
}
export const enum TransactionChannel {
  InPerson = 'InPerson',
  Online = 'Online',
  Mobile = 'Mobile',
  Mail = 'Mail',
  Telephone = 'Telephone',
  Atm = 'Atm',
  BankBranch = 'BankBranch',
  Other = 'Other'
}
export const enum FinancialDisputeStatus {
  ChargeRefunded = 'ChargeRefunded',
  Escalated = 'Escalated',
  Closed = 'Closed',
  NeedsResponse = 'NeedsResponse',
  Lost = 'Lost',
  AwaitingEvidence = 'AwaitingEvidence',
  Won = 'Won',
  UnderReview = 'UnderReview'
}
export const enum ContentVisibility {
  Protected = 'Protected',
  Public = 'Public',
  Private = 'Private',
  Shared = 'Shared',
  Internal = 'Internal'
}
export const enum EmailCategoryType {
  Governmental = 'Governmental',
  Transactional = 'Transactional',
  Promotional = 'Promotional',
  Spam = 'Spam',
  Personal = 'Personal',
  Other = 'Other',
  Educational = 'Educational',
  Business = 'Business'
}
export const enum DeviceUsageType {
  Personal = 'Personal',
  Business = 'Business',
  Educational = 'Educational',
  Industrial = 'Industrial',
  Other = 'Other',
  Healthcare = 'Healthcare'
}
export const enum UniversalIdentifierType {
  Email = 'Email',
  Url = 'Url',
  Uuid = 'Uuid',
  Number = 'Number',
  String = 'String'
}
export const enum EntityCategory {
  Event = 'Event',
  Message = 'Message',
  Other = 'Other',
  Person = 'Person',
  Project = 'Project',
  Document = 'Document',
  User = 'User',
  Task = 'Task'
}
export const enum AccessControlModel {
  Custom = 'Custom',
  None = 'None',
  Mac = 'Mac',
  Abac = 'Abac',
  Dac = 'Dac',
  Rbac = 'Rbac'
}
export const enum ParticipantType {
  ExternalParticipant = 'ExternalParticipant',
  Team = 'Team',
  Group = 'Group',
  User = 'User',
  Organization = 'Organization'
}
export const enum PriorityLevel {
  High = 'High',
  Medium = 'Medium',
  Low = 'Low',
  Urgent = 'Urgent',
  Elevated = 'Elevated'
}
export const enum TaskStatus {
  OnHold = 'OnHold',
  Done = 'Done',
  InProgress = 'InProgress',
  Blocked = 'Blocked',
  Cancelled = 'Cancelled',
  Todo = 'Todo'
}
export const enum GenderIdentity {
  PreferNotToSay = 'PreferNotToSay',
  Female = 'Female',
  Male = 'Male',
  Other = 'Other'
}
export const enum UserStatus {
  Verified = 'Verified',
  Suspended = 'Suspended',
  Pending = 'Pending',
  Active = 'Active',
  Archived = 'Archived',
  Deleted = 'Deleted',
  Inactive = 'Inactive',
  Banned = 'Banned',
  WaitListed = 'WaitListed'
}
export const enum CommunicationMethod {
  InPerson = 'InPerson',
  Email = 'Email',
  Phone = 'Phone',
  Sms = 'Sms',
  PushNotification = 'PushNotification',
  InstantMessage = 'InstantMessage',
  SocialMedia = 'SocialMedia',
  VideoCall = 'VideoCall',
  Other = 'Other',
  Text = 'Text',
  Mail = 'Mail'
}
export const enum PromotionType {
  FreeShipping = 'FreeShipping',
  Percentage = 'Percentage',
  FixedAmount = 'FixedAmount',
  BuyOneGetOne = 'BuyOneGetOne',
  RewardPoints = 'RewardPoints',
  Other = 'Other'
}
export const enum FinancialTransactionType {
  Interest = 'Interest',
  Sale = 'Sale',
  Other = 'Other',
  Payment = 'Payment',
  Charge = 'Charge',
  Withdrawal = 'Withdrawal',
  Refund = 'Refund',
  Transfer = 'Transfer',
  Deposit = 'Deposit',
  Fee = 'Fee',
  Dividend = 'Dividend',
  Chargeback = 'Chargeback',
  Adjustment = 'Adjustment'
}
export const enum MimeType {
  ImagePng = 'ImagePng',
  ImageJpeg = 'ImageJpeg',
  ImageWebp = 'ImageWebp',
  ImageGif = 'ImageGif',
  ImageSvgXml = 'ImageSvgXml'
}
export class UnifiedApi<Type> {
  constructor()
  create(object: Type, options?: UnifiedOptions | undefined | null): Promise<Response<Type>>
  list(filter?: ListFilter | undefined | null, options?: UnifiedOptions | undefined | null): Promise<ListResponse<Type>>
  get(id: string, options?: UnifiedOptions | undefined | null): Promise<Response<Type>>
  update(id: string, object: Type, options?: UnifiedOptions | undefined | null): Promise<Response<Type>>
  count(options?: UnifiedOptions | undefined | null): Promise<Response<Count>>
  delete(id: string, deleteOptions?: DeleteOptions | undefined | null, options?: UnifiedOptions | undefined | null): Promise<Response<Type>>
}
export class IntegrationOS {
  constructor(accessKey: string, options?: IntegrationOsOptions | undefined | null)
  customers(connectionKey: string): UnifiedApi<Customers>
  companies(connectionKey: string): UnifiedApi<Companies>
  leads(connectionKey: string): UnifiedApi<Leads>
  notes(connectionKey: string): UnifiedApi<Notes>
  users(connectionKey: string): UnifiedApi<Users>
  opportunities(connectionKey: string): UnifiedApi<Opportunities>
  orders(connectionKey: string): UnifiedApi<Orders>
  products(connectionKey: string): UnifiedApi<Products>
  tasks(connectionKey: string): UnifiedApi<Tasks>
  jobs(connectionKey: string): UnifiedApi<Jobs>
  contacts(connectionKey: string): UnifiedApi<Contacts>
  candidates(connectionKey: string): UnifiedApi<Candidates>
  tickets(connectionKey: string): UnifiedApi<Tickets>
  invoices(connectionKey: string): UnifiedApi<Invoices>
  journalentries(connectionKey: string): UnifiedApi<JournalEntries>
  incomestatements(connectionKey: string): UnifiedApi<IncomeStatements>
  balancesheets(connectionKey: string): UnifiedApi<BalanceSheets>
  vendors(connectionKey: string): UnifiedApi<Vendors>
  bills(connectionKey: string): UnifiedApi<Bills>
  payments(connectionKey: string): UnifiedApi<Payments>
  purchaseorders(connectionKey: string): UnifiedApi<PurchaseOrders>
  accounts(connectionKey: string): UnifiedApi<Accounts>
  transactions(connectionKey: string): UnifiedApi<Transactions>
  expenses(connectionKey: string): UnifiedApi<Expenses>
  creditnotes(connectionKey: string): UnifiedApi<CreditNotes>
  taxrates(connectionKey: string): UnifiedApi<TaxRates>
  chats(connectionKey: string): UnifiedApi<Chats>
  messages(connectionKey: string): UnifiedApi<Messages>
}
